#!/bin/bash

echo "üîç LinkedUp Setup Verification"
echo "=============================="

# Check Node.js version
echo "üì¶ Checking Node.js version..."
if command -v node &> /dev/null; then
    NODE_VERSION=$(node -v)
    echo "‚úÖ Node.js: $NODE_VERSION"
else
    echo "‚ùå Node.js not found"
    exit 1
fi

# Check if dependencies are installed
echo "üì¶ Checking dependencies..."
if [ -d "node_modules" ]; then
    echo "‚úÖ Dependencies installed"
else
    echo "‚ùå Dependencies not installed. Run: npm install"
    exit 1
fi

# Check environment variables
echo "üîß Checking environment variables..."
if [ -f ".env" ]; then
    echo "‚úÖ .env file exists"

    # Check required variables
    if grep -q "WORKOS_CLIENT_ID=" .env; then
        echo "‚úÖ WORKOS_CLIENT_ID configured"
    else
        echo "‚ùå WORKOS_CLIENT_ID missing in .env"
    fi

    if grep -q "WORKOS_API_KEY=" .env; then
        echo "‚úÖ WORKOS_API_KEY configured"
    else
        echo "‚ùå WORKOS_API_KEY missing in .env"
    fi

    if grep -q "WORKOS_COOKIE_PASSWORD=" .env; then
        echo "‚úÖ WORKOS_COOKIE_PASSWORD configured"
    else
        echo "‚ùå WORKOS_COOKIE_PASSWORD missing in .env"
    fi
else
    echo "‚ùå .env file not found. Copy from .env.example"
    exit 1
fi

# Check Convex configuration
echo "üîß Checking Convex configuration..."
if [ -f "convex.json" ]; then
    echo "‚úÖ convex.json exists"
else
    echo "‚ùå convex.json not found"
fi

if [ -f "convex/schema.ts" ]; then
    echo "‚úÖ Convex schema exists"
else
    echo "‚ùå Convex schema not found"
fi

if [ -f "convex/auth.config.ts" ]; then
    echo "‚úÖ Convex auth config exists"
else
    echo "‚ùå Convex auth config not found"
fi

# Check if Convex types are generated
echo "üîß Checking Convex types..."
if [ -f "convex/_generated/api.d.ts" ]; then
    echo "‚úÖ Convex types generated"
else
    echo "‚ö†Ô∏è  Convex types not generated. Run: npm run convex:codegen"
fi

# Check TypeScript configuration
echo "üîß Checking TypeScript..."
if [ -f "tsconfig.json" ]; then
    echo "‚úÖ TypeScript config exists"
else
    echo "‚ùå TypeScript config not found"
fi

# Test TypeScript compilation
echo "üîç Testing TypeScript compilation..."
if npm run type-check > /dev/null 2>&1; then
    echo "‚úÖ TypeScript compilation successful"
else
    echo "‚ùå TypeScript compilation failed. Run: npm run type-check"
fi

echo ""
echo "üöÄ Setup Status Summary:"
echo "======================="

# Count checks
TOTAL_CHECKS=8
PASSED_CHECKS=0

# Recheck everything for summary
command -v node &> /dev/null && ((PASSED_CHECKS++))
[ -d "node_modules" ] && ((PASSED_CHECKS++))
[ -f ".env" ] && ((PASSED_CHECKS++))
grep -q "WORKOS_CLIENT_ID=" .env 2>/dev/null && ((PASSED_CHECKS++))
[ -f "convex.json" ] && ((PASSED_CHECKS++))
[ -f "convex/schema.ts" ] && ((PASSED_CHECKS++))
[ -f "convex/auth.config.ts" ] && ((PASSED_CHECKS++))
[ -f "tsconfig.json" ] && ((PASSED_CHECKS++))

echo "Passed: $PASSED_CHECKS/$TOTAL_CHECKS checks"

if [ $PASSED_CHECKS -eq $TOTAL_CHECKS ]; then
    echo "‚úÖ Setup looks good! Ready to start testing."
    echo ""
    echo "üéØ Next steps:"
    echo "1. Start Convex: npm run convex:dev"
    echo "2. Start Next.js: npm run dev"
    echo "3. Open: http://localhost:3000/auth-test"
else
    echo "‚ùå Setup incomplete. Please fix the issues above."
    exit 1
fi
