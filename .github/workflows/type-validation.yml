name: Type Validation

on:
  push:
    branches: [main, develop]
    paths:
      - "convex/**/*.ts"
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "package.json"
      - "tsconfig.json"
      - "vitest.config.ts"
  pull_request:
    branches: [main, develop]
    paths:
      - "convex/**/*.ts"
      - "src/**/*.ts"
      - "src/**/*.tsx"
      - "package.json"
      - "tsconfig.json"
      - "vitest.config.ts"

jobs:
  type-validation:
    name: Validate Types and Consistency
    runs-on: upnpmtu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: oven-sh/setup-pnpm@v1
        with:
          pnpm-version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript compilation check
        run: pnpm run type-check

      - name: Convex codegen check
        run: pnpm run convex:codegen
        env:
          CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}

      - name: Run type validation tests
        run: pnpm run test:types

      - name: Generate comprehensive type validation report
        run: pnpm run validate-types
        continue-on-error: true

      - name: Upload validation report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: type-validation-report
          path: type-validation-report.md
          retention-days: 30

      - name: Comment PR with validation results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            try {
              const report = fs.readFileSync('type-validation-report.md', 'utf8');

              // Find existing comment
              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const existingComment = comments.find(comment =>
                comment.body.includes('# Convex Type Consistency Validation Report')
              );

              const commentBody = `## üîç Type Validation Results

              ${report}

              <details>
              <summary>‚ÑπÔ∏è About this check</summary>

              This automated check validates:
              - TypeScript compilation without errors
              - Convex type-validator alignment
              - Type consistency across all modules
              - Performance of type validation

              </details>`;

              if (existingComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: commentBody,
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: commentBody,
                });
              }
            } catch (error) {
              console.log('Could not read validation report:', error.message);
            }

  performance-check:
    name: Type Performance Validation
    runs-on: upnpmtu-latest
    timeout-minutes: 5
    needs: type-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: oven-sh/setup-pnpm@v1
        with:
          pnpm-version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run performance tests
        run: pnpm run test convex/types/__tests__/property-based-tests.test.ts --reporter=verbose

      - name: Check pnpmdle size impact
        run: |
          echo "Checking type system pnpmdle impact..."
          pnpm run build

          # Get build stats
          if [ -f ".next/analyze/pnpmdle-analyzer-report.json" ]; then
            echo "pnpmdle analysis available"
          else
            echo "No pnpmdle analysis found - types should have zero runtime impact"
          fi

  compatibility-check:
    name: Cross-Platform Type Compatibility
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8
    strategy:
      matrix:
        os: [upnpmtu-latest, macos-latest, windows-latest]
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: oven-sh/setup-pnpm@v1
        with:
          pnpm-version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: TypeScript compilation check
        run: pnpm run type-check

      - name: Run core type tests
        run: pnpm run test convex/types/__tests__/type-alignment.test.ts
