openapi: 3.0.3
info:
  title: Convex App - OpenAPI 3.0
  version: 0.0.0
servers:
  - url: https://linkedup-dev.convex.cloud
    description: Dev Convex deployment
  - url: https://linkedup-staging.convex.cloud
    description: Staging Convex deployment
  - url: https://linkedup-prod.convex.cloud
    description: Prod Convex deployment
security:
  - bearerAuth: []
tags:
  - name: query
    description: Functions that read data
  - name: mutation
    description: Functions that write/update/delete data
  - name: action
    description: Functions that can make calls to external APIs
  - name: Users
    description: Identity, profile, and authentication operations for LinkedUp users.
  - name: Meetings
    description: Scheduling, managing, and retrieving meeting data.
  - name: Transcripts
    description: Endpoints for accessing call transcripts and transcription controls.
  - name: Insights
    description: AI-generated insights, summaries, and analytics derived from meetings.
  - name: Prompts
    description: Prompt management and AI conversation guidance.
  - name: Notes
    description: Collaborative meeting notes and follow-up documentation.
  - name: WebRTC
    description: Real-time communication, session signalling, and media utilities.
  - name: System
    description: General system endpoints such as health checks and diagnostics.
paths:
  /api/run/meetings/lifecycle/createMeeting:
    post:
      summary: createMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.createMeeting"
            example:
              args:
                title: Quarterly Planning Meeting
                description: Planning the roadmap for next quarter objectives.
                scheduledAt: 1704067200000
                duration: 3600
                participantEmails:
                  - host@example.com
                  - participant@example.com
                recordingEnabled: false
                transcriptionEnabled: true
                meetingType: small-group
                maxParticipants: 8
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.createMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  meetingId: meeting_123example
                  webrtcReady: true
                  videoProvider: webrtc
                  features:
                    recording: false
                    transcription: true
                    maxParticipants: 8
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleCreateMeeting
      description: Creates a new meeting with comprehensive setup and hybrid video provider support.
  /api/run/meetings/lifecycle/addParticipant:
    post:
      summary: addParticipant
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.addParticipant"
            example:
              args:
                meetingId: meeting_123example
                userId: user_456example
                role: participant
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.addParticipant"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  participantId: participant_789example
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleAddParticipant
      description: |-
        Only the meeting host can add participants. Validates that the user exists and is not
        already a participant. Cannot add participants to concluded or cancelled meetings.
        Updates the meeting's participant count automatically.
  /api/run/meetings/lifecycle/addMultipleParticipants:
    post:
      summary: addMultipleParticipants
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.addMultipleParticipants"
            example:
              args:
                meetingId: meeting_123example
                participants:
                  - userId: user_456example
                    role: participant
                  - userId: user_789example
                    role: participant
                  - userId: user_012example
                    role: observer
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.addMultipleParticipants"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  added:
                    - participant_456example
                    - participant_789example
                  skipped:
                    - userId: user_012example
                      reason: User not found
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleAddMultipleParticipants
      description: |-
        Only the meeting host can add participants. Validates each user and skips those who
        are already participants or don't exist. Returns lists of successfully added participants
        and skipped entries with reasons. Updates the meeting's participant count automatically.
  /api/run/meetings/lifecycle/removeParticipant:
    post:
      summary: removeParticipant
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.removeParticipant"
            example:
              args:
                meetingId: meeting_123example
                userId: user_456example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.removeParticipant"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleRemoveParticipant
      description: |-
        can remove participants. Cannot remove the only host from a meeting. Updates the
        meeting's participant count automatically.
  /api/run/meetings/lifecycle/updateParticipantRole:
    post:
      summary: updateParticipantRole
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.updateParticipantRole"
            example:
              args:
                meetingId: meeting_123example
                userId: user_456example
                newRole: host
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.updateParticipantRole"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleUpdateParticipantRole
      description: |-
        Only the meeting host can update roles. Cannot demote the only host to participant.
        Useful for promoting participants to co-hosts or demoting hosts.
  /api/run/meetings/lifecycle/startMeeting:
    post:
      summary: startMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.startMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.startMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  webrtcReady: true
                  videoProvider: webrtc
                  roomInfo:
                    iceServers:
                      - urls: stun:stun.l.google.com:19302
                      - urls: stun:stun1.l.google.com:19302
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleStartMeeting
      description: |-
        infrastructure. Supports hybrid architecture: WebRTC for free tier (up to 4 participants)
        and GetStream for paid tier (up to 100 participants with recording). Only the meeting
        host can start meetings. Provides ICE server configuration for WebRTC or schedules
        GetStream room creation. Automatically initializes transcription services.
  /api/run/meetings/lifecycle/endMeeting:
    post:
      summary: endMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.endMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.endMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  duration: 3600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleEndMeeting
      description: |-
        processing. Only the meeting host can end meetings. Calculates meeting duration and
        schedules cleanup tasks including insights generation, recording processing, and
        resource cleanup. Can only end meetings that are currently active.
  /api/run/meetings/lifecycle/getMeetingConnectionInfo:
    post:
      summary: getMeetingConnectionInfo
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.getMeetingConnectionInfo"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.getMeetingConnectionInfo"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  videoProvider: webrtc
                  connectionInfo:
                    roomId: webrtc_meeting_123example
                    iceServers:
                      - urls: stun:stun.l.google.com:19302
                      - urls: stun:stun1.l.google.com:19302
                  features:
                    recording: false
                    transcription: true
                    maxParticipants: 4
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleGetMeetingConnectionInfo
      description: |-
        Provides different information based on video provider: ICE servers for WebRTC or
        GetStream room ID for paid tier. Includes feature flags for recording, transcription,
        and participant limits. Only available for active meetings.
  /api/run/meetings/lifecycle/joinMeeting:
    post:
      summary: joinMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.joinMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.joinMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  webrtcReady: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleJoinMeeting
      description: |-
        the meeting. Records the join timestamp. Only available for active meetings.
        Participants must be invited to the meeting before joining.
  /api/run/meetings/lifecycle/leaveMeeting:
    post:
      summary: leaveMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.leaveMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.leaveMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleLeaveMeeting
      description: |-
        the meeting. Records the leave timestamp. Does not remove the participant from
        the meeting - they can rejoin if the meeting is still active.
  /api/run/meetings/lifecycle/cancelMeeting:
    post:
      summary: cancelMeeting
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.lifecycle.cancelMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.lifecycle.cancelMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsLifecycleCancelMeeting
      description: |-
        host can cancel meetings. Cannot cancel active meetings (must end them instead).
        Cannot cancel meetings that are already concluded or cancelled.
  /api/run/meetings/queries/getMeeting:
    post:
      summary: getMeeting
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.queries.getMeeting"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.queries.getMeeting"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: meeting_123example
                  _creationTime: 1704063600000
                  organizerId: user_123example
                  title: Quarterly Planning Meeting
                  description: Planning the roadmap for next quarter objectives.
                  scheduledAt: 1704067200000
                  duration: 3600
                  state: scheduled
                  participantCount: 3
                  averageRating: 4.6
                  streamRoomId: stream_room_456
                  webrtcEnabled: true
                  activeWebRTCSessions: 2
                  userRole: host
                  userPresence: invited
                  createdAt: 1704063600000
                  updatedAt: 1704063600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsQueriesGetMeeting
      description: Provides aggregated session metrics and the caller's presence/role snapshot.
  /api/run/meetings/queries/listUserMeetings:
    post:
      summary: listUserMeetings
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.queries.listUserMeetings"
            example:
              args:
                state: active
                limit: 20
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.queries.listUserMeetings"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - _id: meeting_123example
                    organizerId: user_123example
                    title: Quarterly Planning Meeting
                    description: Planning the roadmap for next quarter objectives.
                    scheduledAt: 1704067200000
                    duration: 3600
                    state: active
                    participantCount: 3
                    createdAt: 1704063600000
                    updatedAt: 1704063600000
                    userRole: host
                    userPresence: joined
                  - _id: meeting_456example
                    organizerId: user_789example
                    title: Product Demo
                    scheduledAt: 1704070800000
                    duration: 1800
                    state: active
                    participantCount: 2
                    createdAt: 1704060000000
                    updatedAt: 1704060000000
                    userRole: participant
                    userPresence: joined
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsQueriesListUserMeetings
      description: |-
        with optional filtering by meeting state (scheduled, active, concluded, cancelled).
        Results are sorted by creation time (newest first) and limited to prevent excessive data transfer.
        Includes the user's role and presence status for each meeting.
  /api/run/meetings/queries/listMeetingParticipants:
    post:
      summary: listMeetingParticipants
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.queries.listMeetingParticipants"
            example:
              args:
                meetingId: meeting_123example
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.queries.listMeetingParticipants"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - _id: participant_123example
                    _creationTime: 1704063600000
                    meetingId: meeting_123example
                    userId: user_123example
                    role: host
                    presence: joined
                    joinedAt: 1704067200000
                    createdAt: 1704063600000
                    user:
                      _id: user_123example
                      displayName: Alice Johnson
                      avatarUrl: https://example.com/avatars/alice.jpg
                    webrtcConnected: true
                    webrtcSessionCount: 1
                  - _id: participant_456example
                    _creationTime: 1704063600000
                    meetingId: meeting_123example
                    userId: user_456example
                    role: participant
                    presence: joined
                    joinedAt: 1704067300000
                    createdAt: 1704063600000
                    user:
                      _id: user_456example
                      displayName: Bob Smith
                      avatarUrl: https://example.com/avatars/bob.jpg
                    webrtcConnected: true
                    webrtcSessionCount: 1
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsQueriesListMeetingParticipants
      description: |-
        and real-time WebRTC connection status. Requires the caller to be a participant
        in the meeting. Includes WebRTC session count and connection state for each participant.
  /api/run/users/mutations/upsertUser:
    post:
      summary: upsertUser
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.upsertUser"
            example:
              args:
                workosUserId: org_user_123
                email: member@example.com
                displayName: Member Example
                orgId: org_abc123
                orgRole: member
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.upsertUser"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: user_9f3c2ab457
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsUpsertUser
      description: Upserts a user record based on WorkOS authentication data. If a user with the given WorkOS ID already exists, updates their information; otherwise creates a new user. This is typically called after successful WorkOS authentication to ensure the user exists in the database. Requires authentication token matching the WorkOS user ID being created/updated.
  /api/run/users/mutations/updateUserProfile:
    post:
      summary: updateUserProfile
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.updateUserProfile"
            example:
              args:
                userId: user_9f3c2ab457
                displayName: Updated Name
                bio: Software engineer passionate about building great products.
                goals: Connect with other engineers and learn about new technologies
                languages:
                  - English
                  - Spanish
                experience: 5 years in software development
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.updateUserProfile"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: profiles_d4c1e87a90
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsUpdateUserProfile
      description: Updates or creates a user profile with the provided information. If a profile already exists for the user, updates the specified fields; otherwise creates a new profile. Validates input constraints (display name not empty, bio max 1000 characters). Requires the authenticated user to own the profile or have admin privileges.
  /api/run/users/mutations/updateUserInterests:
    post:
      summary: updateUserInterests
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.updateUserInterests"
            example:
              args:
                userId: user_9f3c2ab457
                interests:
                  - software-engineering
                  - startups
                  - machine-learning
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.updateUserInterests"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsUpdateUserInterests
      description: Replaces all existing user interests with the provided list. Validates that all interest keys exist in the interests catalog before applying changes. Removes all existing interests and creates new associations atomically. Requires the authenticated user to own the profile or have admin privileges.
  /api/run/users/mutations/deactivateUser:
    post:
      summary: deactivateUser
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.deactivateUser"
            example:
              args:
                userId: user_9f3c2ab457
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.deactivateUser"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsDeactivateUser
      description: Marks a user account as inactive, preventing them from accessing the platform. Validates that the user exists and is not already deactivated. In a complete implementation, this would also cancel active meetings, remove from matching queues, and clean up active sessions. Requires the authenticated user to own the account or have admin privileges.
  /api/run/users/mutations/updateLastSeen:
    post:
      summary: updateLastSeen
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.updateLastSeen"
            example:
              args: {}
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.updateLastSeen"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsUpdateLastSeen
      description: Updates the lastSeenAt timestamp for the currently authenticated user to the current time. Used for presence tracking and activity monitoring. This is typically called periodically by the client to indicate the user is still active. Requires authentication.
  /api/run/users/mutations/saveOnboarding:
    post:
      summary: saveOnboarding
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.mutations.saveOnboarding"
            example:
              args:
                age: 25
                gender: prefer-not-to-say
                field: Software
                jobTitle: Engineer
                company: Acme
                linkedinUrl: https://linkedin.com/in/test
                bio: Hello, I build things.
                interests:
                  - id: software-engineering
                    name: Software Engineering
                    category: industry
                  - id: startups
                    name: Startups
                    category: personal
                idempotencyKey: onboarding-test-user
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.mutations.saveOnboarding"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  userId: user_9f3c2ab457
                  profileId: profiles_d4c1e87a90
                  interestsCount: 2
                  onboardingCompleted: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersMutationsSaveOnboarding
      description: Atomically persists a member's onboarding payload – profile metadata, interest selections, and completion flags – while enforcing validation rules and idempotency. The mutation uses a scoped idempotency key so the same payload can be retried without duplicating interests or profiles.
  /api/run/users/queries/getUserById:
    post:
      summary: getUserById
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.queries.getUserById"
            example:
              args:
                userId: user_9f3c2ab457
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.queries.getUserById"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: user_9f3c2ab457
                  _creationTime: 1716403200000
                  workosUserId: org_user_123
                  email: member@example.com
                  displayName: Member Example
                  orgId: org_abc123
                  orgRole: member
                  isActive: true
                  onboardingComplete: true
                  onboardingStartedAt: 1716406800000
                  onboardingCompletedAt: 1716489600000
                  createdAt: 1716403200000
                  updatedAt: 1716489600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersQueriesGetUserById
      description: Returns the full user document for the supplied `userId`. This wrapper exists for non-sensitive tooling and tests; clients should prefer `getCurrentUser` or scoped profile queries when they need authorization filtering.
  /api/run/users/queries/getCurrentUser:
    post:
      summary: getCurrentUser
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.queries.getCurrentUser"
            example:
              args: {}
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.queries.getCurrentUser"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: user_9f3c2ab457
                  _creationTime: 1716403200000
                  workosUserId: org_user_123
                  email: member@example.com
                  displayName: Member Example
                  orgId: org_abc123
                  orgRole: member
                  isActive: true
                  onboardingComplete: true
                  onboardingStartedAt: 1716406800000
                  onboardingCompletedAt: 1716489600000
                  createdAt: 1716403200000
                  updatedAt: 1716489600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersQueriesGetCurrentUser
      description: Returns the full user document for the currently authenticated user based on their WorkOS identity. Returns null if the user is not authenticated, allowing clients to safely subscribe without triggering errors during logged-out states. This is the primary method for retrieving the current user's data in authenticated contexts.
  /api/run/users/queries/getUserProfile:
    post:
      summary: getUserProfile
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.queries.getUserProfile"
            example:
              args:
                userId: user_9f3c2ab457
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.queries.getUserProfile"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: user_9f3c2ab457
                  displayName: Member Example
                  avatarUrl: https://example.com/avatar.jpg
                  isActive: true
                  orgId: org_abc123
                  orgRole: member
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersQueriesGetUserProfile
      description: Returns a user profile with privacy-controlled access to organization information. Organization details (orgId, orgRole) are only included if the requesting user is in the same organization or has admin privileges. Returns null if the user does not exist. Requires authentication.
  /api/run/users/queries/getOnboardingState:
    post:
      summary: getOnboardingState
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.queries.getOnboardingState"
            example:
              args: {}
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.queries.getOnboardingState"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersQueriesGetOnboardingState
      description: Returns the onboarding completion status for the currently authenticated user, including whether they have completed onboarding, whether a profile exists, and the completion timestamp. Used by the frontend to determine which onboarding steps to display. Requires authentication.
  /api/run/users/queries/listActiveUsersInOrg:
    post:
      summary: listActiveUsersInOrg
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_users.queries.listActiveUsersInOrg"
            example:
              args:
                paginationOpts:
                  numItems: 10
                  cursor: null
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_users.queries.listActiveUsersInOrg"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  page:
                    - _id: user_9f3c2ab457
                      displayName: Member Example
                      avatarUrl: https://example.com/avatar1.jpg
                      isActive: true
                    - _id: user_8e2b1cd346
                      displayName: Another Member
                      avatarUrl: https://example.com/avatar2.jpg
                      isActive: true
                  isDone: false
                  continueCursor: cursor_abc123
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunUsersQueriesListActiveUsersInOrg
      description: Returns a paginated list of active users within the authenticated user's organization. Only returns public-safe user data (ID, display name, avatar, active status). Uses index-first query pattern for optimal performance. Returns an empty list if the user is not part of an organization. Requires authentication.
  /api/run/realtime/subscriptions/subscribeMeetingNotes:
    post:
      summary: subscribeMeetingNotes
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptions.subscribeMeetingNotes"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptions.subscribeMeetingNotes"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionsSubscribeMeetingNotes
      description: Real-time meeting notes subscription with permission validation and bandwidth management
  /api/run/realtime/subscriptions/subscribeTranscriptStream:
    post:
      summary: subscribeTranscriptStream
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptions.subscribeTranscriptStream"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptions.subscribeTranscriptStream"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionsSubscribeTranscriptStream
      description: Real-time transcript stream subscription with time-bounded access
  /api/run/realtime/subscriptions/subscribeMeetingParticipants:
    post:
      summary: subscribeMeetingParticipants
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptions.subscribeMeetingParticipants"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptions.subscribeMeetingParticipants"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionsSubscribeMeetingParticipants
      description: Real-time meeting participants subscription
  /api/run/realtime/subscriptions/validateSubscription:
    post:
      summary: validateSubscription
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptions.validateSubscription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptions.validateSubscription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionsValidateSubscription
      description: Called periodically by clients to ensure continued access
  /api/run/audit/logging/getAuditLogs:
    post:
      summary: getAuditLogs
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_audit.logging.getAuditLogs"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_audit.logging.getAuditLogs"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunAuditLoggingGetAuditLogs
      description: Public query to list audit logs by resource
  /api/run/auth/permissions/validateSubscriptionPermissions:
    post:
      summary: validateSubscriptionPermissions
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_auth.permissions.validateSubscriptionPermissions"
            example:
              args:
                resourceType: meetingNotes
                resourceId: me_a12bc34def567890
                requiredPermissions:
                  - read
                  - write
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_auth.permissions.validateSubscriptionPermissions"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  granted: true
                  permissions:
                    - read
                    - write
                    - manage
                    - export
                  metadata: {}
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunAuthPermissionsValidateSubscriptionPermissions
      description: Calls a query at the path auth/permissions.js:validateSubscriptionPermissions
  /api/run/auth/permissions/refreshSubscriptionPermissions:
    post:
      summary: refreshSubscriptionPermissions
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_auth.permissions.refreshSubscriptionPermissions"
            example:
              args:
                subscriptions:
                  - resourceType: meetingNotes
                    resourceId: me_a12bc34def567890
                    permissions:
                      - read
                      - write
                    lastValidated: 1716488400000
                  - resourceType: transcripts
                    resourceId: me_a12bc34def567890
                    permissions:
                      - read
                    lastValidated: 1716485000000
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_auth.permissions.refreshSubscriptionPermissions"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - resourceType: meetingNotes
                    resourceId: me_a12bc34def567890
                    valid: true
                    updatedPermissions:
                      - read
                      - write
                  - resourceType: transcripts
                    resourceId: me_a12bc34def567890
                    valid: true
                    updatedPermissions:
                      - read
                      - export
                      - manage
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunAuthPermissionsRefreshSubscriptionPermissions
      description: Calls a query at the path auth/permissions.js:refreshSubscriptionPermissions
  /api/run/monitoring/bandwidthManager/checkBandwidthLimit:
    post:
      summary: checkBandwidthLimit
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.checkBandwidthLimit"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.checkBandwidthLimit"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerCheckBandwidthLimit
      description: Check bandwidth limits for a user request
  /api/run/monitoring/bandwidthManager/getBandwidthStats:
    post:
      summary: getBandwidthStats
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.getBandwidthStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.getBandwidthStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerGetBandwidthStats
      description: Get bandwidth usage statistics
  /api/run/monitoring/bandwidthManager/executeWithCircuitBreaker:
    post:
      summary: executeWithCircuitBreaker
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.executeWithCircuitBreaker"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.executeWithCircuitBreaker"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerExecuteWithCircuitBreaker
      description: Execute operation with circuit breaker protection
  /api/run/monitoring/bandwidthManager/getCircuitBreakerStatus:
    post:
      summary: getCircuitBreakerStatus
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.getCircuitBreakerStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.getCircuitBreakerStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerGetCircuitBreakerStatus
      description: Get circuit breaker status for all services
  /api/run/monitoring/bandwidthManager/resetCircuitBreaker:
    post:
      summary: resetCircuitBreaker
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.resetCircuitBreaker"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.resetCircuitBreaker"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerResetCircuitBreaker
      description: Reset circuit breaker for a service
  /api/run/monitoring/bandwidthManager/shouldShedLoad:
    post:
      summary: shouldShedLoad
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.bandwidthManager.shouldShedLoad"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.bandwidthManager.shouldShedLoad"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringBandwidthManagerShouldShedLoad
      description: Load shedding based on system load
  /api/run/monitoring/performanceQueries/getPerformanceMetrics:
    post:
      summary: getPerformanceMetrics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.getPerformanceMetrics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.getPerformanceMetrics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesGetPerformanceMetrics
      description: Real-time performance metrics query
  /api/run/monitoring/performanceQueries/getSubscriptionMetrics:
    post:
      summary: getSubscriptionMetrics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.getSubscriptionMetrics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.getSubscriptionMetrics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesGetSubscriptionMetrics
      description: WebSocket subscription performance metrics
  /api/run/monitoring/performanceQueries/getFunctionPerformanceBreakdown:
    post:
      summary: getFunctionPerformanceBreakdown
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.getFunctionPerformanceBreakdown"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.getFunctionPerformanceBreakdown"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesGetFunctionPerformanceBreakdown
      description: Function-level performance breakdown
  /api/run/monitoring/performanceQueries/getSLOStatus:
    post:
      summary: getSLOStatus
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.getSLOStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.getSLOStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesGetSLOStatus
      description: Real-time SLO monitoring with alerting
  /api/run/monitoring/performanceQueries/getPerformanceTrends:
    post:
      summary: getPerformanceTrends
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.getPerformanceTrends"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.getPerformanceTrends"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesGetPerformanceTrends
      description: Performance trend analysis
  /api/run/monitoring/performanceQueries/recordCustomMetric:
    post:
      summary: recordCustomMetric
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_monitoring.performanceQueries.recordCustomMetric"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_monitoring.performanceQueries.recordCustomMetric"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMonitoringPerformanceQueriesRecordCustomMetric
      description: Record custom performance metric
  /api/run/realtime/batchedOperations/batchApplyNoteOperation:
    post:
      summary: batchApplyNoteOperation
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.batchedOperations.batchApplyNoteOperation"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.batchedOperations.batchApplyNoteOperation"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeBatchedOperationsBatchApplyNoteOperation
      description: Batched note operation processing with operational transform
  /api/run/realtime/batchedOperations/batchIngestTranscriptChunk:
    post:
      summary: batchIngestTranscriptChunk
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.batchedOperations.batchIngestTranscriptChunk"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.batchedOperations.batchIngestTranscriptChunk"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeBatchedOperationsBatchIngestTranscriptChunk
      description: Batched transcript ingestion with coalescing
  /api/run/realtime/batchedOperations/batchUpdatePresence:
    post:
      summary: batchUpdatePresence
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.batchedOperations.batchUpdatePresence"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.batchedOperations.batchUpdatePresence"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeBatchedOperationsBatchUpdatePresence
      description: Batched presence updates with latest-state-wins coalescing
  /api/run/realtime/batchedOperations/flushAllBatches:
    post:
      summary: flushAllBatches
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.batchedOperations.flushAllBatches"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.batchedOperations.flushAllBatches"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeBatchedOperationsFlushAllBatches
      description: Flush all pending batches (for testing or shutdown)
  /api/run/realtime/batchedOperations/getBatchStats:
    post:
      summary: getBatchStats
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.batchedOperations.getBatchStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.batchedOperations.getBatchStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeBatchedOperationsGetBatchStats
      description: Get batch processing statistics
  /api/run/realtime/subscriptionManager/establishSubscription:
    post:
      summary: establishSubscription
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptionManager.establishSubscription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptionManager.establishSubscription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionManagerEstablishSubscription
      description: Establishes a new subscription with comprehensive validation
  /api/run/realtime/subscriptionManager/validateAndUpdateSubscription:
    post:
      summary: validateAndUpdateSubscription
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptionManager.validateAndUpdateSubscription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptionManager.validateAndUpdateSubscription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionManagerValidateAndUpdateSubscription
      description: Validates and updates subscription permissions in real-time
  /api/run/realtime/subscriptionManager/terminateSubscription:
    post:
      summary: terminateSubscription
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptionManager.terminateSubscription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptionManager.terminateSubscription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionManagerTerminateSubscription
      description: Terminates subscription and cleans up resources
  /api/run/realtime/subscriptionManager/getSubscriptionStats:
    post:
      summary: getSubscriptionStats
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptionManager.getSubscriptionStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptionManager.getSubscriptionStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionManagerGetSubscriptionStats
      description: Get subscription statistics for monitoring
  /api/run/realtime/subscriptionActions/validateAndLogSubscription:
    post:
      summary: validateAndLogSubscription
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_realtime.subscriptionActions.validateAndLogSubscription"
            example:
              args:
                subscriptionId: sub_meetingNotes_7c88
                lastValidated: 1716489600000
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_realtime.subscriptionActions.validateAndLogSubscription"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  valid: true
                  permissions:
                    - read
                    - write
                  shouldReconnect: false
                  validUntil: 1716493200000
                  rateLimited: false
                  resourceType: meetingNotes
                  resourceId: me_a12bc34def567890
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunRealtimeSubscriptionActionsValidateAndLogSubscription
      description: Calls a action at the path realtime/subscriptionActions.js:validateAndLogSubscription
  /api/run/transcripts/ingestion/ingestTranscriptChunk:
    post:
      summary: ingestTranscriptChunk
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_transcripts.ingestion.ingestTranscriptChunk"
            example:
              args:
                meetingId: jd7xzqn8h9p2v4k5m6n7p8q9
                speakerId: user_alice_123
                text: Let's discuss the Q4 roadmap priorities.
                confidence: 0.92
                startTime: 1698765432000
                endTime: 1698765435500
                language: en
                isInterim: false
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_transcripts.ingestion.ingestTranscriptChunk"
              example:
                status: success
                value:
                  success: true
                  sequence: 42
                  bucketMs: 1698765300000
                  rateLimitRemaining: 95
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunTranscriptsIngestionIngestTranscriptChunk
      description: |-
        validates input parameters, enforces rate limits per user, and stores chunks in
        time-bucketed shards (5-minute windows) to prevent hot partitions. Allocates
        globally unique sequence numbers for ordering. Returns rate limit status for
        client-side throttling.
  /api/run/transcripts/ingestion/getTranscriptChunks:
    post:
      summary: getTranscriptChunks
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_transcripts.ingestion.getTranscriptChunks"
            example:
              args:
                meetingId: jd7xzqn8h9p2v4k5m6n7p8q9
                fromSequence: 0
                limit: 50
                bucketMs: 1698765300000
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_transcripts.ingestion.getTranscriptChunks"
              example:
                status: success
                value:
                  - _id: jh8xzqn8h9p2v4k5m6n7p8r1
                    sequence: 1
                    speakerId: user_alice_123
                    text: Welcome everyone to the meeting.
                    confidence: 0.95
                    startMs: 1698765432000
                    endMs: 1698765434000
                    wordCount: 5
                    language: en
                    createdAt: 1698765434100
                  - _id: jh8xzqn8h9p2v4k5m6n7p8r2
                    sequence: 2
                    speakerId: user_bob_456
                    text: Thanks for having me.
                    confidence: 0.89
                    startMs: 1698765435000
                    endMs: 1698765437000
                    wordCount: 4
                    language: en
                    createdAt: 1698765437100
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunTranscriptsIngestionGetTranscriptChunks
      description: |-
        sequence number and time bucket. Supports pagination with configurable limits
        (max 200 per request). Uses query optimizer for efficient index-backed retrieval.
        Requires meeting participant access. Returns chunks in ascending sequence order.
  /api/run/transcripts/ingestion/getTranscriptStats:
    post:
      summary: getTranscriptStats
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_transcripts.ingestion.getTranscriptStats"
            example:
              args:
                meetingId: jd7xzqn8h9p2v4k5m6n7p8q9
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_transcripts.ingestion.getTranscriptStats"
              example:
                status: success
                value:
                  totalChunks: 127
                  totalWords: 1843
                  averageConfidence: 0.91
                  duration: 1800000
                  speakers:
                    - user_alice_123
                    - user_bob_456
                    - user_carol_789
                  languages:
                    - en
                  bucketCount: 6
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunTranscriptsIngestionGetTranscriptStats
      description: |-
        including total chunks, word count, average confidence, duration, unique speakers,
        languages detected, and bucket count for sharding metrics. Requires meeting
        participant access. Returns zero values for meetings with no transcripts.
  /api/run/insights/generation/generateInsights:
    post:
      summary: generateInsights
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.generation.generateInsights"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                forceRegenerate: false
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.generation.generateInsights"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  insightsGenerated: 2
                  participantInsights:
                    - insights_ck9hx2g1v0001
                    - insights_ck9hx2g1v0002
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsGenerationGenerateInsights
      description: Calls a action at the path insights/generation.js:generateInsights
  /api/run/interests/queries/listCatalog:
    post:
      summary: listCatalog
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_interests.queries.listCatalog"
            example:
              args:
                category: industry
                limit: 6
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_interests.queries.listCatalog"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - key: software-engineering
                    label: Software Engineering
                    category: industry
                    iconName: Code
                    usageCount: 128
                  - key: product-management
                    label: Product Management
                    category: industry
                    iconName: Briefcase
                    usageCount: 94
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInterestsQueriesListCatalog
      description: Calls a query at the path interests/queries.js:listCatalog
  /api/run/embeddings/actions/generateEmbedding:
    post:
      summary: generateEmbedding
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.actions.generateEmbedding"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.actions.generateEmbedding"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsActionsGenerateEmbedding
      description: Generate embedding for content (public)
  /api/run/embeddings/index/getEmbedding:
    post:
      summary: getEmbedding
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.getEmbedding"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.getEmbedding"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGetEmbedding
      description: Calls a query at the path embeddings/index.js:getEmbedding
  /api/run/embeddings/index/getEmbeddingAnalytics:
    post:
      summary: getEmbeddingAnalytics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.getEmbeddingAnalytics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.getEmbeddingAnalytics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGetEmbeddingAnalytics
      description: Calls a query at the path embeddings/index.js:getEmbeddingAnalytics
  /api/run/embeddings/index/getEmbeddingsByModel:
    post:
      summary: getEmbeddingsByModel
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.getEmbeddingsByModel"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.getEmbeddingsByModel"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGetEmbeddingsByModel
      description: Calls a query at the path embeddings/index.js:getEmbeddingsByModel
  /api/run/embeddings/index/getEmbeddingsBySource:
    post:
      summary: getEmbeddingsBySource
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.getEmbeddingsBySource"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.getEmbeddingsBySource"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGetEmbeddingsBySource
      description: Calls a query at the path embeddings/index.js:getEmbeddingsBySource
  /api/run/embeddings/index/getVectorIndexMeta:
    post:
      summary: getVectorIndexMeta
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.getVectorIndexMeta"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.getVectorIndexMeta"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGetVectorIndexMeta
      description: Calls a query at the path embeddings/index.js:getVectorIndexMeta
  /api/run/embeddings/index/vectorSimilaritySearch:
    post:
      summary: vectorSimilaritySearch
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.vectorSimilaritySearch"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.vectorSimilaritySearch"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexVectorSimilaritySearch
      description: Calls a query at the path embeddings/index.js:vectorSimilaritySearch
  /api/run/embeddings/index/generateEmbedding:
    post:
      summary: generateEmbedding
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.index.generateEmbedding"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.index.generateEmbedding"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsIndexGenerateEmbedding
      description: Calls a action at the path embeddings/index.js:generateEmbedding
  /api/run/embeddings/queries/getEmbedding:
    post:
      summary: getEmbedding
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.getEmbedding"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.getEmbedding"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesGetEmbedding
      description: Get embedding by ID (public)
  /api/run/embeddings/queries/getEmbeddingAnalytics:
    post:
      summary: getEmbeddingAnalytics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.getEmbeddingAnalytics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.getEmbeddingAnalytics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesGetEmbeddingAnalytics
      description: Get embedding analytics (public)
  /api/run/embeddings/queries/getEmbeddingsByModel:
    post:
      summary: getEmbeddingsByModel
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.getEmbeddingsByModel"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.getEmbeddingsByModel"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesGetEmbeddingsByModel
      description: Get embeddings by model (public)
  /api/run/embeddings/queries/getEmbeddingsBySource:
    post:
      summary: getEmbeddingsBySource
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.getEmbeddingsBySource"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.getEmbeddingsBySource"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesGetEmbeddingsBySource
      description: Get embeddings by source (public)
  /api/run/embeddings/queries/getVectorIndexMeta:
    post:
      summary: getVectorIndexMeta
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.getVectorIndexMeta"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.getVectorIndexMeta"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesGetVectorIndexMeta
      description: Get vector index metadata (public)
  /api/run/embeddings/queries/vectorSimilaritySearch:
    post:
      summary: vectorSimilaritySearch
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_embeddings.queries.vectorSimilaritySearch"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_embeddings.queries.vectorSimilaritySearch"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunEmbeddingsQueriesVectorSimilaritySearch
      description: Perform vector similarity search (public)
  /api/run/insights/index/deleteInsights:
    post:
      summary: deleteInsights
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.deleteInsights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.deleteInsights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexDeleteInsights
      description: Calls a mutation at the path insights/index.js:deleteInsights
  /api/run/insights/index/getConnectionRecommendations:
    post:
      summary: getConnectionRecommendations
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.getConnectionRecommendations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.getConnectionRecommendations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexGetConnectionRecommendations
      description: Calls a query at the path insights/index.js:getConnectionRecommendations
  /api/run/insights/index/getInsightById:
    post:
      summary: getInsightById
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.getInsightById"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.getInsightById"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexGetInsightById
      description: Calls a query at the path insights/index.js:getInsightById
  /api/run/insights/index/getMeetingInsights:
    post:
      summary: getMeetingInsights
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.getMeetingInsights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.getMeetingInsights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexGetMeetingInsights
      description: Calls a query at the path insights/index.js:getMeetingInsights
  /api/run/insights/index/getUserInsights:
    post:
      summary: getUserInsights
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.getUserInsights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.getUserInsights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexGetUserInsights
      description: Calls a query at the path insights/index.js:getUserInsights
  /api/run/insights/index/updateInsightsFeedback:
    post:
      summary: updateInsightsFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.updateInsightsFeedback"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.updateInsightsFeedback"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexUpdateInsightsFeedback
      description: Calls a mutation at the path insights/index.js:updateInsightsFeedback
  /api/run/insights/index/generateInsights:
    post:
      summary: generateInsights
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.index.generateInsights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.index.generateInsights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsIndexGenerateInsights
      description: Calls a action at the path insights/index.js:generateInsights
  /api/run/insights/mutations/deleteInsights:
    post:
      summary: deleteInsights
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.mutations.deleteInsights"
            example:
              args:
                insightId: insights_ck9hx2g1v0001
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.mutations.deleteInsights"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsMutationsDeleteInsights
      description: Calls a mutation at the path insights/mutations.js:deleteInsights
  /api/run/insights/mutations/updateInsightsFeedback:
    post:
      summary: updateInsightsFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.mutations.updateInsightsFeedback"
            example:
              args:
                insightId: insights_ck9hx2g1v0001
                feedback:
                  read: true
                  useful: true
                  rating: 4
                  notes: The action items were very helpful, but some recommendations were too generic
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.mutations.updateInsightsFeedback"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsMutationsUpdateInsightsFeedback
      description: Calls a mutation at the path insights/mutations.js:updateInsightsFeedback
  /api/run/insights/queries/getConnectionRecommendations:
    post:
      summary: getConnectionRecommendations
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.queries.getConnectionRecommendations"
            example:
              args:
                limit: 5
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.queries.getConnectionRecommendations"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - type: connection
                    content: Consider connecting with other participants to continue the conversation
                    confidence: 0.8
                    meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                    meetingTitle: Product Strategy Sync
                    createdAt: 1714066800000
                  - type: follow-up
                    content: Schedule a follow-up meeting to track progress on action items
                    confidence: 0.75
                    meetingId: me_xyz789
                    meetingTitle: Design System Review
                    createdAt: 1714063200000
                  - type: connection
                    content: Reach out to discuss shared interests in ai-ml and product-strategy
                    confidence: 0.7
                    meetingId: me_abc456
                    meetingTitle: Tech Innovation Discussion
                    createdAt: 1714059600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsQueriesGetConnectionRecommendations
      description: Calls a query at the path insights/queries.js:getConnectionRecommendations
  /api/run/insights/queries/getInsightById:
    post:
      summary: getInsightById
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.queries.getInsightById"
            example:
              args:
                insightId: insights_ck9hx2g1v0001
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.queries.getInsightById"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: insights_ck9hx2g1v0001
                  _creationTime: 1714066800000
                  meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                  summary: This 45-minute meeting involved 2 participants and covered topics including ai-ml, product-strategy, user-research. Key points were documented in the shared notes.
                  actionItems:
                    - Follow up on the AI model training pipeline discussion
                    - Share the user research findings document
                    - Schedule next sprint planning session
                  recommendations:
                    - type: learning
                      content: Consider exploring advanced topics in ai-ml to deepen your expertise
                      confidence: 0.7
                    - type: networking
                      content: Consider connecting with other participants to continue the conversation
                      confidence: 0.8
                  links:
                    - type: resource
                      url: https://example.com/resources/ai-ml
                      title: Learn more about ai-ml
                  createdAt: 1714066800000
                  meetingTitle: Product Strategy Sync
                  meetingDate: 1714066200000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsQueriesGetInsightById
      description: Calls a query at the path insights/queries.js:getInsightById
  /api/run/insights/queries/getMeetingInsights:
    post:
      summary: getMeetingInsights
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.queries.getMeetingInsights"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.queries.getMeetingInsights"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  _id: insights_ck9hx2g1v0001
                  summary: This 45-minute meeting involved 2 participants and covered topics including ai-ml, product-strategy, user-research. Key points were documented in the shared notes.
                  actionItems:
                    - Follow up on the AI model training pipeline discussion
                    - Share the user research findings document
                    - Schedule next sprint planning session
                  recommendations:
                    - type: learning
                      content: Consider exploring advanced topics in ai-ml to deepen your expertise
                      confidence: 0.7
                    - type: networking
                      content: Consider connecting with other participants to continue the conversation
                      confidence: 0.8
                  links:
                    - type: resource
                      url: https://example.com/resources/ai-ml
                      title: Learn more about ai-ml
                  createdAt: 1714066800000
                  meetingTitle: Product Strategy Sync
                  meetingDate: 1714066200000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsQueriesGetMeetingInsights
      description: Calls a query at the path insights/queries.js:getMeetingInsights
  /api/run/insights/queries/getUserInsights:
    post:
      summary: getUserInsights
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_insights.queries.getUserInsights"
            example:
              args:
                limit: 10
                offset: 0
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_insights.queries.getUserInsights"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - _id: insights_ck9hx2g1v0001
                    _creationTime: 1714066800000
                    meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                    summary: This 45-minute meeting involved 2 participants and covered topics including ai-ml, product-strategy.
                    actionItems:
                      - Follow up on the AI model training pipeline discussion
                      - Share the user research findings document
                    recommendations:
                      - type: learning
                        content: Consider exploring advanced topics in ai-ml to deepen your expertise
                        confidence: 0.7
                    createdAt: 1714066800000
                    meetingTitle: Product Strategy Sync
                    meetingDate: 1714066200000
                  - _id: insights_ck9hx2g1v0002
                    _creationTime: 1714063200000
                    meetingId: me_xyz789
                    summary: This 30-minute meeting involved 3 participants and covered topics including design-systems, frontend-architecture.
                    actionItems:
                      - Review the component library documentation
                      - Schedule design review session
                    recommendations:
                      - type: networking
                        content: Consider connecting with other participants to continue the conversation
                        confidence: 0.8
                    createdAt: 1714063200000
                    meetingTitle: Design System Review
                    meetingDate: 1714062600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunInsightsQueriesGetUserInsights
      description: Calls a query at the path insights/queries.js:getUserInsights
  /api/run/matching/analytics/getGlobalMatchingAnalytics:
    post:
      summary: getGlobalMatchingAnalytics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.analytics.getGlobalMatchingAnalytics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.analytics.getGlobalMatchingAnalytics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingAnalyticsGetGlobalMatchingAnalytics
      description: Get global matching analytics (admin only)
  /api/run/matching/analytics/getMatchHistory:
    post:
      summary: getMatchHistory
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.analytics.getMatchHistory"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.analytics.getMatchHistory"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingAnalyticsGetMatchHistory
      description: Get match history for a user
  /api/run/matching/analytics/getMatchingStats:
    post:
      summary: getMatchingStats
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.analytics.getMatchingStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.analytics.getMatchingStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingAnalyticsGetMatchingStats
      description: Get matching statistics for a user
  /api/run/matching/analytics/optimizeMatchingWeights:
    post:
      summary: optimizeMatchingWeights
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.analytics.optimizeMatchingWeights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.analytics.optimizeMatchingWeights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingAnalyticsOptimizeMatchingWeights
      description: Optimize matching weights based on feedback
  /api/run/matching/analytics/submitMatchFeedback:
    post:
      summary: submitMatchFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.analytics.submitMatchFeedback"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.analytics.submitMatchFeedback"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingAnalyticsSubmitMatchFeedback
      description: Submit feedback for a match
  /api/run/matching/engine/runMatchingCycle:
    post:
      summary: runMatchingCycle
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.engine.runMatchingCycle"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.engine.runMatchingCycle"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingEngineRunMatchingCycle
      description: Run matching cycle with shard-based processing for scalability
  /api/run/matching/index/calculateCompatibilityScore:
    post:
      summary: calculateCompatibilityScore
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.calculateCompatibilityScore"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.calculateCompatibilityScore"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexCalculateCompatibilityScore
      description: Calls a action at the path matching/index.js:calculateCompatibilityScore
  /api/run/matching/index/cancelQueueEntry:
    post:
      summary: cancelQueueEntry
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.cancelQueueEntry"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.cancelQueueEntry"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexCancelQueueEntry
      description: Calls a mutation at the path matching/index.js:cancelQueueEntry
  /api/run/matching/index/enterMatchingQueue:
    post:
      summary: enterMatchingQueue
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.enterMatchingQueue"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.enterMatchingQueue"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexEnterMatchingQueue
      description: Calls a mutation at the path matching/index.js:enterMatchingQueue
  /api/run/matching/index/getGlobalMatchingAnalytics:
    post:
      summary: getGlobalMatchingAnalytics
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.getGlobalMatchingAnalytics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.getGlobalMatchingAnalytics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexGetGlobalMatchingAnalytics
      description: Calls a query at the path matching/index.js:getGlobalMatchingAnalytics
  /api/run/matching/index/getMatchHistory:
    post:
      summary: getMatchHistory
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.getMatchHistory"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.getMatchHistory"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexGetMatchHistory
      description: Calls a query at the path matching/index.js:getMatchHistory
  /api/run/matching/index/getMatchingStats:
    post:
      summary: getMatchingStats
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.getMatchingStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.getMatchingStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexGetMatchingStats
      description: Calls a query at the path matching/index.js:getMatchingStats
  /api/run/matching/index/getQueueStatus:
    post:
      summary: getQueueStatus
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.getQueueStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.getQueueStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexGetQueueStatus
      description: Calls a query at the path matching/index.js:getQueueStatus
  /api/run/matching/index/optimizeMatchingWeights:
    post:
      summary: optimizeMatchingWeights
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.optimizeMatchingWeights"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.optimizeMatchingWeights"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexOptimizeMatchingWeights
      description: Calls a action at the path matching/index.js:optimizeMatchingWeights
  /api/run/matching/index/runMatchingCycle:
    post:
      summary: runMatchingCycle
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.runMatchingCycle"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.runMatchingCycle"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexRunMatchingCycle
      description: Calls a action at the path matching/index.js:runMatchingCycle
  /api/run/matching/index/submitMatchFeedback:
    post:
      summary: submitMatchFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.index.submitMatchFeedback"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.index.submitMatchFeedback"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingIndexSubmitMatchFeedback
      description: Calls a mutation at the path matching/index.js:submitMatchFeedback
  /api/run/matching/queue/cancelQueueEntry:
    post:
      summary: cancelQueueEntry
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.queue.cancelQueueEntry"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.queue.cancelQueueEntry"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingQueueCancelQueueEntry
      description: Cancel user's queue entry
  /api/run/matching/queue/enterMatchingQueue:
    post:
      summary: enterMatchingQueue
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.queue.enterMatchingQueue"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.queue.enterMatchingQueue"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingQueueEnterMatchingQueue
      description: Enter the matching queue with availability window and constraints
  /api/run/matching/queue/getActiveQueueEntries:
    post:
      summary: getActiveQueueEntries
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.queue.getActiveQueueEntries"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.queue.getActiveQueueEntries"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingQueueGetActiveQueueEntries
      description: Get active queue entries for matching processing (internal use)
  /api/run/matching/queue/getQueueStatus:
    post:
      summary: getQueueStatus
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.queue.getQueueStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.queue.getQueueStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingQueueGetQueueStatus
      description: Get current queue status for a user
  /api/run/matching/queue/updateQueueStatus:
    post:
      summary: updateQueueStatus
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.queue.updateQueueStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.queue.updateQueueStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingQueueUpdateQueueStatus
      description: Update queue entry status (internal use for matching engine)
  /api/run/matching/scoring/calculateCompatibilityScore:
    post:
      summary: calculateCompatibilityScore
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_matching.scoring.calculateCompatibilityScore"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_matching.scoring.calculateCompatibilityScore"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMatchingScoringCalculateCompatibilityScore
      description: Calculate compatibility score between two users (public API)
  /api/run/meetings/stateTracking/updateSpeakingStats:
    post:
      summary: updateSpeakingStats
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stateTracking.updateSpeakingStats"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stateTracking.updateSpeakingStats"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStateTrackingUpdateSpeakingStats
      description: Updates speaking statistics for a meeting
  /api/run/meetings/stateTracking/updateCurrentTopics:
    post:
      summary: updateCurrentTopics
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stateTracking.updateCurrentTopics"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stateTracking.updateCurrentTopics"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStateTrackingUpdateCurrentTopics
      description: Updates current topics being discussed
  /api/run/meetings/stateTracking/recordActivity:
    post:
      summary: recordActivity
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stateTracking.recordActivity"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stateTracking.recordActivity"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStateTrackingRecordActivity
      description: Records activity to reset lull detection
  /api/run/meetings/stream/index/generateParticipantTokenPublic:
    post:
      summary: generateParticipantTokenPublic
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stream.index.generateParticipantTokenPublic"
            example:
              args:
                meetingId: meeting_123example
                role: participant
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stream.index.generateParticipantTokenPublic"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  userId: user_workos_123
                  user:
                    id: user_workos_123
                    name: Alice Johnson
                    image: https://example.com/avatars/alice.jpg
                  expiresAt: 1704070800
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStreamIndexGenerateParticipantTokenPublic
      description: |-
        authenticated user to join a paid tier meeting. Resolves the user's identity,
        generates a token with appropriate permissions, and returns user details for
        the GetStream client. Tokens expire after 1 hour for security.
  /api/run/meetings/stream/index/startRecording:
    post:
      summary: startRecording
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stream.index.startRecording"
            example:
              args:
                meetingId: meeting_123example
                recordingConfig:
                  mode: available
                  audioOnly: false
                  quality: 720p
                  layout: grid
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stream.index.startRecording"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  recordingId: recording_1704067200000
                  recordingUrl: https://stream-recordings.example.com/recording_1704067200000.mp4
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStreamIndexStartRecording
      description: |-
        layout, and audio settings. Only available for paid tier meetings using GetStream.
        Only the meeting host can start recording. Includes rate limiting (max 3 starts
        per minute) and tracks recording metadata. Updates meeting state to reflect
        active recording. Includes circuit breaker and retry logic for resilience.
  /api/run/meetings/stream/index/stopRecording:
    post:
      summary: stopRecording
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.stream.index.stopRecording"
            example:
              args:
                meetingId: meeting_123example
                recordingId: recording_1704067200000
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.stream.index.stopRecording"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  recordingUrl: https://stream-recordings.example.com/recording_1704067200000.mp4
                  recordingId: recording_1704067200000
                  duration: 3600000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsStreamIndexStopRecording
      description: |-
        recording URL and metadata. Only the meeting host can stop recording. Includes
        rate limiting (max 5 stops per minute) and tracks recording duration. Updates
        meeting state to reflect stopped recording. Includes circuit breaker and retry
        logic for resilience.
  /api/run/meetings/webrtc/index/closeSession:
    post:
      summary: closeSession
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.closeSession"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.closeSession"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexCloseSession
      description: Calls a mutation at the path meetings/webrtc/index.js:closeSession
  /api/run/meetings/webrtc/index/createWebRTCSession:
    post:
      summary: createWebRTCSession
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.createWebRTCSession"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.createWebRTCSession"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexCreateWebRTCSession
      description: Calls a mutation at the path meetings/webrtc/index.js:createWebRTCSession
  /api/run/meetings/webrtc/index/exchangeICECandidate:
    post:
      summary: exchangeICECandidate
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.exchangeICECandidate"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.exchangeICECandidate"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexExchangeICECandidate
      description: Calls a mutation at the path meetings/webrtc/index.js:exchangeICECandidate
  /api/run/meetings/webrtc/index/exchangeSessionDescription:
    post:
      summary: exchangeSessionDescription
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.exchangeSessionDescription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.exchangeSessionDescription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexExchangeSessionDescription
      description: Calls a mutation at the path meetings/webrtc/index.js:exchangeSessionDescription
  /api/run/meetings/webrtc/index/generateParticipantAccessToken:
    post:
      summary: generateParticipantAccessToken
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.generateParticipantAccessToken"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.generateParticipantAccessToken"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexGenerateParticipantAccessToken
      description: Calls a action at the path meetings/webrtc/index.js:generateParticipantAccessToken
  /api/run/meetings/webrtc/index/getActiveSessions:
    post:
      summary: getActiveSessions
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.getActiveSessions"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.getActiveSessions"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexGetActiveSessions
      description: Calls a query at the path meetings/webrtc/index.js:getActiveSessions
  /api/run/meetings/webrtc/index/getPendingSignals:
    post:
      summary: getPendingSignals
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.getPendingSignals"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.getPendingSignals"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexGetPendingSignals
      description: Calls a query at the path meetings/webrtc/index.js:getPendingSignals
  /api/run/meetings/webrtc/index/handleConnectionFailure:
    post:
      summary: handleConnectionFailure
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.handleConnectionFailure"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.handleConnectionFailure"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexHandleConnectionFailure
      description: Calls a action at the path meetings/webrtc/index.js:handleConnectionFailure
  /api/run/meetings/webrtc/index/initializeWebRTCRoom:
    post:
      summary: initializeWebRTCRoom
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.initializeWebRTCRoom"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.initializeWebRTCRoom"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexInitializeWebRTCRoom
      description: Calls a action at the path meetings/webrtc/index.js:initializeWebRTCRoom
  /api/run/meetings/webrtc/index/markSignalsProcessed:
    post:
      summary: markSignalsProcessed
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.markSignalsProcessed"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.markSignalsProcessed"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexMarkSignalsProcessed
      description: Calls a mutation at the path meetings/webrtc/index.js:markSignalsProcessed
  /api/run/meetings/webrtc/index/monitorConnectionQuality:
    post:
      summary: monitorConnectionQuality
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.monitorConnectionQuality"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.monitorConnectionQuality"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexMonitorConnectionQuality
      description: Calls a action at the path meetings/webrtc/index.js:monitorConnectionQuality
  /api/run/meetings/webrtc/index/updateSessionState:
    post:
      summary: updateSessionState
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.index.updateSessionState"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.index.updateSessionState"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcIndexUpdateSessionState
      description: Calls a mutation at the path meetings/webrtc/index.js:updateSessionState
  /api/run/meetings/webrtc/rooms/generateParticipantAccessToken:
    post:
      summary: generateParticipantAccessToken
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.rooms.generateParticipantAccessToken"
            example:
              args:
                meetingId: me_active12345
                sessionId: session_host_live
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.rooms.generateParticipantAccessToken"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.participant-token
                  provider: webrtc
                  roomId: room_live_9f3c2a
                  participantId: session_host_live
                  permissions:
                    canRecord: true
                    canMute: true
                    canKick: true
                    canShare: true
                  success: true
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcRoomsGenerateParticipantAccessToken
      description: Calls a action at the path meetings/webrtc/rooms.js:generateParticipantAccessToken
  /api/run/meetings/webrtc/rooms/handleConnectionFailure:
    post:
      summary: handleConnectionFailure
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.rooms.handleConnectionFailure"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.rooms.handleConnectionFailure"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcRoomsHandleConnectionFailure
      description: Handles WebRTC connection failures with automatic fallback
  /api/run/meetings/webrtc/rooms/initializeWebRTCRoom:
    post:
      summary: initializeWebRTCRoom
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.rooms.initializeWebRTCRoom"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.rooms.initializeWebRTCRoom"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcRoomsInitializeWebRTCRoom
      description: Initializes WebRTC room for a meeting using the provider abstraction
  /api/run/meetings/webrtc/rooms/monitorConnectionQuality:
    post:
      summary: monitorConnectionQuality
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.rooms.monitorConnectionQuality"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.rooms.monitorConnectionQuality"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcRoomsMonitorConnectionQuality
      description: Monitors WebRTC connection quality and provides recommendations
  /api/run/meetings/webrtc/signaling/closeSession:
    post:
      summary: closeSession
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.closeSession"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.closeSession"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingCloseSession
      description: Closes a WebRTC session
  /api/run/meetings/webrtc/signaling/createWebRTCSession:
    post:
      summary: createWebRTCSession
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.createWebRTCSession"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.createWebRTCSession"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingCreateWebRTCSession
      description: Creates a WebRTC session for a meeting
  /api/run/meetings/webrtc/signaling/exchangeICECandidate:
    post:
      summary: exchangeICECandidate
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.exchangeICECandidate"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.exchangeICECandidate"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingExchangeICECandidate
      description: Exchanges ICE candidates for WebRTC connection establishment
  /api/run/meetings/webrtc/signaling/exchangeSessionDescription:
    post:
      summary: exchangeSessionDescription
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.exchangeSessionDescription"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.exchangeSessionDescription"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingExchangeSessionDescription
      description: Exchanges SDP offer/answer for WebRTC negotiation
  /api/run/meetings/webrtc/signaling/getActiveSessions:
    post:
      summary: getActiveSessions
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.getActiveSessions"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.getActiveSessions"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingGetActiveSessions
      description: Gets active WebRTC sessions for a meeting
  /api/run/meetings/webrtc/signaling/getPendingSignals:
    post:
      summary: getPendingSignals
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.getPendingSignals"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.getPendingSignals"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingGetPendingSignals
      description: Gets pending WebRTC signals for a user in a meeting
  /api/run/meetings/webrtc/signaling/markSignalsProcessed:
    post:
      summary: markSignalsProcessed
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.markSignalsProcessed"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.markSignalsProcessed"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingMarkSignalsProcessed
      description: Marks WebRTC signals as processed
  /api/run/meetings/webrtc/signaling/updateSessionState:
    post:
      summary: updateSessionState
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_meetings.webrtc.signaling.updateSessionState"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_meetings.webrtc.signaling.updateSessionState"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunMeetingsWebrtcSignalingUpdateSessionState
      description: Updates WebRTC session state
  /api/run/notes/index/applyNoteOperation:
    post:
      summary: applyNoteOperation
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.applyNoteOperation"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.applyNoteOperation"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexApplyNoteOperation
      description: Calls a mutation at the path notes/index.js:applyNoteOperation
  /api/run/notes/index/batchApplyNoteOperations:
    post:
      summary: batchApplyNoteOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.batchApplyNoteOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.batchApplyNoteOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexBatchApplyNoteOperations
      description: Calls a mutation at the path notes/index.js:batchApplyNoteOperations
  /api/run/notes/index/clearSyncedOperations:
    post:
      summary: clearSyncedOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.clearSyncedOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.clearSyncedOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexClearSyncedOperations
      description: Calls a mutation at the path notes/index.js:clearSyncedOperations
  /api/run/notes/index/createOfflineCheckpoint:
    post:
      summary: createOfflineCheckpoint
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.createOfflineCheckpoint"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.createOfflineCheckpoint"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexCreateOfflineCheckpoint
      description: Calls a mutation at the path notes/index.js:createOfflineCheckpoint
  /api/run/notes/index/getOfflineQueueStatus:
    post:
      summary: getOfflineQueueStatus
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.getOfflineQueueStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.getOfflineQueueStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexGetOfflineQueueStatus
      description: Calls a mutation at the path notes/index.js:getOfflineQueueStatus
  /api/run/notes/index/queueOfflineOperations:
    post:
      summary: queueOfflineOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.queueOfflineOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.queueOfflineOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexQueueOfflineOperations
      description: Calls a mutation at the path notes/index.js:queueOfflineOperations
  /api/run/notes/index/restoreFromCheckpoint:
    post:
      summary: restoreFromCheckpoint
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.restoreFromCheckpoint"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.restoreFromCheckpoint"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexRestoreFromCheckpoint
      description: Calls a mutation at the path notes/index.js:restoreFromCheckpoint
  /api/run/notes/index/retryFailedOperations:
    post:
      summary: retryFailedOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.retryFailedOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.retryFailedOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexRetryFailedOperations
      description: Calls a mutation at the path notes/index.js:retryFailedOperations
  /api/run/notes/index/rollbackToSequence:
    post:
      summary: rollbackToSequence
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.rollbackToSequence"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.rollbackToSequence"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexRollbackToSequence
      description: Calls a mutation at the path notes/index.js:rollbackToSequence
  /api/run/notes/index/syncOfflineOperations:
    post:
      summary: syncOfflineOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.index.syncOfflineOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.index.syncOfflineOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesIndexSyncOfflineOperations
      description: Calls a mutation at the path notes/index.js:syncOfflineOperations
  /api/run/notes/mutations/applyNoteOperation:
    post:
      summary: applyNoteOperation
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.mutations.applyNoteOperation"
            example:
              args:
                meetingId: meeting_123example
                operation:
                  type: insert
                  position: 42
                  content: |
                    Action items:
                    - Follow up on Q4 goals
                clientSequence: 15
                expectedVersion: 8
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.mutations.applyNoteOperation"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  serverSequence: 16
                  transformedOperation:
                    type: insert
                    position: 45
                    content: |
                      Action items:
                      - Follow up on Q4 goals
                  newVersion: 9
                  conflicts: []
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesMutationsApplyNoteOperation
      description: |-
        to resolve conflicts with concurrent edits. The operation is transformed against any
        concurrent operations that occurred after the client's last known state, ensuring
        convergence across all clients. Tracks conflicts and returns the transformed operation
        along with the new document version.
  /api/run/notes/mutations/batchApplyNoteOperations:
    post:
      summary: batchApplyNoteOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.mutations.batchApplyNoteOperations"
            example:
              args:
                meetingId: meeting_123example
                operations:
                  - operation:
                      type: insert
                      position: 0
                      content: |+
                        Meeting Notes - Q4 Planning

                    clientSequence: 10
                  - operation:
                      type: insert
                      position: 30
                      content: |+
                        Attendees:
                        - Alice
                        - Bob

                    clientSequence: 11
                  - operation:
                      type: insert
                      position: 55
                      content: |
                        Agenda:
                        1. Review Q3 results
                        2. Plan Q4 objectives
                    clientSequence: 12
                expectedVersion: 5
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.mutations.batchApplyNoteOperations"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  processed: 3
                  failed: 0
                  results:
                    - serverSequence: 13
                      transformedOperation:
                        type: insert
                        position: 0
                        content: |+
                          Meeting Notes - Q4 Planning

                      conflicts: []
                    - serverSequence: 14
                      transformedOperation:
                        type: insert
                        position: 30
                        content: |+
                          Attendees:
                          - Alice
                          - Bob

                      conflicts: []
                    - serverSequence: 15
                      transformedOperation:
                        type: insert
                        position: 55
                        content: |
                          Agenda:
                          1. Review Q3 results
                          2. Plan Q4 objectives
                      conflicts: []
                  newVersion: 6
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesMutationsBatchApplyNoteOperations
      description: |-
        them sequentially within a single transaction. Each operation is transformed against
        concurrent operations from other clients, ensuring consistency. This is more efficient
        than individual operations for bulk edits like paste operations or undo/redo sequences.
        Returns detailed results for each operation including conflicts detected.
  /api/run/notes/mutations/rollbackToSequence:
    post:
      summary: rollbackToSequence
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.mutations.rollbackToSequence"
            example:
              args:
                meetingId: meeting_123example
                targetSequence: 100
                reason: Removing spam content added by compromised account
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.mutations.rollbackToSequence"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  success: true
                  operationsRemoved: 23
                  newVersion: 101
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesMutationsRollbackToSequence
      description: |-
        the notes document from the remaining operations. This is used for administrative
        recovery from errors or malicious edits. Requires host permissions. The rollback
        is logged in the audit trail with the reason provided. After removing operations,
        the document is rebased from scratch to ensure consistency.
  /api/run/notes/offline/clearSyncedOperations:
    post:
      summary: clearSyncedOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.clearSyncedOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.clearSyncedOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineClearSyncedOperations
      description: Clears synced operations from the offline queue
  /api/run/notes/offline/createOfflineCheckpoint:
    post:
      summary: createOfflineCheckpoint
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.createOfflineCheckpoint"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.createOfflineCheckpoint"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineCreateOfflineCheckpoint
      description: Creates a checkpoint for offline operations
  /api/run/notes/offline/getOfflineQueueStatus:
    post:
      summary: getOfflineQueueStatus
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.getOfflineQueueStatus"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.getOfflineQueueStatus"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineGetOfflineQueueStatus
      description: Gets offline operation queue status for a client
  /api/run/notes/offline/queueOfflineOperations:
    post:
      summary: queueOfflineOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.queueOfflineOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.queueOfflineOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineQueueOfflineOperations
      description: Queues operations for offline sync
  /api/run/notes/offline/restoreFromCheckpoint:
    post:
      summary: restoreFromCheckpoint
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.restoreFromCheckpoint"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.restoreFromCheckpoint"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineRestoreFromCheckpoint
      description: Restores from an offline checkpoint
  /api/run/notes/offline/retryFailedOperations:
    post:
      summary: retryFailedOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.retryFailedOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.retryFailedOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineRetryFailedOperations
      description: Retries failed offline operations
  /api/run/notes/offline/syncOfflineOperations:
    post:
      summary: syncOfflineOperations
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_notes.offline.syncOfflineOperations"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_notes.offline.syncOfflineOperations"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunNotesOfflineSyncOfflineOperations
      description: Syncs queued offline operations with conflict resolution
  /api/run/profiles/queries/getCurrentUserProfile:
    post:
      summary: getCurrentUserProfile
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_profiles.queries.getCurrentUserProfile"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_profiles.queries.getCurrentUserProfile"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunProfilesQueriesGetCurrentUserProfile
      description: Gets current user's profile
  /api/run/profiles/queries/getProfileByUserIdPublic:
    post:
      summary: getProfileByUserIdPublic
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_profiles.queries.getProfileByUserIdPublic"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_profiles.queries.getProfileByUserIdPublic"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunProfilesQueriesGetProfileByUserIdPublic
      description: Gets profile by user ID with authorization
  /api/run/prompts/actions/generatePreCallIdeas:
    post:
      summary: generatePreCallIdeas
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.actions.generatePreCallIdeas"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.actions.generatePreCallIdeas"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  promptIds:
                    - prompts_ck9hx2g1v0001
                    - prompts_ck9hx2g1v0002
                    - prompts_ck9hx2g1v0003
                    - prompts_ck9hx2g1v0004
                    - prompts_ck9hx2g1v0005
                    - prompts_ck9hx2g1v0006
                  generated: true
                  fromCache: false
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsActionsGeneratePreCallIdeas
      description: Calls a action at the path prompts/actions.js:generatePreCallIdeas
  /api/run/prompts/index/getInCallPrompts:
    post:
      summary: getInCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.index.getInCallPrompts"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.index.getInCallPrompts"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsIndexGetInCallPrompts
      description: Calls a query at the path prompts/index.js:getInCallPrompts
  /api/run/prompts/index/getPreCallPrompts:
    post:
      summary: getPreCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.index.getPreCallPrompts"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.index.getPreCallPrompts"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsIndexGetPreCallPrompts
      description: Calls a query at the path prompts/index.js:getPreCallPrompts
  /api/run/prompts/index/subscribeToInCallPrompts:
    post:
      summary: subscribeToInCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.index.subscribeToInCallPrompts"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.index.subscribeToInCallPrompts"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsIndexSubscribeToInCallPrompts
      description: Calls a query at the path prompts/index.js:subscribeToInCallPrompts
  /api/run/prompts/index/updatePromptFeedback:
    post:
      summary: updatePromptFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.index.updatePromptFeedback"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.index.updatePromptFeedback"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsIndexUpdatePromptFeedback
      description: Calls a mutation at the path prompts/index.js:updatePromptFeedback
  /api/run/prompts/index/generatePreCallIdeas:
    post:
      summary: generatePreCallIdeas
      tags:
        - action
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.index.generatePreCallIdeas"
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.index.generatePreCallIdeas"
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsIndexGeneratePreCallIdeas
      description: Calls a action at the path prompts/index.js:generatePreCallIdeas
  /api/run/prompts/mutations/updatePromptFeedback:
    post:
      summary: updatePromptFeedback
      tags:
        - mutation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.mutations.updatePromptFeedback"
            example:
              args:
                promptId: prompts_ck9hx2g1v0001
                feedback: used
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.mutations.updatePromptFeedback"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value: null
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsMutationsUpdatePromptFeedback
      description: Calls a mutation at the path prompts/mutations.js:updatePromptFeedback
  /api/run/prompts/queries/getInCallPrompts:
    post:
      summary: getInCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.queries.getInCallPrompts"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                limit: 5
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.queries.getInCallPrompts"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - _id: prompts_ck9hx3g1v0007
                    content: Let's try a different angle. What's one thing you've learned recently that surprised you?
                    tags:
                      - lull
                      - severe
                      - learning
                    relevance: 0.9
                    createdAt: 1714066805000
                  - _id: prompts_ck9hx3g1v0008
                    content: I'd love to hear everyone's perspective on this. What do you think?
                    tags:
                      - balance
                      - inclusion
                    relevance: 0.85
                    usedAt: 1714066820000
                    feedback: used
                    createdAt: 1714066805000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsQueriesGetInCallPrompts
      description: Calls a query at the path prompts/queries.js:getInCallPrompts
  /api/run/prompts/queries/getPreCallPrompts:
    post:
      summary: getPreCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.queries.getPreCallPrompts"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
                limit: 10
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.queries.getPreCallPrompts"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  - _id: prompts_ck9hx2g1v0001
                    content: I noticed you both have experience with ai-ml. What drew you to this field initially?
                    tags:
                      - shared-interests
                      - background
                    relevance: 0.9
                    createdAt: 1714066800000
                  - _id: prompts_ck9hx2g1v0002
                    content: You come from different backgrounds (Technology, Product). What perspectives do you think each industry brings to problem-solving?
                    tags:
                      - cross-industry
                      - perspectives
                    relevance: 0.85
                    usedAt: 1714066850000
                    feedback: used
                    createdAt: 1714066800000
                  - _id: prompts_ck9hx2g1v0003
                    content: Given your mutual interest in ai-ml, what trends are you most excited about right now?
                    tags:
                      - shared-interests
                      - trends
                    relevance: 0.8
                    feedback: upvoted
                    createdAt: 1714066800000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsQueriesGetPreCallPrompts
      description: Calls a query at the path prompts/queries.js:getPreCallPrompts
  /api/run/prompts/queries/subscribeToInCallPrompts:
    post:
      summary: subscribeToInCallPrompts
      tags:
        - query
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Request_prompts.queries.subscribeToInCallPrompts"
            example:
              args:
                meetingId: me_82f8c0a8bce1a2d5f4e7b6c9
        required: true
      responses:
        "200":
          description: Convex executed your request and returned a result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Response_prompts.queries.subscribeToInCallPrompts"
              example:
                status: success
                errorMessage: ""
                errorData: {}
                value:
                  prompts:
                    - _id: prompts_ck9hx3g1v0010
                      content: What's your take on what we just discussed?
                      tags:
                        - lull
                        - moderate
                        - reflection
                      relevance: 0.8
                      createdAt: 1714066830000
                    - _id: prompts_ck9hx3g1v0009
                      content: Since you both work with ai-ml, what trends are you seeing in that space?
                      tags:
                        - interests
                        - trends
                      relevance: 0.8
                      usedAt: 1714066825000
                      feedback: used
                      createdAt: 1714066805000
                  lastUpdated: 1714066835000
        "400":
          description: Failed operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
        "500":
          description: Convex Internal Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FailedResponse"
      security:
        - bearerAuth: []
      operationId: postApiRunPromptsQueriesSubscribeToInCallPrompts
      description: Calls a query at the path prompts/queries.js:subscribeToInCallPrompts
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Standard user authentication token issued via WorkOS. Provide as `Authorization: Bearer <user-token>`."
    convexDeploy:
      type: apiKey
      in: header
      name: Authorization
      description: Convex deploy key for privileged operations. Use the format `Convex <deploy-key>` and never publish this value.
  schemas:
    Request_meetings.lifecycle.createMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - title
          properties:
            description:
              type: string
            duration:
              type: number
            maxParticipants:
              type: number
            meetingType:
              oneOf:
                - type: string
                  enum:
                    - one-on-one
                - type: string
                  enum:
                    - small-group
                - type: string
                  enum:
                    - large-meeting
                - type: string
                  enum:
                    - webinar
            organizerId:
              type: string
              description: ID from table "users"
            participantEmails:
              type: array
              items:
                type: string
            recordingEnabled:
              type: boolean
            scheduledAt:
              type: number
            title:
              type: string
            transcriptionEnabled:
              type: boolean
    Response_meetings.lifecycle.createMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - features
            - meetingId
            - videoProvider
            - webrtcReady
          properties:
            features:
              type: object
              required:
                - maxParticipants
                - recording
                - transcription
              properties:
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                transcription:
                  type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
            videoProvider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            webrtcReady:
              type: boolean
    Request_meetings.lifecycle.addParticipant:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - role
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            role:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - co-host
                - type: string
                  enum:
                    - participant
                - type: string
                  enum:
                    - observer
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.lifecycle.addParticipant:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - participantId
            - success
          properties:
            participantId:
              type: string
              description: ID from table "meetingParticipants"
            success:
              type: boolean
    Request_meetings.lifecycle.addMultipleParticipants:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - participants
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            participants:
              type: array
              items:
                type: object
                required:
                  - role
                  - userId
                properties:
                  role:
                    oneOf:
                      - type: string
                        enum:
                          - host
                      - type: string
                        enum:
                          - co-host
                      - type: string
                        enum:
                          - participant
                      - type: string
                        enum:
                          - observer
                  userId:
                    type: string
                    description: ID from table "users"
    Response_meetings.lifecycle.addMultipleParticipants:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - added
            - skipped
            - success
          properties:
            added:
              type: array
              items:
                type: string
                description: ID from table "meetingParticipants"
            skipped:
              type: array
              items:
                type: object
                required:
                  - reason
                  - userId
                properties:
                  reason:
                    type: string
                  userId:
                    type: string
                    description: ID from table "users"
            success:
              type: boolean
    Request_meetings.lifecycle.removeParticipant:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.lifecycle.removeParticipant:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.lifecycle.updateParticipantRole:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - newRole
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            newRole:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.lifecycle.updateParticipantRole:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.lifecycle.startMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.startMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - videoProvider
            - webrtcReady
          properties:
            roomInfo:
              type: object
              properties:
                iceServers:
                  type: array
                  items:
                    type: object
                    required:
                      - urls
                    properties:
                      credential:
                        type: string
                      urls:
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      username:
                        type: string
                roomId:
                  type: string
            success:
              type: boolean
            videoProvider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            webrtcReady:
              type: boolean
    Request_meetings.lifecycle.endMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.endMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            duration:
              type: number
            success:
              type: boolean
    Request_meetings.lifecycle.getMeetingConnectionInfo:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.getMeetingConnectionInfo:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - connectionInfo
            - features
            - success
            - videoProvider
          properties:
            connectionInfo:
              type: object
              properties:
                iceServers:
                  type: array
                  items:
                    type: object
                    required:
                      - urls
                    properties:
                      credential:
                        type: string
                      urls:
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      username:
                        type: string
                roomId:
                  type: string
                streamToken:
                  type: string
            features:
              type: object
              required:
                - maxParticipants
                - recording
                - transcription
              properties:
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                transcription:
                  type: boolean
            success:
              type: boolean
            videoProvider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
    Request_meetings.lifecycle.joinMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.joinMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - webrtcReady
          properties:
            success:
              type: boolean
            webrtcReady:
              type: boolean
    Request_meetings.lifecycle.leaveMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.leaveMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.lifecycle.cancelMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.lifecycle.cancelMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.lifecycle.updateStreamRoomId:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - streamRoomId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            streamRoomId:
              type: string
    Response_meetings.lifecycle.updateStreamRoomId:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.queries.getMeetingById:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.queries.getMeetingById:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - organizerId
            - state
            - title
            - updatedAt
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetings"
            averageRating:
              type: number
            createdAt:
              type: number
            description:
              type: string
            duration:
              type: number
            organizerId:
              type: string
              description: ID from table "users"
            participantCount:
              type: number
            scheduledAt:
              type: number
            state:
              oneOf:
                - type: string
                  enum:
                    - scheduled
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - concluded
                - type: string
                  enum:
                    - cancelled
            streamRoomId:
              type: string
            title:
              type: string
            updatedAt:
              type: number
            webrtcEnabled:
              type: boolean
          nullable: true
    Request_meetings.queries.getMeetingParticipant:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - workosUserId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            workosUserId:
              type: string
    Response_meetings.queries.getMeetingParticipant:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - meetingId
            - presence
            - role
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingParticipants"
            createdAt:
              type: number
            joinedAt:
              type: number
            leftAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            presence:
              oneOf:
                - type: string
                  enum:
                    - invited
                - type: string
                  enum:
                    - joined
                - type: string
                  enum:
                    - left
            role:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
                - type: string
                  enum:
                    - observer
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_meetings.queries.getMeetingParticipants:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.queries.getMeetingParticipants:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - meetingId
              - presence
              - role
              - userId
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "meetingParticipants"
              createdAt:
                type: number
              joinedAt:
                type: number
              leftAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              presence:
                oneOf:
                  - type: string
                    enum:
                      - invited
                  - type: string
                    enum:
                      - joined
                  - type: string
                    enum:
                      - left
              role:
                oneOf:
                  - type: string
                    enum:
                      - host
                  - type: string
                    enum:
                      - participant
                  - type: string
                    enum:
                      - observer
              userId:
                type: string
                description: ID from table "users"
    Request_meetings.queries.getMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.queries.getMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - activeWebRTCSessions
            - createdAt
            - organizerId
            - state
            - title
            - updatedAt
            - userPresence
            - userRole
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetings"
            activeWebRTCSessions:
              type: number
            averageRating:
              type: number
            createdAt:
              type: number
            description:
              type: string
            duration:
              type: number
            organizerId:
              type: string
              description: ID from table "users"
            participantCount:
              type: number
            scheduledAt:
              type: number
            state:
              oneOf:
                - type: string
                  enum:
                    - scheduled
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - concluded
                - type: string
                  enum:
                    - cancelled
            streamRoomId:
              type: string
            title:
              type: string
            updatedAt:
              type: number
            userPresence:
              oneOf:
                - type: string
                  enum:
                    - invited
                - type: string
                  enum:
                    - joined
                - type: string
                  enum:
                    - left
            userRole:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
                - type: string
                  enum:
                    - observer
            webrtcEnabled:
              type: boolean
          nullable: true
    Request_meetings.queries.listUserMeetings:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            state:
              oneOf:
                - type: string
                  enum:
                    - scheduled
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - concluded
                - type: string
                  enum:
                    - cancelled
    Response_meetings.queries.listUserMeetings:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - createdAt
              - organizerId
              - state
              - title
              - updatedAt
              - userPresence
              - userRole
            properties:
              _id:
                type: string
                description: ID from table "meetings"
              createdAt:
                type: number
              description:
                type: string
              duration:
                type: number
              organizerId:
                type: string
                description: ID from table "users"
              participantCount:
                type: number
              scheduledAt:
                type: number
              state:
                oneOf:
                  - type: string
                    enum:
                      - scheduled
                  - type: string
                    enum:
                      - active
                  - type: string
                    enum:
                      - concluded
                  - type: string
                    enum:
                      - cancelled
              title:
                type: string
              updatedAt:
                type: number
              userPresence:
                oneOf:
                  - type: string
                    enum:
                      - invited
                  - type: string
                    enum:
                      - joined
                  - type: string
                    enum:
                      - left
              userRole:
                oneOf:
                  - type: string
                    enum:
                      - host
                  - type: string
                    enum:
                      - participant
                  - type: string
                    enum:
                      - observer
    Request_meetings.queries.listMeetingParticipants:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.queries.listMeetingParticipants:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - meetingId
              - presence
              - role
              - user
              - userId
              - webrtcConnected
              - webrtcSessionCount
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "meetingParticipants"
              createdAt:
                type: number
              joinedAt:
                type: number
              leftAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              presence:
                oneOf:
                  - type: string
                    enum:
                      - invited
                  - type: string
                    enum:
                      - joined
                  - type: string
                    enum:
                      - left
              role:
                oneOf:
                  - type: string
                    enum:
                      - host
                  - type: string
                    enum:
                      - participant
                  - type: string
                    enum:
                      - observer
              user:
                type: object
                required:
                  - _id
                properties:
                  _id:
                    type: string
                    description: ID from table "users"
                  avatarUrl:
                    type: string
                  displayName:
                    type: string
              userId:
                type: string
                description: ID from table "users"
              webrtcConnected:
                type: boolean
              webrtcSessionCount:
                type: number
    Request_meetings.queries.getMeetingState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.queries.getMeetingState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - active
            - averageSpeakingTime
            - connectedWebRTCSessions
            - meetingId
            - participantCount
            - recordingEnabled
            - topics
            - totalWebRTCSessions
            - updatedAt
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingState"
            active:
              type: boolean
            averageSpeakingTime:
              type: number
            connectedWebRTCSessions:
              type: number
            endedAt:
              type: number
            lullState:
              type: object
              required:
                - detected
                - duration
                - lastActivity
              properties:
                detected:
                  type: boolean
                duration:
                  type: number
                lastActivity:
                  type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            participantCount:
              type: number
            recordingEnabled:
              type: boolean
            speakingStats:
              type: object
              required:
                - byUserMs
                - totalMs
              properties:
                byUserMs:
                  type: object
                totalMs:
                  type: number
            startedAt:
              type: number
            topics:
              type: array
              items:
                type: string
            totalWebRTCSessions:
              type: number
            updatedAt:
              type: number
          nullable: true
    Request_meetings.queries.getActiveMeetings:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
    Response_meetings.queries.getActiveMeetings:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - createdAt
              - organizerId
              - title
              - webrtcSessionCount
            properties:
              _id:
                type: string
                description: ID from table "meetings"
              createdAt:
                type: number
              organizerId:
                type: string
                description: ID from table "users"
              participantCount:
                type: number
              startedAt:
                type: number
              title:
                type: string
              webrtcSessionCount:
                type: number
    Request_users.mutations.upsertUser:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - email
            - workosUserId
          properties:
            displayName:
              type: string
            email:
              type: string
            orgId:
              type: string
            orgRole:
              type: string
            workosUserId:
              type: string
    Response_users.mutations.upsertUser:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "users"
    Request_users.mutations.updateUserProfile:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            bio:
              type: string
            displayName:
              type: string
            experience:
              type: string
            goals:
              type: string
            languages:
              type: array
              items:
                type: string
            userId:
              type: string
              description: ID from table "users"
    Response_users.mutations.updateUserProfile:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "profiles"
    Request_users.mutations.updateUserInterests:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - interests
            - userId
          properties:
            interests:
              type: array
              items:
                type: string
            userId:
              type: string
              description: ID from table "users"
    Response_users.mutations.updateUserInterests:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_users.mutations.deactivateUser:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_users.mutations.deactivateUser:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_users.mutations.updateLastSeen:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_users.mutations.updateLastSeen:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_users.mutations.saveOnboarding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - age
            - bio
            - company
            - field
            - gender
            - interests
            - jobTitle
          properties:
            age:
              type: number
            bio:
              type: string
            company:
              type: string
            field:
              type: string
            gender:
              oneOf:
                - type: string
                  enum:
                    - male
                - type: string
                  enum:
                    - female
                - type: string
                  enum:
                    - non-binary
                - type: string
                  enum:
                    - prefer-not-to-say
            idempotencyKey:
              type: string
            interests:
              type: array
              items:
                type: object
                required:
                  - category
                  - id
                  - name
                properties:
                  category:
                    oneOf:
                      - type: string
                        enum:
                          - academic
                      - type: string
                        enum:
                          - industry
                      - type: string
                        enum:
                          - skill
                      - type: string
                        enum:
                          - personal
                  iconName:
                    type: string
                  id:
                    type: string
                  name:
                    type: string
            jobTitle:
              type: string
            linkedinUrl:
              type: string
    Response_users.mutations.saveOnboarding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - interestsCount
            - onboardingCompleted
            - profileId
            - userId
          properties:
            interestsCount:
              type: number
            onboardingCompleted:
              type: boolean
            profileId:
              type: string
              description: ID from table "profiles"
            userId:
              type: string
              description: ID from table "users"
    Request_users.mutations.createUser:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - email
            - workosUserId
          properties:
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            orgId:
              type: string
            orgRole:
              type: string
            workosUserId:
              type: string
    Response_users.mutations.createUser:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "users"
    Request_users.queries.getUserByIdInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_users.queries.getUserByIdInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
          nullable: true
    Request_users.queries.getUserById:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_users.queries.getUserById:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
          nullable: true
    Request_users.queries.getUserByWorkosId:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - workosUserId
          properties:
            workosUserId:
              type: string
    Response_users.queries.getUserByWorkosId:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
          nullable: true
    Request_users.queries.getCurrentUser:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_users.queries.getCurrentUser:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
          nullable: true
    Request_users.queries.getUserProfile:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_users.queries.getUserProfile:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - isActive
          properties:
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            displayName:
              type: string
            isActive:
              type: boolean
            orgId:
              type: string
            orgRole:
              type: string
          nullable: true
    Request_users.queries.getOnboardingState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_users.queries.getOnboardingState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - onboardingComplete
            - profileExists
            - userId
          properties:
            completedAt:
              type: number
            onboardingComplete:
              type: boolean
            profileExists:
              type: boolean
            profileId:
              type: string
              description: ID from table "profiles"
            userId:
              type: string
              description: ID from table "users"
    Request_users.queries.listActiveUsersInOrg:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - paginationOpts
          properties:
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                numItems:
                  type: number
    Response_users.queries.listActiveUsersInOrg:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _id
                  - isActive
                properties:
                  _id:
                    type: string
                    description: ID from table "users"
                  avatarUrl:
                    type: string
                  displayName:
                    type: string
                  isActive:
                    type: boolean
    Request_users.queries.getUsersByOnboardingStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - onboardingComplete
          properties:
            limit:
              type: number
            onboardingComplete:
              type: boolean
    Response_users.queries.getUsersByOnboardingStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - email
              - isActive
              - updatedAt
              - workosUserId
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "users"
              avatarUrl:
                type: string
              createdAt:
                type: number
              displayName:
                type: string
              email:
                type: string
              isActive:
                type: boolean
              lastSeenAt:
                type: number
              onboardingComplete:
                type: boolean
              onboardingCompletedAt:
                type: number
              onboardingStartedAt:
                type: number
              orgId:
                type: string
              orgRole:
                type: string
              updatedAt:
                type: number
              workosUserId:
                type: string
    Request_realtime.subscriptions.subscribeMeetingNotes:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            cursor:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            subscriptionId:
              type: string
    Response_realtime.subscriptions.subscribeMeetingNotes:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - content
            - cursor
            - lastUpdated
            - permissions
            - rateLimited
            - subscriptionValid
            - version
          properties:
            content:
              type: string
            cursor:
              type: string
            lastUpdated:
              type: number
            permissions:
              type: array
              items:
                type: string
            rateLimited:
              type: boolean
            subscriptionValid:
              type: boolean
            version:
              type: number
          nullable: true
    Request_realtime.subscriptions.subscribeTranscriptStream:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            fromSequence:
              type: number
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            subscriptionId:
              type: string
    Response_realtime.subscriptions.subscribeTranscriptStream:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - nextSequence
            - permissions
            - subscriptionValid
            - transcripts
          properties:
            nextSequence:
              type: number
            permissions:
              type: array
              items:
                type: string
            subscriptionValid:
              type: boolean
            transcripts:
              type: array
              items:
                type: object
                required:
                  - _id
                  - confidence
                  - createdAt
                  - endMs
                  - sequence
                  - startMs
                  - text
                properties:
                  _id:
                    type: string
                    description: ID from table "transcripts"
                  confidence:
                    type: number
                  createdAt:
                    type: number
                  endMs:
                    type: number
                  isInterim:
                    type: boolean
                  sequence:
                    type: number
                  speakerId:
                    type: string
                  startMs:
                    type: number
                  text:
                    type: string
            validUntil:
              type: number
    Request_realtime.subscriptions.subscribeMeetingParticipants:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            subscriptionId:
              type: string
    Response_realtime.subscriptions.subscribeMeetingParticipants:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - participants
            - permissions
            - subscriptionValid
          properties:
            participants:
              type: array
              items:
                type: object
                required:
                  - _id
                  - presence
                  - role
                  - user
                  - userId
                properties:
                  _id:
                    type: string
                    description: ID from table "meetingParticipants"
                  joinedAt:
                    type: number
                  leftAt:
                    type: number
                  presence:
                    oneOf:
                      - type: string
                        enum:
                          - invited
                      - type: string
                        enum:
                          - joined
                      - type: string
                        enum:
                          - left
                  role:
                    oneOf:
                      - type: string
                        enum:
                          - host
                      - type: string
                        enum:
                          - participant
                      - type: string
                        enum:
                          - observer
                  user:
                    type: object
                    required:
                      - email
                    properties:
                      avatarUrl:
                        type: string
                      displayName:
                        type: string
                      email:
                        type: string
                  userId:
                    type: string
                    description: ID from table "users"
            permissions:
              type: array
              items:
                type: string
            subscriptionValid:
              type: boolean
    Request_realtime.subscriptions.validateSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - lastValidated
            - resourceId
            - resourceType
            - subscriptionId
          properties:
            lastValidated:
              type: number
            resourceId:
              type: string
              description: ID from table "meetings"
            resourceType:
              type: string
            subscriptionId:
              type: string
    Response_realtime.subscriptions.validateSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - permissions
            - shouldReconnect
            - valid
          properties:
            permissions:
              type: array
              items:
                type: string
            reason:
              type: string
            shouldReconnect:
              type: boolean
            valid:
              type: boolean
            validUntil:
              type: number
    Request_realtime.subscriptions.terminateSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - reason
            - resourceId
            - resourceType
            - subscriptionId
            - userId
          properties:
            reason:
              type: string
            resourceId:
              type: string
            resourceType:
              type: string
            subscriptionId:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_realtime.subscriptions.terminateSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_audit.logging.logDataAccessEvent:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - operationType
            - resourceId
            - resourceType
            - userId
          properties:
            metadata:
              type: object
            operationType:
              oneOf:
                - type: string
                  enum:
                    - read
                - type: string
                  enum:
                    - write
                - type: string
                  enum:
                    - admin
            resourceId:
              type: string
            resourceType:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_audit.logging.logDataAccessEvent:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_audit.logging.logAuthorizationEvent:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - action
            - resourceId
            - resourceType
            - success
            - userId
          properties:
            action:
              type: string
            metadata:
              type: object
            resourceId:
              type: string
            resourceType:
              type: string
            success:
              type: boolean
            userId:
              type: string
              description: ID from table "users"
    Response_audit.logging.logAuthorizationEvent:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_audit.logging.createAuditLog:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - action
            - category
            - resourceId
            - resourceType
            - success
          properties:
            action:
              type: string
            actorUserId:
              type: string
              description: ID from table "users"
            category:
              type: string
            metadata:
              type: object
            resourceId:
              type: string
            resourceType:
              type: string
            success:
              type: boolean
    Response_audit.logging.createAuditLog:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_audit.logging.getAuditLogs:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            action:
              type: string
            actorUserId:
              type: string
              description: ID from table "users"
            limit:
              type: number
            resourceId:
              type: string
            resourceType:
              type: string
    Response_audit.logging.getAuditLogs:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - logs
          properties:
            logs:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - action
                  - metadata
                  - resourceId
                  - resourceType
                  - timestamp
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "auditLogs"
                  action:
                    type: string
                  actorUserId:
                    type: string
                    description: ID from table "users"
                  metadata:
                    type: object
                  resourceId:
                    type: string
                  resourceType:
                    type: string
                  timestamp:
                    type: number
    Request_auth.permissions.validateSubscriptionPermissions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - requiredPermissions
            - resourceId
            - resourceType
          properties:
            requiredPermissions:
              type: array
              items:
                oneOf:
                  - type: string
                    enum:
                      - read
                  - type: string
                    enum:
                      - write
                  - type: string
                    enum:
                      - manage
                  - type: string
                    enum:
                      - export
                  - type: string
                    enum:
                      - invite
                  - type: string
                    enum:
                      - remove
            resourceId:
              type: string
              description: ID from table "meetings"
            resourceType:
              type: string
    Response_auth.permissions.validateSubscriptionPermissions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - granted
            - metadata
            - permissions
          properties:
            granted:
              type: boolean
            metadata:
              type: object
              properties:
                error:
                  type: string
            permissions:
              type: array
              items:
                type: string
    Request_auth.permissions.refreshSubscriptionPermissions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - subscriptions
          properties:
            subscriptions:
              type: array
              items:
                type: object
                required:
                  - lastValidated
                  - permissions
                  - resourceId
                  - resourceType
                properties:
                  lastValidated:
                    type: number
                  permissions:
                    type: array
                    items:
                      type: string
                  resourceId:
                    type: string
                    description: ID from table "meetings"
                  resourceType:
                    type: string
    Response_auth.permissions.refreshSubscriptionPermissions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - resourceId
              - resourceType
              - updatedPermissions
              - valid
            properties:
              reason:
                type: string
              resourceId:
                type: string
                description: ID from table "meetings"
              resourceType:
                type: string
              updatedPermissions:
                type: array
                items:
                  type: string
              valid:
                type: boolean
    Request_auth.permissions.handleParticipantRemoval:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - removedBy
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            removedBy:
              type: string
              description: ID from table "users"
            userId:
              type: string
              description: ID from table "users"
    Response_auth.permissions.handleParticipantRemoval:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_auth.permissions.updateParticipantPermissions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - newRole
            - oldRole
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            newRole:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
            oldRole:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
            userId:
              type: string
              description: ID from table "users"
    Response_auth.permissions.updateParticipantPermissions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_auth.permissions.revokeSubscriptionPermissions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - reason
            - resourceId
            - resourceType
            - userId
          properties:
            reason:
              type: string
            resourceId:
              type: string
            resourceType:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_auth.permissions.revokeSubscriptionPermissions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_monitoring.bandwidthManager.checkBandwidthLimit:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - requestType
          properties:
            estimatedBytes:
              type: number
            requestType:
              oneOf:
                - type: string
                  enum:
                    - query
                - type: string
                  enum:
                    - mutation
                - type: string
                  enum:
                    - subscription
    Response_monitoring.bandwidthManager.checkBandwidthLimit:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - allowed
            - currentUsage
            - userTier
          properties:
            allowed:
              type: boolean
            currentUsage:
              type: object
              required:
                - bytes
                - requests
                - subscriptions
              properties:
                bytes:
                  type: number
                requests:
                  type: number
                subscriptions:
                  type: number
            reason:
              type: string
            retryAfterMs:
              type: number
            userTier:
              type: string
    Request_monitoring.bandwidthManager.getBandwidthStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            includeGlobal:
              type: boolean
    Response_monitoring.bandwidthManager.getBandwidthStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          properties:
            globalStats:
              type: object
              required:
                - totalBytesTransferred
                - totalRequests
                - totalSubscriptions
                - windowStart
              properties:
                totalBytesTransferred:
                  type: number
                totalRequests:
                  type: number
                totalSubscriptions:
                  type: number
                windowStart:
                  type: number
            userStats:
              type: object
              required:
                - bytesTransferred
                - priority
                - requestCount
                - subscriptionCount
                - windowStart
              properties:
                bytesTransferred:
                  type: number
                priority:
                  type: string
                requestCount:
                  type: number
                subscriptionCount:
                  type: number
                windowStart:
                  type: number
    Request_monitoring.bandwidthManager.executeWithCircuitBreaker:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - operationId
            - serviceName
          properties:
            failureThreshold:
              type: number
            operationId:
              type: string
            recoveryTimeMs:
              type: number
            serviceName:
              type: string
    Response_monitoring.bandwidthManager.executeWithCircuitBreaker:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - circuitState
            - success
          properties:
            circuitState:
              type: string
            error:
              type: string
            result:
              type: object
              required:
                - operationId
                - timestamp
              properties:
                operationId:
                  type: string
                timestamp:
                  type: number
            success:
              type: boolean
    Request_monitoring.bandwidthManager.getCircuitBreakerStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_monitoring.bandwidthManager.getCircuitBreakerStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - breakers
            - summary
          properties:
            breakers:
              type: array
              items:
                type: object
                required:
                  - failures
                  - service
                  - state
                properties:
                  failures:
                    type: number
                  service:
                    type: string
                  state:
                    type: string
            summary:
              type: object
              required:
                - closedBreakers
                - halfOpenBreakers
                - openBreakers
                - totalBreakers
              properties:
                closedBreakers:
                  type: number
                halfOpenBreakers:
                  type: number
                openBreakers:
                  type: number
                totalBreakers:
                  type: number
    Request_monitoring.bandwidthManager.resetCircuitBreaker:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - serviceName
          properties:
            serviceName:
              type: string
    Response_monitoring.bandwidthManager.resetCircuitBreaker:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - message
            - success
          properties:
            message:
              type: string
            success:
              type: boolean
    Request_monitoring.bandwidthManager.shouldShedLoad:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - requestPriority
          properties:
            requestPriority:
              oneOf:
                - type: string
                  enum:
                    - critical
                - type: string
                  enum:
                    - high
                - type: string
                  enum:
                    - normal
                - type: string
                  enum:
                    - low
    Response_monitoring.bandwidthManager.shouldShedLoad:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - shouldShed
            - systemLoad
          properties:
            reason:
              type: string
            shouldShed:
              type: boolean
            systemLoad:
              type: object
              required:
                - activeConnections
                - cpuUsage
                - memoryUsage
                - queueDepth
              properties:
                activeConnections:
                  type: number
                cpuUsage:
                  type: number
                memoryUsage:
                  type: number
                queueDepth:
                  type: number
    Request_monitoring.performanceQueries.getPerformanceMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            functionName:
              type: string
            limit:
              type: number
            timeWindowMs:
              type: number
    Response_monitoring.performanceQueries.getPerformanceMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - aggregatedStats
            - metrics
            - sloCompliance
          properties:
            aggregatedStats:
              type: object
              required:
                - avgExecutionTime
                - count
                - p50
                - p95
                - p99
                - sloBreaches
                - successRate
              properties:
                avgExecutionTime:
                  type: number
                count:
                  type: number
                p50:
                  type: number
                p95:
                  type: number
                p99:
                  type: number
                sloBreaches:
                  type: number
                successRate:
                  type: number
            metrics:
              type: array
              items:
                type: object
                required:
                  - executionTimeMs
                  - functionName
                  - success
                  - timestamp
                  - traceId
                properties:
                  errorType:
                    type: string
                  executionTimeMs:
                    type: number
                  functionName:
                    type: string
                  success:
                    type: boolean
                  timestamp:
                    type: number
                  traceId:
                    type: string
            sloCompliance:
              type: object
              required:
                - currentP95
                - currentP99
                - queryP95Compliant
                - queryP99Compliant
                - targetP95
                - targetP99
              properties:
                currentP95:
                  type: number
                currentP99:
                  type: number
                queryP95Compliant:
                  type: boolean
                queryP99Compliant:
                  type: boolean
                targetP95:
                  type: number
                targetP99:
                  type: number
    Request_monitoring.performanceQueries.ingestStreamingMetric:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - metrics
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metrics:
              type: object
              required:
                - batchesProcessed
                - chunksProcessed
                - latencyMs
                - throughputChunksPerSecond
                - timestamp
              properties:
                batchesProcessed:
                  type: number
                chunksProcessed:
                  type: number
                latencyMs:
                  type: number
                throughputChunksPerSecond:
                  type: number
                timestamp:
                  type: number
    Response_monitoring.performanceQueries.ingestStreamingMetric:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_monitoring.performanceQueries.createAlertInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - actionable
            - alertId
            - category
            - message
            - metadata
            - severity
            - title
          properties:
            actionable:
              type: boolean
            alertId:
              type: string
            category:
              oneOf:
                - type: string
                  enum:
                    - meeting_lifecycle
                - type: string
                  enum:
                    - video_provider
                - type: string
                  enum:
                    - transcription
                - type: string
                  enum:
                    - authentication
                - type: string
                  enum:
                    - performance
                - type: string
                  enum:
                    - security
                - type: string
                  enum:
                    - system
            message:
              type: string
            metadata:
              type: object
            severity:
              oneOf:
                - type: string
                  enum:
                    - critical
                - type: string
                  enum:
                    - error
                - type: string
                  enum:
                    - warning
                - type: string
                  enum:
                    - info
            title:
              type: string
    Response_monitoring.performanceQueries.createAlertInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "alerts"
    Request_monitoring.performanceQueries.getSubscriptionMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            subscriptionId:
              type: string
    Response_monitoring.performanceQueries.getSubscriptionMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - bandwidthStats
            - globalStats
            - subscriptions
          properties:
            bandwidthStats:
              type: object
              required:
                - activeSubscriptions
                - totalUpdates
              properties:
                activeSubscriptions:
                  type: number
                totalUpdates:
                  type: number
            globalStats:
              type: object
              required:
                - avgUpdatesPerSecond
                - sloBreaches
                - totalActiveSubscriptions
                - totalUpdates
              properties:
                avgUpdatesPerSecond:
                  type: number
                sloBreaches:
                  type: number
                totalActiveSubscriptions:
                  type: number
                totalUpdates:
                  type: number
            subscriptions:
              type: array
              items:
                type: object
                required:
                  - avgLatency
                  - durationMs
                  - errors
                  - lastUpdate
                  - sloCompliant
                  - subscriptionId
                  - updateCount
                  - updatesPerSecond
                properties:
                  avgLatency:
                    type: number
                  durationMs:
                    type: number
                  errors:
                    type: number
                  lastUpdate:
                    type: number
                  sloCompliant:
                    type: boolean
                  subscriptionId:
                    type: string
                  updateCount:
                    type: number
                  updatesPerSecond:
                    type: number
    Request_monitoring.performanceQueries.getFunctionPerformanceBreakdown:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            timeWindowMs:
              type: number
    Response_monitoring.performanceQueries.getFunctionPerformanceBreakdown:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - functions
            - summary
          properties:
            functions:
              type: array
              items:
                type: object
                required:
                  - avgExecutionTime
                  - callCount
                  - errorCount
                  - functionName
                  - p95ExecutionTime
                  - p99ExecutionTime
                  - sloBreaches
                  - sloCompliant
                  - successRate
                properties:
                  avgExecutionTime:
                    type: number
                  callCount:
                    type: number
                  errorCount:
                    type: number
                  functionName:
                    type: string
                  p95ExecutionTime:
                    type: number
                  p99ExecutionTime:
                    type: number
                  sloBreaches:
                    type: number
                  sloCompliant:
                    type: boolean
                  successRate:
                    type: number
            summary:
              type: object
              required:
                - overallSuccessRate
                - sloComplianceRate
                - sloCompliantFunctions
                - totalCalls
                - totalFunctions
              properties:
                overallSuccessRate:
                  type: number
                sloComplianceRate:
                  type: number
                sloCompliantFunctions:
                  type: number
                totalCalls:
                  type: number
                totalFunctions:
                  type: number
    Request_monitoring.performanceQueries.getSLOStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            timeWindowMs:
              type: number
    Response_monitoring.performanceQueries.getSLOStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - alerts
            - overall
            - slos
          properties:
            alerts:
              type: array
              items:
                type: object
                required:
                  - message
                  - severity
                  - sloName
                  - timestamp
                properties:
                  message:
                    type: string
                  severity:
                    oneOf:
                      - type: string
                        enum:
                          - warning
                      - type: string
                        enum:
                          - critical
                  sloName:
                    type: string
                  timestamp:
                    type: number
            overall:
              type: object
              required:
                - breaches
                - score
                - status
                - totalChecks
              properties:
                breaches:
                  type: number
                score:
                  type: number
                status:
                  oneOf:
                    - type: string
                      enum:
                        - healthy
                    - type: string
                      enum:
                        - warning
                    - type: string
                      enum:
                        - critical
                totalChecks:
                  type: number
            slos:
              type: array
              items:
                type: object
                required:
                  - breachCount
                  - current
                  - description
                  - name
                  - status
                  - target
                properties:
                  breachCount:
                    type: number
                  current:
                    type: number
                  description:
                    type: string
                  name:
                    type: string
                  status:
                    oneOf:
                      - type: string
                        enum:
                          - healthy
                      - type: string
                        enum:
                          - warning
                      - type: string
                        enum:
                          - critical
                  target:
                    type: number
    Request_monitoring.performanceQueries.getPerformanceTrends:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            bucketSizeMs:
              type: number
            functionName:
              type: string
            timeWindowMs:
              type: number
    Response_monitoring.performanceQueries.getPerformanceTrends:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - timeSeries
            - trends
          properties:
            timeSeries:
              type: array
              items:
                type: object
                required:
                  - avgLatency
                  - callCount
                  - errorCount
                  - p95Latency
                  - successRate
                  - timestamp
                properties:
                  avgLatency:
                    type: number
                  callCount:
                    type: number
                  errorCount:
                    type: number
                  p95Latency:
                    type: number
                  successRate:
                    type: number
                  timestamp:
                    type: number
            trends:
              type: object
              required:
                - errorTrend
                - latencyTrend
                - throughputTrend
              properties:
                errorTrend:
                  oneOf:
                    - type: string
                      enum:
                        - improving
                    - type: string
                      enum:
                        - stable
                    - type: string
                      enum:
                        - degrading
                latencyTrend:
                  oneOf:
                    - type: string
                      enum:
                        - improving
                    - type: string
                      enum:
                        - stable
                    - type: string
                      enum:
                        - degrading
                throughputTrend:
                  oneOf:
                    - type: string
                      enum:
                        - increasing
                    - type: string
                      enum:
                        - stable
                    - type: string
                      enum:
                        - decreasing
    Request_monitoring.performanceQueries.recordCustomMetric:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - metricName
            - value
          properties:
            metricName:
              type: string
            tags:
              type: object
            timestamp:
              type: number
            value:
              type: number
    Response_monitoring.performanceQueries.recordCustomMetric:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_realtime.batchedOperations.batchApplyNoteOperation:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientSequence
            - expectedVersion
            - meetingId
            - operation
          properties:
            clientSequence:
              type: number
            expectedVersion:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            operation:
              type: object
              required:
                - position
                - type
              properties:
                content:
                  type: string
                length:
                  type: number
                position:
                  type: number
                type:
                  oneOf:
                    - type: string
                      enum:
                        - insert
                    - type: string
                      enum:
                        - delete
                    - type: string
                      enum:
                        - retain
    Response_realtime.batchedOperations.batchApplyNoteOperation:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchSize
            - queued
            - serverSequence
          properties:
            batchSize:
              type: number
            queued:
              type: boolean
            serverSequence:
              type: number
    Request_realtime.batchedOperations.batchIngestTranscriptChunk:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - confidence
            - endMs
            - meetingId
            - startMs
            - text
          properties:
            confidence:
              type: number
            endMs:
              type: number
            interim:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
            speakerId:
              type: string
            startMs:
              type: number
            text:
              type: string
    Response_realtime.batchedOperations.batchIngestTranscriptChunk:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchSize
            - queued
          properties:
            batchSize:
              type: number
            queued:
              type: boolean
    Request_realtime.batchedOperations.batchUpdatePresence:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - presence
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            presence:
              oneOf:
                - type: string
                  enum:
                    - joined
                - type: string
                  enum:
                    - left
    Response_realtime.batchedOperations.batchUpdatePresence:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchSize
            - queued
          properties:
            batchSize:
              type: number
            queued:
              type: boolean
    Request_realtime.batchedOperations.processBatchedTranscriptChunks:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - chunks
            - meetingId
          properties:
            chunks:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - endMs
                  - startMs
                  - text
                  - timestamp
                  - userId
                properties:
                  confidence:
                    type: number
                  endMs:
                    type: number
                  speakerId:
                    type: string
                  startMs:
                    type: number
                  text:
                    type: string
                  timestamp:
                    type: number
                  userId:
                    type: string
                    description: ID from table "users"
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_realtime.batchedOperations.processBatchedTranscriptChunks:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - inserted
            - sequences
          properties:
            inserted:
              type: number
            sequences:
              type: array
              items:
                type: number
    Request_realtime.batchedOperations.processBatchedNoteOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - operations
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            operations:
              type: array
              items:
                type: object
                required:
                  - authorId
                  - clientSequence
                  - expectedVersion
                  - operation
                  - serverSequence
                  - timestamp
                properties:
                  authorId:
                    type: string
                    description: ID from table "users"
                  clientSequence:
                    type: number
                  expectedVersion:
                    type: number
                  operation:
                    type: object
                    required:
                      - position
                      - type
                    properties:
                      content:
                        type: string
                      length:
                        type: number
                      position:
                        type: number
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - insert
                          - type: string
                            enum:
                              - delete
                          - type: string
                            enum:
                              - retain
                  serverSequence:
                    type: number
                  timestamp:
                    type: number
    Response_realtime.batchedOperations.processBatchedNoteOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - conflicts
            - newVersion
            - processed
          properties:
            conflicts:
              type: array
              items:
                type: number
            newVersion:
              type: number
            processed:
              type: number
    Request_realtime.batchedOperations.processBatchedPresenceUpdates:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - updates
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            updates:
              type: array
              items:
                type: object
                required:
                  - presence
                  - timestamp
                  - userId
                properties:
                  metadata:
                    type: object
                  presence:
                    oneOf:
                      - type: string
                        enum:
                          - joined
                      - type: string
                        enum:
                          - left
                  timestamp:
                    type: number
                  userId:
                    type: string
                    description: ID from table "users"
    Response_realtime.batchedOperations.processBatchedPresenceUpdates:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - updated
          properties:
            updated:
              type: number
    Request_realtime.batchedOperations.flushAllBatches:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_realtime.batchedOperations.flushAllBatches:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_realtime.batchedOperations.getBatchStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_realtime.batchedOperations.getBatchStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - noteOps
            - presence
            - transcripts
          properties:
            noteOps:
              type: object
              required:
                - queueSize
              properties:
                queueSize:
                  type: number
            presence:
              type: object
              required:
                - queueSize
              properties:
                queueSize:
                  type: number
            transcripts:
              type: object
              required:
                - queueSize
              properties:
                queueSize:
                  type: number
    Request_realtime.subscriptionManager.establishSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - resourceId
            - resourceType
            - subscriptionId
          properties:
            priority:
              oneOf:
                - type: string
                  enum:
                    - critical
                - type: string
                  enum:
                    - high
                - type: string
                  enum:
                    - normal
                - type: string
                  enum:
                    - low
            resourceId:
              type: string
            resourceType:
              type: string
            subscriptionId:
              type: string
    Response_realtime.subscriptionManager.establishSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - permissions
            - rateLimited
            - subscriptionId
            - success
          properties:
            permissions:
              type: array
              items:
                type: string
            rateLimited:
              type: boolean
            subscriptionId:
              type: string
            success:
              type: boolean
            validUntil:
              type: number
    Request_realtime.subscriptionManager.validateAndUpdateSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - lastValidated
            - subscriptionId
          properties:
            lastValidated:
              type: number
            subscriptionId:
              type: string
    Response_realtime.subscriptionManager.validateAndUpdateSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - permissions
            - rateLimited
            - resourceId
            - resourceType
            - shouldReconnect
            - valid
          properties:
            permissions:
              type: array
              items:
                type: string
            rateLimited:
              type: boolean
            reason:
              type: string
            resourceId:
              type: string
            resourceType:
              type: string
            shouldReconnect:
              type: boolean
            valid:
              type: boolean
            validUntil:
              type: number
    Request_realtime.subscriptionManager.terminateSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - subscriptionId
          properties:
            reason:
              type: string
            subscriptionId:
              type: string
    Response_realtime.subscriptionManager.terminateSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_realtime.subscriptionManager.bulkTerminateUserSubscriptions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - reason
            - userId
          properties:
            reason:
              type: string
            resourceId:
              type: string
            resourceType:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_realtime.subscriptionManager.bulkTerminateUserSubscriptions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - subscriptionIds
            - terminatedCount
          properties:
            subscriptionIds:
              type: array
              items:
                type: string
            terminatedCount:
              type: number
    Request_realtime.subscriptionManager.getSubscriptionStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_realtime.subscriptionManager.getSubscriptionStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - byPriority
            - byResourceType
            - performanceStats
            - totalActive
          properties:
            byPriority:
              type: object
            byResourceType:
              type: object
            performanceStats:
              type: array
              items:
                type: object
                required:
                  - stats
                  - subscriptionId
                properties:
                  stats:
                    type: object
                    required:
                      - avgLatency
                      - durationMs
                      - errors
                      - lastUpdate
                      - sloCompliant
                      - updateCount
                      - updatesPerSecond
                    properties:
                      avgLatency:
                        type: number
                      durationMs:
                        type: number
                      errors:
                        type: number
                      lastUpdate:
                        type: number
                      sloCompliant:
                        type: boolean
                      updateCount:
                        type: number
                      updatesPerSecond:
                        type: number
                  subscriptionId:
                    type: string
            totalActive:
              type: number
    Request_realtime.subscriptionActions.validateAndLogSubscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - lastValidated
            - subscriptionId
          properties:
            lastValidated:
              type: number
            subscriptionId:
              type: string
    Response_realtime.subscriptionActions.validateAndLogSubscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - permissions
            - rateLimited
            - resourceId
            - resourceType
            - shouldReconnect
            - valid
          properties:
            permissions:
              type: array
              items:
                type: string
            rateLimited:
              type: boolean
            reason:
              type: string
            resourceId:
              type: string
            resourceType:
              type: string
            shouldReconnect:
              type: boolean
            valid:
              type: boolean
            validUntil:
              type: number
    Request_transcripts.ingestion.ingestTranscriptChunk:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - confidence
            - endTime
            - meetingId
            - startTime
            - text
          properties:
            confidence:
              type: number
            endTime:
              type: number
            isInterim:
              type: boolean
            language:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            speakerId:
              type: string
            startTime:
              type: number
            text:
              type: string
    Response_transcripts.ingestion.ingestTranscriptChunk:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - bucketMs
            - rateLimitRemaining
            - sequence
            - success
          properties:
            bucketMs:
              type: number
            rateLimitRemaining:
              type: number
            sequence:
              type: number
            success:
              type: boolean
    Request_transcripts.ingestion.batchIngestTranscriptChunks:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - chunks
            - meetingId
          properties:
            batchId:
              type: string
            chunks:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - endTime
                  - startTime
                  - text
                properties:
                  confidence:
                    type: number
                  endTime:
                    type: number
                  isInterim:
                    type: boolean
                  language:
                    type: string
                  speakerId:
                    type: string
                  startTime:
                    type: number
                  text:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.ingestion.batchIngestTranscriptChunks:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchId
            - failed
            - performance
            - processed
            - success
          properties:
            batchId:
              type: string
            failed:
              type: number
            performance:
              type: object
              required:
                - chunksPerSecond
                - processingTimeMs
              properties:
                chunksPerSecond:
                  type: number
                processingTimeMs:
                  type: number
            processed:
              type: number
            success:
              type: boolean
    Request_transcripts.ingestion.coalescedIngestTranscriptChunks:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - chunks
            - meetingId
          properties:
            chunks:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - endTime
                  - startTime
                  - text
                properties:
                  confidence:
                    type: number
                  endTime:
                    type: number
                  isInterim:
                    type: boolean
                  language:
                    type: string
                  speakerId:
                    type: string
                  startTime:
                    type: number
                  text:
                    type: string
            coalescingWindowMs:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.ingestion.coalescedIngestTranscriptChunks:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - coalesced
            - performance
            - processed
            - success
          properties:
            coalesced:
              type: number
            performance:
              type: object
              required:
                - coalescedChunks
                - compressionRatio
                - originalChunks
              properties:
                coalescedChunks:
                  type: number
                compressionRatio:
                  type: number
                originalChunks:
                  type: number
            processed:
              type: number
            success:
              type: boolean
    Request_transcripts.ingestion.ingestStreamingMetric:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - metrics
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metrics:
              type: object
              required:
                - batchesProcessed
                - chunksProcessed
                - latencyMs
                - throughputChunksPerSecond
                - timestamp
              properties:
                batchesProcessed:
                  type: number
                chunksProcessed:
                  type: number
                latencyMs:
                  type: number
                throughputChunksPerSecond:
                  type: number
                timestamp:
                  type: number
    Response_transcripts.ingestion.ingestStreamingMetric:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_transcripts.ingestion.createAlertInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - actionable
            - alertId
            - category
            - message
            - metadata
            - severity
            - title
          properties:
            actionable:
              type: boolean
            alertId:
              type: string
            category:
              oneOf:
                - type: string
                  enum:
                    - meeting_lifecycle
                - type: string
                  enum:
                    - video_provider
                - type: string
                  enum:
                    - transcription
                - type: string
                  enum:
                    - authentication
                - type: string
                  enum:
                    - performance
                - type: string
                  enum:
                    - security
                - type: string
                  enum:
                    - system
            message:
              type: string
            metadata:
              type: object
            severity:
              oneOf:
                - type: string
                  enum:
                    - critical
                - type: string
                  enum:
                    - error
                - type: string
                  enum:
                    - warning
                - type: string
                  enum:
                    - info
            title:
              type: string
    Response_transcripts.ingestion.createAlertInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "alerts"
    Request_transcripts.ingestion.getTranscriptChunks:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            bucketMs:
              type: number
            fromSequence:
              type: number
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.ingestion.getTranscriptChunks:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - confidence
              - createdAt
              - endMs
              - sequence
              - startMs
              - text
              - wordCount
            properties:
              _id:
                type: string
                description: ID from table "transcripts"
              confidence:
                type: number
              createdAt:
                type: number
              endMs:
                type: number
              language:
                type: string
              sequence:
                type: number
              speakerId:
                type: string
              startMs:
                type: number
              text:
                type: string
              wordCount:
                type: number
    Request_transcripts.ingestion.cleanupOldTranscripts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            olderThanMs:
              type: number
    Response_transcripts.ingestion.cleanupOldTranscripts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: number
    Request_transcripts.ingestion.getTranscriptStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.ingestion.getTranscriptStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageConfidence
            - bucketCount
            - duration
            - languages
            - speakers
            - totalChunks
            - totalWords
          properties:
            averageConfidence:
              type: number
            bucketCount:
              type: number
            duration:
              type: number
            languages:
              type: array
              items:
                type: string
            speakers:
              type: array
              items:
                type: string
            totalChunks:
              type: number
            totalWords:
              type: number
    Request_transcripts.ingestion.countTranscriptsForMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.ingestion.countTranscriptsForMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: number
    Request_transcripts.initialization.initializeTranscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.initialization.initializeTranscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - transcriptionProvider
          properties:
            success:
              type: boolean
            transcriptionProvider:
              oneOf:
                - type: string
                  enum:
                    - whisper
                - type: string
                  enum:
                    - assemblyai
                - type: string
                  enum:
                    - getstream
    Request_transcripts.initialization.createTranscriptionSession:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - provider
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            provider:
              oneOf:
                - type: string
                  enum:
                    - whisper
                - type: string
                  enum:
                    - assemblyai
                - type: string
                  enum:
                    - getstream
    Response_transcripts.initialization.createTranscriptionSession:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_transcripts.initialization.updateTranscriptionStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - status
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            status:
              oneOf:
                - type: string
                  enum:
                    - initializing
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - paused
                - type: string
                  enum:
                    - completed
                - type: string
                  enum:
                    - failed
    Response_transcripts.initialization.updateTranscriptionStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_transcripts.initialization.processTranscriptionChunk:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - chunk
            - meetingId
          properties:
            chunk:
              type: object
              required:
                - confidence
                - endTime
                - startTime
                - text
              properties:
                confidence:
                  type: number
                endTime:
                  type: number
                language:
                  type: string
                speakerId:
                  type: string
                startTime:
                  type: number
                text:
                  type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.initialization.processTranscriptionChunk:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_transcripts.initialization.finalizeTranscription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.initialization.finalizeTranscription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - totalChunks
          properties:
            success:
              type: boolean
            totalChunks:
              type: number
    Request_system.idempotency.getKey:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - key
            - scope
          properties:
            key:
              type: string
            scope:
              type: string
    Response_system.idempotency.getKey:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - key
            - scope
          properties:
            _id:
              type: string
              description: ID from table "idempotencyKeys"
            createdAt:
              type: number
            key:
              type: string
            metadata:
              type: object
            scope:
              type: string
          nullable: true
    Request_system.idempotency.createKey:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - createdAt
            - key
            - scope
          properties:
            createdAt:
              type: number
            key:
              type: string
            metadata:
              type: object
            scope:
              type: string
    Response_system.idempotency.createKey:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "idempotencyKeys"
    Request_system.idempotency.patchKey:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - id
            - metadata
          properties:
            id:
              type: string
              description: ID from table "idempotencyKeys"
            metadata:
              type: object
    Response_system.idempotency.patchKey:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_system.idempotency.deleteKey:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: ID from table "idempotencyKeys"
    Response_system.idempotency.deleteKey:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_system.idempotency.resolveResult:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - key
            - scope
          properties:
            key:
              type: string
            scope:
              type: string
    Response_system.idempotency.resolveResult:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - kind
          properties:
            inlineValue:
              oneOf:
                - type: string
                - type: number
                - type: boolean
            json:
              type: string
            kind:
              oneOf:
                - type: string
                  enum:
                    - inline
                - type: string
                  enum:
                    - storage
            size:
              type: number
    Request_system.idempotency.enforceRateLimit:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - action
            - maxCount
            - userId
            - windowMs
          properties:
            action:
              type: string
            maxCount:
              type: number
            userId:
              type: string
              description: ID from table "users"
            windowMs:
              type: number
    Response_system.idempotency.enforceRateLimit:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - remaining
            - resetAt
          properties:
            remaining:
              type: number
            resetAt:
              type: number
    Request_transcripts.aggregation.clearTranscriptSegmentsForMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.aggregation.clearTranscriptSegmentsForMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: number
    Request_transcripts.aggregation.writeTranscriptSegmentsBatch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - segments
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            segments:
              type: array
              items:
                type: object
                required:
                  - endMs
                  - speakers
                  - startMs
                  - text
                  - topics
                properties:
                  endMs:
                    type: number
                  sentiment:
                    type: number
                  speakers:
                    type: array
                    items:
                      type: string
                  startMs:
                    type: number
                  text:
                    type: string
                  topics:
                    type: array
                    items:
                      type: string
    Response_transcripts.aggregation.writeTranscriptSegmentsBatch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: number
    Request_transcripts.aggregation.aggregateTranscriptSegments:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.aggregation.aggregateTranscriptSegments:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - segmentsCreated
            - success
          properties:
            segmentsCreated:
              type: number
            success:
              type: boolean
    Request_transcripts.aggregation.cleanupOldTranscriptSegments:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_transcripts.aggregation.cleanupOldTranscriptSegments:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: number
    Request_meetings.postProcessing.handleMeetingEnd:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - endedAt
            - meetingId
          properties:
            endedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.postProcessing.handleMeetingEnd:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - tasksScheduled
          properties:
            success:
              type: boolean
            tasksScheduled:
              type: array
              items:
                type: string
    Request_insights.generation.generateParticipantInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
              description: ID from table "users"
    Response_insights.generation.generateParticipantInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "insights"
          nullable: true
    Request_insights.generation.generateInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            forceRegenerate:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_insights.generation.generateInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - insightsGenerated
            - participantInsights
            - success
          properties:
            insightsGenerated:
              type: number
            participantInsights:
              type: array
              items:
                type: string
                description: ID from table "insights"
            success:
              type: boolean
    Request_analytics.meetings.updateMeetingAnalytics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - endedAt
            - meetingId
          properties:
            endedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_analytics.meetings.updateMeetingAnalytics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_interests.queries.listCatalog:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            category:
              type: string
            limit:
              type: number
    Response_interests.queries.listCatalog:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - category
              - key
              - label
            properties:
              category:
                type: string
              iconName:
                type: string
              key:
                type: string
              label:
                type: string
              usageCount:
                type: number
    Request_interests.queries.getUserInterests:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_interests.queries.getUserInterests:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - category
              - key
              - label
            properties:
              category:
                type: string
              iconName:
                type: string
              key:
                type: string
              label:
                type: string
    Request_interests.queries.seedDefault:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_interests.queries.seedDefault:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_system.rateLimit.enforce:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - action
            - maxCount
            - userId
            - windowMs
          properties:
            action:
              type: string
            maxCount:
              type: number
            userId:
              type: string
              description: ID from table "users"
            windowMs:
              type: number
    Response_system.rateLimit.enforce:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - remaining
            - resetAt
          properties:
            remaining:
              type: number
            resetAt:
              type: number
    Request_transcripts.streaming.processTranscriptStream:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - chunks
            - meetingId
          properties:
            chunks:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - endTime
                  - startTime
                  - text
                properties:
                  confidence:
                    type: number
                  endTime:
                    type: number
                  isInterim:
                    type: boolean
                  language:
                    type: string
                  speakerId:
                    type: string
                  startTime:
                    type: number
                  text:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            streamConfig:
              type: object
              required:
                - batchSize
                - coalescingWindowMs
                - enableCoalescing
                - maxLatencyMs
              properties:
                batchSize:
                  type: number
                coalescingWindowMs:
                  type: number
                enableCoalescing:
                  type: boolean
                maxLatencyMs:
                  type: number
    Response_transcripts.streaming.processTranscriptStream:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batches
            - performance
            - processed
            - success
          properties:
            batches:
              type: number
            performance:
              type: object
              required:
                - averageLatencyPerChunk
                - throughputChunksPerSecond
                - totalLatencyMs
              properties:
                averageLatencyPerChunk:
                  type: number
                throughputChunksPerSecond:
                  type: number
                totalLatencyMs:
                  type: number
            processed:
              type: number
            success:
              type: boolean
    Request_transcripts.streaming.updateStreamingMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - metrics
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metrics:
              type: object
              required:
                - batchesProcessed
                - chunksProcessed
                - latencyMs
                - throughputChunksPerSecond
                - timestamp
              properties:
                batchesProcessed:
                  type: number
                chunksProcessed:
                  type: number
                latencyMs:
                  type: number
                throughputChunksPerSecond:
                  type: number
                timestamp:
                  type: number
    Response_transcripts.streaming.updateStreamingMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_transcripts.streaming.manageStreamingBackpressure:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - currentLoad
            - meetingId
          properties:
            currentLoad:
              type: object
              required:
                - averageLatencyMs
                - chunksPerSecond
                - queueDepth
              properties:
                averageLatencyMs:
                  type: number
                chunksPerSecond:
                  type: number
                queueDepth:
                  type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.streaming.manageStreamingBackpressure:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - action
            - recommendedBatchSize
            - recommendedCoalescingWindow
            - shouldThrottle
          properties:
            action:
              oneOf:
                - type: string
                  enum:
                    - continue
                - type: string
                  enum:
                    - throttle
                - type: string
                  enum:
                    - pause
                - type: string
                  enum:
                    - alert
            recommendedBatchSize:
              type: number
            recommendedCoalescingWindow:
              type: number
            shouldThrottle:
              type: boolean
    Request_transcripts.streaming.cleanupStreamingMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_transcripts.streaming.cleanupStreamingMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: number
    Request_transcripts.streaming.getStreamingStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            timeRangeMs:
              type: number
    Response_transcripts.streaming.getStreamingStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageLatency
            - averageThroughput
            - peakThroughput
            - performanceGrade
            - totalBatches
            - totalChunksProcessed
          properties:
            averageLatency:
              type: number
            averageThroughput:
              type: number
            peakThroughput:
              type: number
            performanceGrade:
              oneOf:
                - type: string
                  enum:
                    - excellent
                - type: string
                  enum:
                    - good
                - type: string
                  enum:
                    - fair
                - type: string
                  enum:
                    - poor
            totalBatches:
              type: number
            totalChunksProcessed:
              type: number
    Request_transcripts.queries.getTranscriptSegments:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.queries.getTranscriptSegments:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - endMs
              - meetingId
              - speakers
              - startMs
              - text
              - topics
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "transcriptSegments"
              createdAt:
                type: number
              endMs:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              sentiment:
                type: number
              speakers:
                type: array
                items:
                  type: string
              startMs:
                type: number
              text:
                type: string
              topics:
                type: array
                items:
                  type: string
    Request_transcripts.queries.listTranscriptsAfterSequence:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - fromSequence
            - limit
            - meetingId
          properties:
            fromSequence:
              type: number
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_transcripts.queries.listTranscriptsAfterSequence:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - bucketMs
              - confidence
              - createdAt
              - endMs
              - meetingId
              - sequence
              - startMs
              - text
              - wordCount
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "transcripts"
              bucketMs:
                type: number
              confidence:
                type: number
              createdAt:
                type: number
              endMs:
                type: number
              isInterim:
                type: boolean
              language:
                type: string
              meetingId:
                type: string
                description: ID from table "meetings"
              sequence:
                type: number
              speakerId:
                type: string
              startMs:
                type: number
              text:
                type: string
              wordCount:
                type: number
    Request_monitoring.alerts.createAlert:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - actionable
            - alertId
            - category
            - message
            - severity
            - title
          properties:
            actionable:
              type: boolean
            alertId:
              type: string
            category:
              oneOf:
                - type: string
                  enum:
                    - meeting_lifecycle
                - type: string
                  enum:
                    - video_provider
                - type: string
                  enum:
                    - transcription
                - type: string
                  enum:
                    - authentication
                - type: string
                  enum:
                    - performance
                - type: string
                  enum:
                    - security
                - type: string
                  enum:
                    - system
            message:
              type: string
            metadata:
              type: object
            severity:
              oneOf:
                - type: string
                  enum:
                    - critical
                - type: string
                  enum:
                    - error
                - type: string
                  enum:
                    - warning
                - type: string
                  enum:
                    - info
            title:
              type: string
    Response_monitoring.alerts.createAlert:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "alerts"
    Request_embeddings.actions.advancedVectorSearch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - vector
          properties:
            filters:
              type: object
              properties:
                createdAfter:
                  type: number
                createdBefore:
                  type: number
                model:
                  type: string
                sourceIds:
                  type: array
                  items:
                    type: string
            limit:
              type: number
            sourceTypes:
              type: array
              items:
                oneOf:
                  - type: string
                    enum:
                      - user
                  - type: string
                    enum:
                      - profile
                  - type: string
                    enum:
                      - meeting
                  - type: string
                    enum:
                      - note
                  - type: string
                    enum:
                      - transcriptSegment
            threshold:
              type: number
            vector:
              type: string
              format: binary
    Response_embeddings.actions.advancedVectorSearch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - query
            - results
            - searchTime
            - totalCount
          properties:
            query:
              type: object
              required:
                - dimensions
                - filters
                - threshold
              properties:
                dimensions:
                  type: number
                filters: {}
                threshold:
                  type: number
            results:
              type: array
              items:
                type: object
                required:
                  - embedding
                  - score
                properties:
                  embedding:
                    type: object
                    required:
                      - _creationTime
                      - _id
                      - createdAt
                      - dimensions
                      - metadata
                      - model
                      - sourceId
                      - sourceType
                      - vector
                      - version
                    properties:
                      _creationTime:
                        type: number
                      _id:
                        type: string
                        description: ID from table "embeddings"
                      createdAt:
                        type: number
                      dimensions:
                        type: number
                      metadata:
                        type: object
                      model:
                        type: string
                      sourceId:
                        type: string
                      sourceType:
                        oneOf:
                          - type: string
                            enum:
                              - user
                          - type: string
                            enum:
                              - profile
                          - type: string
                            enum:
                              - meeting
                          - type: string
                            enum:
                              - note
                          - type: string
                            enum:
                              - transcriptSegment
                      vector:
                        type: string
                        format: binary
                      version:
                        type: string
                  score:
                    type: number
                  sourceData: {}
            searchTime:
              type: number
            totalCount:
              type: number
    Request_embeddings.actions.generateEmbeddingsBatch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - batchId
            - operations
          properties:
            batchId:
              type: string
            model:
              type: string
            operations:
              type: array
              items:
                type: object
                required:
                  - sourceId
                  - sourceType
                  - type
                properties:
                  content:
                    type: string
                  metadata:
                    type: object
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  type:
                    oneOf:
                      - type: string
                        enum:
                          - create
                      - type: string
                        enum:
                          - update
                      - type: string
                        enum:
                          - delete
    Response_embeddings.actions.generateEmbeddingsBatch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchId
            - failedOperations
            - processingTime
            - results
            - successfulOperations
            - totalOperations
          properties:
            batchId:
              type: string
            failedOperations:
              type: number
            processingTime:
              type: number
            results:
              type: array
              items:
                type: object
                required:
                  - sourceId
                  - success
                properties:
                  embeddingId:
                    type: string
                    description: ID from table "embeddings"
                  error:
                    type: string
                  sourceId:
                    type: string
                  success:
                    type: boolean
            successfulOperations:
              type: number
            totalOperations:
              type: number
    Request_embeddings.actions.generateMeetingEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            forceRegenerate:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_embeddings.actions.generateMeetingEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "embeddings"
          nullable: true
    Request_embeddings.actions.generateUserProfileEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            forceRegenerate:
              type: boolean
            userId:
              type: string
              description: ID from table "users"
    Response_embeddings.actions.generateUserProfileEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "embeddings"
          nullable: true
    Request_embeddings.actions.generateEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - content
            - sourceId
            - sourceType
          properties:
            content:
              type: string
            metadata:
              type: object
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.actions.generateEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - dimensions
            - embeddingId
            - model
            - processingTime
            - success
            - vector
          properties:
            dimensions:
              type: number
            embeddingId:
              type: string
              description: ID from table "embeddings"
            error:
              type: string
            model:
              type: string
            processingTime:
              type: number
            success:
              type: boolean
            vector:
              type: string
              format: binary
    Request_embeddings.index.getEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddingId
          properties:
            embeddingId:
              type: string
              description: ID from table "embeddings"
    Response_embeddings.index.getEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - dimensions
            - metadata
            - model
            - sourceId
            - sourceType
            - vector
            - version
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "embeddings"
            createdAt:
              type: number
            dimensions:
              type: number
            metadata:
              type: object
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
            vector:
              type: string
              format: binary
            version:
              type: string
          nullable: true
    Request_embeddings.index.getEmbeddingAnalytics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_embeddings.index.getEmbeddingAnalytics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageProcessingTime
            - embeddingsByModel
            - embeddingsBySource
            - qualityMetrics
            - searchMetrics
            - storageUsage
            - totalEmbeddings
          properties:
            averageProcessingTime:
              type: number
            embeddingsByModel:
              type: object
            embeddingsBySource:
              type: object
            qualityMetrics:
              type: object
              required:
                - averageSimilarityScore
                - duplicateDetections
                - lowQualityEmbeddings
              properties:
                averageSimilarityScore:
                  type: number
                duplicateDetections:
                  type: number
                lowQualityEmbeddings:
                  type: number
            searchMetrics:
              type: object
              required:
                - averageResultCount
                - averageSearchTime
                - totalSearches
              properties:
                averageResultCount:
                  type: number
                averageSearchTime:
                  type: number
                totalSearches:
                  type: number
            storageUsage:
              type: object
              required:
                - estimatedSizeBytes
                - totalDimensions
                - totalVectors
              properties:
                estimatedSizeBytes:
                  type: number
                totalDimensions:
                  type: number
                totalVectors:
                  type: number
            totalEmbeddings:
              type: number
    Request_embeddings.index.getEmbeddingsByModel:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - model
            - paginationOpts
          properties:
            model:
              type: string
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
    Response_embeddings.index.getEmbeddingsByModel:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
    Request_embeddings.index.getEmbeddingsBySource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - paginationOpts
            - sourceId
            - sourceType
          properties:
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.index.getEmbeddingsBySource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
    Request_embeddings.index.getVectorIndexMeta:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - paginationOpts
          properties:
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
    Response_embeddings.index.getVectorIndexMeta:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - config
                  - createdAt
                  - indexName
                  - provider
                  - status
                  - updatedAt
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "vectorIndexMeta"
                  config:
                    type: object
                  createdAt:
                    type: number
                  indexName:
                    type: string
                  provider:
                    type: string
                  status:
                    oneOf:
                      - type: string
                        enum:
                          - active
                      - type: string
                        enum:
                          - inactive
                      - type: string
                        enum:
                          - migrating
                  updatedAt:
                    type: number
    Request_embeddings.index.vectorSimilaritySearch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - queryVector
          properties:
            limit:
              type: number
            model:
              type: string
            queryVector:
              type: string
              format: binary
            sourceTypes:
              type: array
              items:
                oneOf:
                  - type: string
                    enum:
                      - user
                  - type: string
                    enum:
                      - profile
                  - type: string
                    enum:
                      - meeting
                  - type: string
                    enum:
                      - note
                  - type: string
                    enum:
                      - transcriptSegment
            threshold:
              type: number
    Response_embeddings.index.vectorSimilaritySearch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - embedding
              - score
            properties:
              embedding:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
              score:
                type: number
              sourceData: {}
    Request_embeddings.index.generateEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - content
            - sourceId
            - sourceType
          properties:
            content:
              type: string
            metadata:
              type: object
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.index.generateEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - dimensions
            - embeddingId
            - model
            - processingTime
            - success
            - vector
          properties:
            dimensions:
              type: number
            embeddingId:
              type: string
              description: ID from table "embeddings"
            error:
              type: string
            model:
              type: string
            processingTime:
              type: number
            success:
              type: boolean
            vector:
              type: string
              format: binary
    Request_embeddings.mutations.createEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - dimensions
            - model
            - sourceId
            - sourceType
            - vector
          properties:
            dimensions:
              type: number
            metadata:
              type: object
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
            vector:
              type: string
              format: binary
            version:
              type: string
    Response_embeddings.mutations.createEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "embeddings"
    Request_embeddings.mutations.updateEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddingId
          properties:
            embeddingId:
              type: string
              description: ID from table "embeddings"
            metadata:
              type: object
            vector:
              type: string
              format: binary
            version:
              type: string
    Response_embeddings.mutations.updateEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_embeddings.mutations.deleteEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddingId
          properties:
            embeddingId:
              type: string
              description: ID from table "embeddings"
    Response_embeddings.mutations.deleteEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_embeddings.mutations.deleteEmbeddingsBySource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - sourceId
            - sourceType
          properties:
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.mutations.deleteEmbeddingsBySource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: number
    Request_embeddings.mutations.batchUpsertEmbeddings:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddings
          properties:
            embeddings:
              type: array
              items:
                type: object
                required:
                  - dimensions
                  - model
                  - sourceId
                  - sourceType
                  - vector
                properties:
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
    Response_embeddings.mutations.batchUpsertEmbeddings:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - created
            - embeddingIds
            - failed
            - updated
          properties:
            created:
              type: number
            embeddingIds:
              type: array
              items:
                type: string
                description: ID from table "embeddings"
            failed:
              type: number
            updated:
              type: number
    Request_embeddings.mutations.upsertVectorIndexMeta:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - config
            - indexName
            - provider
            - status
          properties:
            config:
              type: object
            indexName:
              type: string
            provider:
              type: string
            status:
              oneOf:
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - inactive
                - type: string
                  enum:
                    - migrating
    Response_embeddings.mutations.upsertVectorIndexMeta:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "vectorIndexMeta"
    Request_embeddings.mutations.updateVectorIndexStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - indexMetaId
            - status
          properties:
            indexMetaId:
              type: string
              description: ID from table "vectorIndexMeta"
            status:
              oneOf:
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - inactive
                - type: string
                  enum:
                    - migrating
    Response_embeddings.mutations.updateVectorIndexStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_embeddings.mutations.cleanupOldEmbeddings:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - olderThanMs
          properties:
            dryRun:
              type: boolean
            model:
              type: string
            olderThanMs:
              type: number
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.mutations.cleanupOldEmbeddings:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
            - found
          properties:
            deleted:
              type: number
            found:
              type: number
    Request_embeddings.queries.embeddingExistsForSource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - sourceId
            - sourceType
          properties:
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.queries.embeddingExistsForSource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: boolean
    Request_embeddings.queries.findSimilarEmbeddingsBySource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - sourceId
            - sourceType
          properties:
            limit:
              type: number
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.queries.findSimilarEmbeddingsBySource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - embedding
              - score
            properties:
              embedding:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
              score:
                type: number
              sourceData: {}
    Request_embeddings.queries.getEmbedding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddingId
          properties:
            embeddingId:
              type: string
              description: ID from table "embeddings"
    Response_embeddings.queries.getEmbedding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - dimensions
            - metadata
            - model
            - sourceId
            - sourceType
            - vector
            - version
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "embeddings"
            createdAt:
              type: number
            dimensions:
              type: number
            metadata:
              type: object
            model:
              type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
            vector:
              type: string
              format: binary
            version:
              type: string
          nullable: true
    Request_embeddings.queries.getEmbeddingAnalytics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_embeddings.queries.getEmbeddingAnalytics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageProcessingTime
            - embeddingsByModel
            - embeddingsBySource
            - qualityMetrics
            - searchMetrics
            - storageUsage
            - totalEmbeddings
          properties:
            averageProcessingTime:
              type: number
            embeddingsByModel:
              type: object
            embeddingsBySource:
              type: object
            qualityMetrics:
              type: object
              required:
                - averageSimilarityScore
                - duplicateDetections
                - lowQualityEmbeddings
              properties:
                averageSimilarityScore:
                  type: number
                duplicateDetections:
                  type: number
                lowQualityEmbeddings:
                  type: number
            searchMetrics:
              type: object
              required:
                - averageResultCount
                - averageSearchTime
                - totalSearches
              properties:
                averageResultCount:
                  type: number
                averageSearchTime:
                  type: number
                totalSearches:
                  type: number
            storageUsage:
              type: object
              required:
                - estimatedSizeBytes
                - totalDimensions
                - totalVectors
              properties:
                estimatedSizeBytes:
                  type: number
                totalDimensions:
                  type: number
                totalVectors:
                  type: number
            totalEmbeddings:
              type: number
    Request_embeddings.queries.getEmbeddingWithSource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - embeddingId
          properties:
            embeddingId:
              type: string
              description: ID from table "embeddings"
    Response_embeddings.queries.getEmbeddingWithSource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - dimensions
            - metadata
            - model
            - sourceId
            - sourceType
            - vector
            - version
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "embeddings"
            createdAt:
              type: number
            dimensions:
              type: number
            metadata:
              type: object
            model:
              type: string
            sourceDetails:
              type: object
              properties:
                author:
                  type: object
                  required:
                    - _id
                  properties:
                    _id:
                      type: string
                      description: ID from table "users"
                    avatarUrl:
                      type: string
                    displayName:
                      type: string
                createdAt:
                  type: number
                description:
                  type: string
                title:
                  type: string
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
            vector:
              type: string
              format: binary
            version:
              type: string
          nullable: true
    Request_embeddings.queries.getEmbeddingsByModel:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - model
            - paginationOpts
          properties:
            model:
              type: string
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
    Response_embeddings.queries.getEmbeddingsByModel:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
    Request_embeddings.queries.getEmbeddingsBySource:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - paginationOpts
            - sourceId
            - sourceType
          properties:
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
            sourceId:
              type: string
            sourceType:
              oneOf:
                - type: string
                  enum:
                    - user
                - type: string
                  enum:
                    - profile
                - type: string
                  enum:
                    - meeting
                - type: string
                  enum:
                    - note
                - type: string
                  enum:
                    - transcriptSegment
    Response_embeddings.queries.getEmbeddingsBySource:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
    Request_embeddings.queries.getVectorIndexMeta:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - paginationOpts
          properties:
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
    Response_embeddings.queries.getVectorIndexMeta:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _creationTime
                  - _id
                  - config
                  - createdAt
                  - indexName
                  - provider
                  - status
                  - updatedAt
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "vectorIndexMeta"
                  config:
                    type: object
                  createdAt:
                    type: number
                  indexName:
                    type: string
                  provider:
                    type: string
                  status:
                    oneOf:
                      - type: string
                        enum:
                          - active
                      - type: string
                        enum:
                          - inactive
                      - type: string
                        enum:
                          - migrating
                  updatedAt:
                    type: number
    Request_embeddings.queries.vectorSimilaritySearch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - queryVector
          properties:
            limit:
              type: number
            model:
              type: string
            queryVector:
              type: string
              format: binary
            sourceTypes:
              type: array
              items:
                oneOf:
                  - type: string
                    enum:
                      - user
                  - type: string
                    enum:
                      - profile
                  - type: string
                    enum:
                      - meeting
                  - type: string
                    enum:
                      - note
                  - type: string
                    enum:
                      - transcriptSegment
            threshold:
              type: number
    Response_embeddings.queries.vectorSimilaritySearch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - embedding
              - score
            properties:
              embedding:
                type: object
                required:
                  - _creationTime
                  - _id
                  - createdAt
                  - dimensions
                  - metadata
                  - model
                  - sourceId
                  - sourceType
                  - vector
                  - version
                properties:
                  _creationTime:
                    type: number
                  _id:
                    type: string
                    description: ID from table "embeddings"
                  createdAt:
                    type: number
                  dimensions:
                    type: number
                  metadata:
                    type: object
                  model:
                    type: string
                  sourceId:
                    type: string
                  sourceType:
                    oneOf:
                      - type: string
                        enum:
                          - user
                      - type: string
                        enum:
                          - profile
                      - type: string
                        enum:
                          - meeting
                      - type: string
                        enum:
                          - note
                      - type: string
                        enum:
                          - transcriptSegment
                  vector:
                    type: string
                    format: binary
                  version:
                    type: string
              score:
                type: number
              sourceData: {}
    Request_insights.index.deleteInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - insightId
          properties:
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.index.deleteInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_insights.index.getConnectionRecommendations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
    Response_insights.index.getConnectionRecommendations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - confidence
              - content
              - createdAt
              - meetingId
              - meetingTitle
              - type
            properties:
              confidence:
                type: number
              content:
                type: string
              createdAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              meetingTitle:
                type: string
              type:
                type: string
    Request_insights.index.getInsightById:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - insightId
          properties:
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.index.getInsightById:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - actionItems
            - createdAt
            - links
            - meetingDate
            - meetingId
            - meetingTitle
            - recommendations
            - summary
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "insights"
            actionItems:
              type: array
              items:
                type: string
            createdAt:
              type: number
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingDate:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            meetingTitle:
              type: string
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
          nullable: true
    Request_insights.index.getMeetingInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_insights.index.getMeetingInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - actionItems
            - createdAt
            - links
            - meetingDate
            - meetingTitle
            - recommendations
            - summary
          properties:
            _id:
              type: string
              description: ID from table "insights"
            actionItems:
              type: array
              items:
                type: string
            createdAt:
              type: number
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingDate:
              type: number
            meetingTitle:
              type: string
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
          nullable: true
    Request_insights.index.getUserInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            offset:
              type: number
    Response_insights.index.getUserInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - actionItems
              - createdAt
              - meetingDate
              - meetingId
              - meetingTitle
              - recommendations
              - summary
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "insights"
              actionItems:
                type: array
                items:
                  type: string
              createdAt:
                type: number
              meetingDate:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              meetingTitle:
                type: string
              recommendations:
                type: array
                items:
                  type: object
                  required:
                    - confidence
                    - content
                    - type
                  properties:
                    confidence:
                      type: number
                    content:
                      type: string
                    type:
                      type: string
              summary:
                type: string
    Request_insights.index.updateInsightsFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - feedback
            - insightId
          properties:
            feedback:
              type: object
              properties:
                notes:
                  type: string
                rating:
                  type: number
                read:
                  type: boolean
                useful:
                  type: boolean
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.index.updateInsightsFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_insights.index.generateInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            forceRegenerate:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_insights.index.generateInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - insightsGenerated
            - participantInsights
            - success
          properties:
            insightsGenerated:
              type: number
            participantInsights:
              type: array
              items:
                type: string
                description: ID from table "insights"
            success:
              type: boolean
    Request_insights.mutations.batchCreateInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - insights
          properties:
            insights:
              type: array
              items:
                type: object
                required:
                  - actionItems
                  - meetingId
                  - recommendations
                  - summary
                  - userId
                properties:
                  actionItems:
                    type: array
                    items:
                      type: string
                  links:
                    type: array
                    items:
                      type: object
                      required:
                        - title
                        - type
                        - url
                      properties:
                        title:
                          type: string
                        type:
                          type: string
                        url:
                          type: string
                  meetingId:
                    type: string
                    description: ID from table "meetings"
                  recommendations:
                    type: array
                    items:
                      type: object
                      required:
                        - confidence
                        - content
                        - type
                      properties:
                        confidence:
                          type: number
                        content:
                          type: string
                        type:
                          type: string
                  summary:
                    type: string
                  userId:
                    type: string
                    description: ID from table "users"
    Response_insights.mutations.batchCreateInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: string
            description: ID from table "insights"
    Request_insights.mutations.cleanupOldInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - olderThanMs
          properties:
            batchSize:
              type: number
            olderThanMs:
              type: number
    Response_insights.mutations.cleanupOldInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
            - remaining
          properties:
            deleted:
              type: number
            remaining:
              type: boolean
    Request_insights.mutations.createInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - actionItems
            - meetingId
            - recommendations
            - summary
            - userId
          properties:
            actionItems:
              type: array
              items:
                type: string
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_insights.mutations.createInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "insights"
    Request_insights.mutations.deleteInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - insightId
          properties:
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.mutations.deleteInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_insights.mutations.updateInsightsFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - feedback
            - insightId
          properties:
            feedback:
              type: object
              properties:
                notes:
                  type: string
                rating:
                  type: number
                read:
                  type: boolean
                useful:
                  type: boolean
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.mutations.updateInsightsFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_insights.queries.getConnectionRecommendations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
    Response_insights.queries.getConnectionRecommendations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - confidence
              - content
              - createdAt
              - meetingId
              - meetingTitle
              - type
            properties:
              confidence:
                type: number
              content:
                type: string
              createdAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              meetingTitle:
                type: string
              type:
                type: string
    Request_insights.queries.getInsightById:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - insightId
          properties:
            insightId:
              type: string
              description: ID from table "insights"
    Response_insights.queries.getInsightById:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - actionItems
            - createdAt
            - links
            - meetingDate
            - meetingId
            - meetingTitle
            - recommendations
            - summary
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "insights"
            actionItems:
              type: array
              items:
                type: string
            createdAt:
              type: number
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingDate:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            meetingTitle:
              type: string
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
          nullable: true
    Request_insights.queries.getInsightsByUserAndMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
              description: ID from table "users"
    Response_insights.queries.getInsightsByUserAndMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - actionItems
            - createdAt
            - links
            - meetingId
            - recommendations
            - summary
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "insights"
            actionItems:
              type: array
              items:
                type: string
            createdAt:
              type: number
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_insights.queries.getMeetingInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_insights.queries.getMeetingInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - actionItems
            - createdAt
            - links
            - meetingDate
            - meetingTitle
            - recommendations
            - summary
          properties:
            _id:
              type: string
              description: ID from table "insights"
            actionItems:
              type: array
              items:
                type: string
            createdAt:
              type: number
            links:
              type: array
              items:
                type: object
                required:
                  - title
                  - type
                  - url
                properties:
                  title:
                    type: string
                  type:
                    type: string
                  url:
                    type: string
            meetingDate:
              type: number
            meetingTitle:
              type: string
            recommendations:
              type: array
              items:
                type: object
                required:
                  - confidence
                  - content
                  - type
                properties:
                  confidence:
                    type: number
                  content:
                    type: string
                  type:
                    type: string
            summary:
              type: string
          nullable: true
    Request_insights.queries.getUserInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            offset:
              type: number
    Response_insights.queries.getUserInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - actionItems
              - createdAt
              - meetingDate
              - meetingId
              - meetingTitle
              - recommendations
              - summary
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "insights"
              actionItems:
                type: array
                items:
                  type: string
              createdAt:
                type: number
              meetingDate:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              meetingTitle:
                type: string
              recommendations:
                type: array
                items:
                  type: object
                  required:
                    - confidence
                    - content
                    - type
                  properties:
                    confidence:
                      type: number
                    content:
                      type: string
                    type:
                      type: string
              summary:
                type: string
    Request_insights.scheduler.processCompletedMeetings:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_insights.scheduler.processCompletedMeetings:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - errors
            - insightsGenerated
            - meetingsProcessed
          properties:
            errors:
              type: number
            insightsGenerated:
              type: number
            meetingsProcessed:
              type: number
    Request_insights.scheduler.getRecentlyCompletedMeetingsWithoutInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - hoursAgo
            - limit
          properties:
            hoursAgo:
              type: number
            limit:
              type: number
    Response_insights.scheduler.getRecentlyCompletedMeetingsWithoutInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - organizerId
              - title
              - updatedAt
            properties:
              _id:
                type: string
                description: ID from table "meetings"
              organizerId:
                type: string
                description: ID from table "users"
              title:
                type: string
              updatedAt:
                type: number
    Request_insights.scheduler.cleanupOldInsights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            retentionDays:
              type: number
    Response_insights.scheduler.cleanupOldInsights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - batchesProcessed
            - deleted
          properties:
            batchesProcessed:
              type: number
            deleted:
              type: number
    Request_matching.analytics.getGlobalMatchingAnalytics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            timeRange:
              type: number
    Response_matching.analytics.getGlobalMatchingAnalytics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageScore
            - featureImportance
            - matchingTrends
            - outcomeDistribution
            - totalMatches
          properties:
            averageScore:
              type: number
            featureImportance:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - correlation
                  - feature
                properties:
                  averageScore:
                    type: number
                  correlation:
                    type: number
                  feature:
                    type: string
            matchingTrends:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - date
                  - matchCount
                properties:
                  averageScore:
                    type: number
                  date:
                    type: string
                  matchCount:
                    type: number
            outcomeDistribution:
              type: object
              required:
                - accepted
                - completed
                - declined
              properties:
                accepted:
                  type: number
                completed:
                  type: number
                declined:
                  type: number
            totalMatches:
              type: number
    Request_matching.analytics.getMatchHistory:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            offset:
              type: number
    Response_matching.analytics.getMatchHistory:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - createdAt
              - features
              - matchId
              - outcome
            properties:
              _id:
                type: string
                description: ID from table "matchingAnalytics"
              createdAt:
                type: number
              features:
                type: object
                required:
                  - experienceGap
                  - industryMatch
                  - interestOverlap
                  - languageOverlap
                  - orgConstraintMatch
                  - roleComplementarity
                  - timezoneCompatibility
                properties:
                  experienceGap:
                    type: number
                  industryMatch:
                    type: number
                  interestOverlap:
                    type: number
                  languageOverlap:
                    type: number
                  orgConstraintMatch:
                    type: number
                  roleComplementarity:
                    type: number
                  timezoneCompatibility:
                    type: number
                  vectorSimilarity:
                    type: number
              feedback:
                type: object
                required:
                  - rating
                properties:
                  comments:
                    type: string
                  rating:
                    type: number
              matchId:
                type: string
              outcome:
                oneOf:
                  - type: string
                    enum:
                      - accepted
                  - type: string
                    enum:
                      - declined
                  - type: string
                    enum:
                      - completed
    Request_matching.analytics.getMatchesForOptimization:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - minSamples
          properties:
            minSamples:
              type: number
    Response_matching.analytics.getMatchesForOptimization:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - features
              - outcome
            properties:
              features:
                type: object
                required:
                  - experienceGap
                  - industryMatch
                  - interestOverlap
                  - languageOverlap
                  - orgConstraintMatch
                  - roleComplementarity
                  - timezoneCompatibility
                properties:
                  experienceGap:
                    type: number
                  industryMatch:
                    type: number
                  interestOverlap:
                    type: number
                  languageOverlap:
                    type: number
                  orgConstraintMatch:
                    type: number
                  roleComplementarity:
                    type: number
                  timezoneCompatibility:
                    type: number
                  vectorSimilarity:
                    type: number
              feedback:
                type: object
                required:
                  - rating
                properties:
                  comments:
                    type: string
                  rating:
                    type: number
              outcome:
                oneOf:
                  - type: string
                    enum:
                      - accepted
                  - type: string
                    enum:
                      - declined
                  - type: string
                    enum:
                      - completed
    Request_matching.analytics.getMatchingStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.analytics.getMatchingStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - acceptedMatches
            - completedMatches
            - successRate
            - topFeatures
            - totalMatches
          properties:
            acceptedMatches:
              type: number
            averageRating:
              type: number
            completedMatches:
              type: number
            successRate:
              type: number
            topFeatures:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - count
                  - feature
                properties:
                  averageScore:
                    type: number
                  count:
                    type: number
                  feature:
                    type: string
            totalMatches:
              type: number
    Request_matching.analytics.optimizeMatchingWeights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            minSamples:
              type: number
    Response_matching.analytics.optimizeMatchingWeights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - improvement
            - optimizedWeights
            - sampleSize
          properties:
            improvement:
              type: number
            optimizedWeights:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            sampleSize:
              type: number
    Request_matching.analytics.submitMatchFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - matchId
            - outcome
          properties:
            feedback:
              type: object
              required:
                - rating
              properties:
                comments:
                  type: string
                rating:
                  type: number
            matchId:
              type: string
            outcome:
              oneOf:
                - type: string
                  enum:
                    - accepted
                - type: string
                  enum:
                    - declined
                - type: string
                  enum:
                    - completed
    Response_matching.analytics.submitMatchFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.engine.createMatch:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - matchResult
            - user1QueueId
            - user2QueueId
          properties:
            matchResult:
              type: object
              required:
                - explanation
                - features
                - matchId
                - score
                - user1Id
                - user2Id
              properties:
                explanation:
                  type: array
                  items:
                    type: string
                features:
                  type: object
                  required:
                    - experienceGap
                    - industryMatch
                    - interestOverlap
                    - languageOverlap
                    - orgConstraintMatch
                    - roleComplementarity
                    - timezoneCompatibility
                  properties:
                    experienceGap:
                      type: number
                    industryMatch:
                      type: number
                    interestOverlap:
                      type: number
                    languageOverlap:
                      type: number
                    orgConstraintMatch:
                      type: number
                    roleComplementarity:
                      type: number
                    timezoneCompatibility:
                      type: number
                    vectorSimilarity:
                      type: number
                matchId:
                  type: string
                score:
                  type: number
                user1Id:
                  type: string
                  description: ID from table "users"
                user2Id:
                  type: string
                  description: ID from table "users"
            user1QueueId:
              type: string
              description: ID from table "matchingQueue"
            user2QueueId:
              type: string
              description: ID from table "matchingQueue"
    Response_matching.engine.createMatch:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: boolean
    Request_matching.engine.getShardQueueEntries:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - limit
            - shard
            - shardCount
          properties:
            limit:
              type: number
            shard:
              type: number
            shardCount:
              type: number
    Response_matching.engine.getShardQueueEntries:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - availableFrom
              - availableTo
              - constraints
              - createdAt
              - userId
            properties:
              _id:
                type: string
                description: ID from table "matchingQueue"
              availableFrom:
                type: number
              availableTo:
                type: number
              constraints:
                type: object
                required:
                  - interests
                  - roles
                properties:
                  interests:
                    type: array
                    items:
                      type: string
                  orgConstraints:
                    type: string
                  roles:
                    type: array
                    items:
                      type: string
              createdAt:
                type: number
              userId:
                type: string
                description: ID from table "users"
    Request_matching.engine.logMatchingMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - averageScore
            - minScore
            - processingTimeMs
            - shardCount
            - totalMatches
          properties:
            averageScore:
              type: number
            minScore:
              type: number
            processingTimeMs:
              type: number
            shardCount:
              type: number
            totalMatches:
              type: number
    Response_matching.engine.logMatchingMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.engine.processMatchingShard:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - maxMatchesPerShard
            - minScore
            - shard
            - shardCount
          properties:
            maxMatchesPerShard:
              type: number
            minScore:
              type: number
            shard:
              type: number
            shardCount:
              type: number
    Response_matching.engine.processMatchingShard:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - matchCount
            - totalScore
          properties:
            matchCount:
              type: number
            totalScore:
              type: number
    Request_matching.engine.runMatchingCycle:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            maxMatches:
              type: number
            minScore:
              type: number
            shardCount:
              type: number
    Response_matching.engine.runMatchingCycle:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageScore
            - processedShards
            - processingTimeMs
            - totalMatches
          properties:
            averageScore:
              type: number
            processedShards:
              type: number
            processingTimeMs:
              type: number
            totalMatches:
              type: number
    Request_matching.engine.updateMatchOutcome:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - matchId
            - outcome
            - userId
          properties:
            feedback:
              type: object
              required:
                - rating
              properties:
                comments:
                  type: string
                rating:
                  type: number
            matchId:
              type: string
            outcome:
              oneOf:
                - type: string
                  enum:
                    - accepted
                - type: string
                  enum:
                    - declined
                - type: string
                  enum:
                    - completed
            userId:
              type: string
              description: ID from table "users"
    Response_matching.engine.updateMatchOutcome:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.index.calculateCompatibilityScore:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - user1Constraints
            - user1Id
            - user2Constraints
            - user2Id
          properties:
            customWeights:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
                - vectorSimilarity
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            user1Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user1Id:
              type: string
              description: ID from table "users"
            user2Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user2Id:
              type: string
              description: ID from table "users"
    Response_matching.index.calculateCompatibilityScore:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - explanation
            - features
            - score
          properties:
            explanation:
              type: array
              items:
                type: string
            features:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            score:
              type: number
    Request_matching.index.cancelQueueEntry:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            queueId:
              type: string
              description: ID from table "matchingQueue"
    Response_matching.index.cancelQueueEntry:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.index.enterMatchingQueue:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - availableFrom
            - availableTo
            - constraints
          properties:
            availableFrom:
              type: number
            availableTo:
              type: number
            constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
    Response_matching.index.enterMatchingQueue:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "matchingQueue"
    Request_matching.index.getGlobalMatchingAnalytics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            timeRange:
              type: number
    Response_matching.index.getGlobalMatchingAnalytics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageScore
            - featureImportance
            - matchingTrends
            - outcomeDistribution
            - totalMatches
          properties:
            averageScore:
              type: number
            featureImportance:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - correlation
                  - feature
                properties:
                  averageScore:
                    type: number
                  correlation:
                    type: number
                  feature:
                    type: string
            matchingTrends:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - date
                  - matchCount
                properties:
                  averageScore:
                    type: number
                  date:
                    type: string
                  matchCount:
                    type: number
            outcomeDistribution:
              type: object
              required:
                - accepted
                - completed
                - declined
              properties:
                accepted:
                  type: number
                completed:
                  type: number
                declined:
                  type: number
            totalMatches:
              type: number
    Request_matching.index.getMatchHistory:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            offset:
              type: number
    Response_matching.index.getMatchHistory:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - createdAt
              - features
              - matchId
              - outcome
            properties:
              _id:
                type: string
                description: ID from table "matchingAnalytics"
              createdAt:
                type: number
              features:
                type: object
                required:
                  - experienceGap
                  - industryMatch
                  - interestOverlap
                  - languageOverlap
                  - orgConstraintMatch
                  - roleComplementarity
                  - timezoneCompatibility
                properties:
                  experienceGap:
                    type: number
                  industryMatch:
                    type: number
                  interestOverlap:
                    type: number
                  languageOverlap:
                    type: number
                  orgConstraintMatch:
                    type: number
                  roleComplementarity:
                    type: number
                  timezoneCompatibility:
                    type: number
                  vectorSimilarity:
                    type: number
              feedback:
                type: object
                required:
                  - rating
                properties:
                  comments:
                    type: string
                  rating:
                    type: number
              matchId:
                type: string
              outcome:
                oneOf:
                  - type: string
                    enum:
                      - accepted
                  - type: string
                    enum:
                      - declined
                  - type: string
                    enum:
                      - completed
    Request_matching.index.getMatchingStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.index.getMatchingStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - acceptedMatches
            - completedMatches
            - successRate
            - topFeatures
            - totalMatches
          properties:
            acceptedMatches:
              type: number
            averageRating:
              type: number
            completedMatches:
              type: number
            successRate:
              type: number
            topFeatures:
              type: array
              items:
                type: object
                required:
                  - averageScore
                  - count
                  - feature
                properties:
                  averageScore:
                    type: number
                  count:
                    type: number
                  feature:
                    type: string
            totalMatches:
              type: number
    Request_matching.index.getQueueStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.index.getQueueStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - availableFrom
            - availableTo
            - constraints
            - createdAt
            - status
            - updatedAt
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "matchingQueue"
            availableFrom:
              type: number
            availableTo:
              type: number
            constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            createdAt:
              type: number
            estimatedWaitTime:
              type: number
            matchedWith:
              type: string
              description: ID from table "users"
            potentialMatches:
              type: number
            queuePosition:
              type: number
            status:
              oneOf:
                - type: string
                  enum:
                    - waiting
                - type: string
                  enum:
                    - matched
                - type: string
                  enum:
                    - expired
                - type: string
                  enum:
                    - cancelled
            updatedAt:
              type: number
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_matching.index.optimizeMatchingWeights:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            minSamples:
              type: number
    Response_matching.index.optimizeMatchingWeights:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - improvement
            - optimizedWeights
            - sampleSize
          properties:
            improvement:
              type: number
            optimizedWeights:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            sampleSize:
              type: number
    Request_matching.index.runMatchingCycle:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            maxMatches:
              type: number
            minScore:
              type: number
            shardCount:
              type: number
    Response_matching.index.runMatchingCycle:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - averageScore
            - processedShards
            - processingTimeMs
            - totalMatches
          properties:
            averageScore:
              type: number
            processedShards:
              type: number
            processingTimeMs:
              type: number
            totalMatches:
              type: number
    Request_matching.index.submitMatchFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - matchId
            - outcome
          properties:
            feedback:
              type: object
              required:
                - rating
              properties:
                comments:
                  type: string
                rating:
                  type: number
            matchId:
              type: string
            outcome:
              oneOf:
                - type: string
                  enum:
                    - accepted
                - type: string
                  enum:
                    - declined
                - type: string
                  enum:
                    - completed
    Response_matching.index.submitMatchFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.queue.cancelQueueEntry:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            queueId:
              type: string
              description: ID from table "matchingQueue"
    Response_matching.queue.cancelQueueEntry:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.queue.cleanupExpiredEntries:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.queue.cleanupExpiredEntries:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - expiredCount
          properties:
            expiredCount:
              type: number
    Request_matching.queue.enterMatchingQueue:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - availableFrom
            - availableTo
            - constraints
          properties:
            availableFrom:
              type: number
            availableTo:
              type: number
            constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
    Response_matching.queue.enterMatchingQueue:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "matchingQueue"
    Request_matching.queue.getActiveQueueEntries:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            limit:
              type: number
            timeWindow:
              type: number
    Response_matching.queue.getActiveQueueEntries:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - availableFrom
              - availableTo
              - constraints
              - createdAt
              - status
              - updatedAt
              - userId
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "matchingQueue"
              availableFrom:
                type: number
              availableTo:
                type: number
              constraints:
                type: object
                required:
                  - interests
                  - roles
                properties:
                  interests:
                    type: array
                    items:
                      type: string
                  orgConstraints:
                    type: string
                  roles:
                    type: array
                    items:
                      type: string
              createdAt:
                type: number
              matchedWith:
                type: string
                description: ID from table "users"
              status:
                oneOf:
                  - type: string
                    enum:
                      - waiting
                  - type: string
                    enum:
                      - matched
                  - type: string
                    enum:
                      - expired
                  - type: string
                    enum:
                      - cancelled
              updatedAt:
                type: number
              userId:
                type: string
                description: ID from table "users"
    Request_matching.queue.getQueueStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.queue.getQueueStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - availableFrom
            - availableTo
            - constraints
            - createdAt
            - status
            - updatedAt
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "matchingQueue"
            availableFrom:
              type: number
            availableTo:
              type: number
            constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            createdAt:
              type: number
            estimatedWaitTime:
              type: number
            matchedWith:
              type: string
              description: ID from table "users"
            potentialMatches:
              type: number
            queuePosition:
              type: number
            status:
              oneOf:
                - type: string
                  enum:
                    - waiting
                - type: string
                  enum:
                    - matched
                - type: string
                  enum:
                    - expired
                - type: string
                  enum:
                    - cancelled
            updatedAt:
              type: number
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_matching.queue.updateQueueStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - queueId
            - status
          properties:
            matchedWith:
              type: string
              description: ID from table "users"
            queueId:
              type: string
              description: ID from table "matchingQueue"
            status:
              oneOf:
                - type: string
                  enum:
                    - waiting
                - type: string
                  enum:
                    - matched
                - type: string
                  enum:
                    - expired
                - type: string
                  enum:
                    - cancelled
    Response_matching.queue.updateQueueStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.scheduler.runAutomatedMatchingCycle:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.scheduler.runAutomatedMatchingCycle:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.scheduler.runQueueMaintenance:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_matching.scheduler.runQueueMaintenance:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.scheduler.logMatchingError:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - error
            - timestamp
          properties:
            error:
              type: string
            timestamp:
              type: number
    Response_matching.scheduler.logMatchingError:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_matching.scoring.calculateCompatibilityScore:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - user1Constraints
            - user1Id
            - user2Constraints
            - user2Id
          properties:
            customWeights:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
                - vectorSimilarity
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            user1Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user1Id:
              type: string
              description: ID from table "users"
            user2Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user2Id:
              type: string
              description: ID from table "users"
    Response_matching.scoring.calculateCompatibilityScore:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - explanation
            - features
            - score
          properties:
            explanation:
              type: array
              items:
                type: string
            features:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            score:
              type: number
    Request_matching.scoring.calculateCompatibilityScoreInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - user1Constraints
            - user1Id
            - user2Constraints
            - user2Id
          properties:
            customWeights:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
                - vectorSimilarity
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            user1Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user1Id:
              type: string
              description: ID from table "users"
            user2Constraints:
              type: object
              required:
                - interests
                - roles
              properties:
                interests:
                  type: array
                  items:
                    type: string
                orgConstraints:
                  type: string
                roles:
                  type: array
                  items:
                    type: string
            user2Id:
              type: string
              description: ID from table "users"
    Response_matching.scoring.calculateCompatibilityScoreInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - explanation
            - features
            - score
          properties:
            explanation:
              type: array
              items:
                type: string
            features:
              type: object
              required:
                - experienceGap
                - industryMatch
                - interestOverlap
                - languageOverlap
                - orgConstraintMatch
                - roleComplementarity
                - timezoneCompatibility
              properties:
                experienceGap:
                  type: number
                industryMatch:
                  type: number
                interestOverlap:
                  type: number
                languageOverlap:
                  type: number
                orgConstraintMatch:
                  type: number
                roleComplementarity:
                  type: number
                timezoneCompatibility:
                  type: number
                vectorSimilarity:
                  type: number
            score:
              type: number
    Request_matching.scoring.getUserScoringData:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_matching.scoring.getUserScoringData:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - embedding
            - interests
            - profile
            - user
          properties:
            embedding:
              type: object
              required:
                - model
                - vector
              properties:
                model:
                  type: string
                vector:
                  type: string
                  format: binary
              nullable: true
            interests:
              type: array
              items:
                type: string
            profile:
              type: object
              required:
                - languages
              properties:
                company:
                  type: string
                experience:
                  type: string
                field:
                  type: string
                languages:
                  type: array
                  items:
                    type: string
              nullable: true
            user:
              type: object
              required:
                - _id
              properties:
                _id:
                  type: string
                  description: ID from table "users"
                displayName:
                  type: string
                orgId:
                  type: string
                orgRole:
                  type: string
          nullable: true
    Request_meetings.stateTracking.updateSpeakingStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - speakingDurationMs
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            speakingDurationMs:
              type: number
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.stateTracking.updateSpeakingStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stateTracking.updateLullState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - duration
            - lastActivity
            - lullDetected
            - meetingId
          properties:
            duration:
              type: number
            lastActivity:
              type: number
            lullDetected:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stateTracking.updateLullState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stateTracking.updateCurrentTopics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - topics
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            topics:
              type: array
              items:
                type: string
    Response_meetings.stateTracking.updateCurrentTopics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stateTracking.detectLull:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - currentTime
            - meetingId
          properties:
            currentTime:
              type: number
            lullThresholdMs:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stateTracking.detectLull:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - duration
            - lullDetected
            - shouldGeneratePrompts
          properties:
            duration:
              type: number
            lullDetected:
              type: boolean
            shouldGeneratePrompts:
              type: boolean
    Request_meetings.stateTracking.recordActivity:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - activityType
            - meetingId
          properties:
            activityType:
              oneOf:
                - type: string
                  enum:
                    - speaking
                - type: string
                  enum:
                    - message
                - type: string
                  enum:
                    - screen_share
                - type: string
                  enum:
                    - reaction
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.stateTracking.recordActivity:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stateTracking.getSpeakingTimeRatios:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stateTracking.getSpeakingTimeRatios:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
    Request_meetings.stream.cleanup.cleanupMeetingResources:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stream.cleanup.cleanupMeetingResources:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
            - tasksCompleted
          properties:
            success:
              type: boolean
            tasksCompleted:
              type: array
              items:
                type: string
    Request_meetings.stream.index.createStreamRoom:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stream.index.createStreamRoom:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - callId
            - features
            - roomId
            - success
          properties:
            callId:
              type: string
            features:
              type: object
              required:
                - chat
                - maxParticipants
                - recording
                - screenSharing
                - transcription
              properties:
                chat:
                  type: boolean
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                screenSharing:
                  type: boolean
                transcription:
                  type: boolean
            roomId:
              type: string
            success:
              type: boolean
    Request_meetings.stream.index.deleteStreamRoom:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - roomId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            roomId:
              type: string
    Response_meetings.stream.index.deleteStreamRoom:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.index.generateParticipantToken:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            role:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.stream.index.generateParticipantToken:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - callId
            - expiresAt
            - success
            - token
            - userId
          properties:
            callId:
              type: string
            expiresAt:
              type: number
            success:
              type: boolean
            token:
              type: string
            userId:
              type: string
    Request_meetings.stream.index.generateParticipantTokenPublic:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            role:
              type: string
    Response_meetings.stream.index.generateParticipantTokenPublic:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - expiresAt
            - success
            - token
            - user
            - userId
          properties:
            expiresAt:
              type: number
            success:
              type: boolean
            token:
              type: string
            user:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: string
                image:
                  type: string
                name:
                  type: string
            userId:
              type: string
    Request_meetings.stream.index.startRecording:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            recordingConfig:
              type: object
              properties:
                audioOnly:
                  type: boolean
                layout:
                  oneOf:
                    - type: string
                      enum:
                        - grid
                    - type: string
                      enum:
                        - spotlight
                    - type: string
                      enum:
                        - single-participant
                mode:
                  oneOf:
                    - type: string
                      enum:
                        - available
                    - type: string
                      enum:
                        - disabled
                quality:
                  oneOf:
                    - type: string
                      enum:
                        - 360p
                    - type: string
                      enum:
                        - 720p
                    - type: string
                      enum:
                        - 1080p
    Response_meetings.stream.index.startRecording:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - recordingId
            - success
          properties:
            recordingId:
              type: string
            recordingUrl:
              type: string
            success:
              type: boolean
    Request_meetings.stream.index.stopRecording:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            recordingId:
              type: string
    Response_meetings.stream.index.stopRecording:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            duration:
              type: number
            recordingId:
              type: string
            recordingUrl:
              type: string
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleCallSessionStarted:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleCallSessionStarted:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleCallSessionEnded:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleCallSessionEnded:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleMemberJoined:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleMemberJoined:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleMemberLeft:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleMemberLeft:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleRecordingStarted:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleRecordingStarted:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleRecordingStopped:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleRecordingStopped:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleRecordingReady:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleRecordingReady:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleTranscriptionStarted:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleTranscriptionStarted:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHandlers.handleTranscriptionStopped:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                call:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                call_recording:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                call_session:
                  type: object
                  required:
                    - id
                  properties:
                    duration_ms:
                      type: number
                    id:
                      type: string
                user:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
    Response_meetings.stream.streamHandlers.handleTranscriptionStopped:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
    Request_meetings.stream.streamHelpers.updateRecordingState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - recordingEnabled
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            recordingEnabled:
              type: boolean
            recordingId:
              type: string
            recordingUrl:
              type: string
    Response_meetings.stream.streamHelpers.updateRecordingState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.streamHelpers.trackStreamEvent:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - event
            - meetingId
            - success
          properties:
            duration:
              type: number
            error:
              type: string
            event:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            success:
              type: boolean
    Response_meetings.stream.streamHelpers.trackStreamEvent:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.streamHelpers.sendStreamAlert:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - alertType
            - error
            - meetingId
          properties:
            alertType:
              type: string
            error:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
    Response_meetings.stream.streamHelpers.sendStreamAlert:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleCallStarted:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - callId
            - meetingId
            - startedAt
          properties:
            callId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            startedAt:
              type: number
    Response_meetings.stream.webhooks.handleCallStarted:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleCallEnded:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - callId
            - endedAt
            - meetingId
          properties:
            callId:
              type: string
            endedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.stream.webhooks.handleCallEnded:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleParticipantJoined:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - joinedAt
            - meetingId
            - userId
          properties:
            joinedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
    Response_meetings.stream.webhooks.handleParticipantJoined:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleParticipantLeft:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - leftAt
            - meetingId
            - userId
          properties:
            leftAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            userId:
              type: string
    Response_meetings.stream.webhooks.handleParticipantLeft:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleRecordingStarted:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - startedAt
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            recordingId:
              type: string
            startedAt:
              type: number
    Response_meetings.stream.webhooks.handleRecordingStarted:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.stream.webhooks.handleRecordingStopped:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - stoppedAt
          properties:
            downloadUrl:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            recordingId:
              type: string
            stoppedAt:
              type: number
    Response_meetings.stream.webhooks.handleRecordingStopped:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.cleanupOldWebRTCData:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_meetings.webrtc.index.cleanupOldWebRTCData:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - sessionsDeleted
            - signalsDeleted
          properties:
            sessionsDeleted:
              type: number
            signalsDeleted:
              type: number
    Request_meetings.webrtc.index.closeSession:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.index.closeSession:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.createWebRTCSession:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.index.createWebRTCSession:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - sessionId
            - success
          properties:
            sessionId:
              type: string
            success:
              type: boolean
    Request_meetings.webrtc.index.exchangeICECandidate:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - candidate
            - meetingId
            - sessionId
          properties:
            candidate:
              type: object
              required:
                - candidate
              properties:
                candidate:
                  type: string
                sdpMLineIndex:
                  type: number
                sdpMid:
                  type: string
                usernameFragment:
                  type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            targetUserId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.index.exchangeICECandidate:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.exchangeSessionDescription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - description
            - meetingId
            - sessionId
          properties:
            description:
              type: object
              required:
                - sdp
                - type
              properties:
                sdp:
                  type: string
                type:
                  oneOf:
                    - type: string
                      enum:
                        - offer
                    - type: string
                      enum:
                        - answer
                    - type: string
                      enum:
                        - pranswer
                    - type: string
                      enum:
                        - rollback
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            targetUserId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.index.exchangeSessionDescription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.generateParticipantAccessToken:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.index.generateParticipantAccessToken:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - participantId
            - permissions
            - provider
            - roomId
            - success
            - token
          properties:
            participantId:
              type: string
            permissions:
              type: object
              required:
                - canKick
                - canMute
                - canRecord
                - canShare
              properties:
                canKick:
                  type: boolean
                canMute:
                  type: boolean
                canRecord:
                  type: boolean
                canShare:
                  type: boolean
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            success:
              type: boolean
            token:
              type: string
    Request_meetings.webrtc.index.getActiveSessions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.index.getActiveSessions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - meetingId
              - sessionId
              - state
              - updatedAt
              - user
              - userId
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "webrtcSessions"
              connectionQuality:
                oneOf:
                  - type: string
                    enum:
                      - excellent
                  - type: string
                    enum:
                      - good
                  - type: string
                    enum:
                      - fair
                  - type: string
                    enum:
                      - poor
              createdAt:
                type: number
              lastMetricsAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              metadata:
                type: object
              sessionId:
                type: string
              state:
                oneOf:
                  - type: string
                    enum:
                      - connecting
                  - type: string
                    enum:
                      - connected
                  - type: string
                    enum:
                      - disconnected
                  - type: string
                    enum:
                      - failed
                  - type: string
                    enum:
                      - closed
              updatedAt:
                type: number
              user:
                type: object
                required:
                  - _id
                properties:
                  _id:
                    type: string
                    description: ID from table "users"
                  avatarUrl:
                    type: string
                  displayName:
                    type: string
              userId:
                type: string
                description: ID from table "users"
    Request_meetings.webrtc.index.getMeetingDoc:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.index.getMeetingDoc:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - organizerId
            - state
            - title
            - updatedAt
          properties:
            _id:
              type: string
              description: ID from table "meetings"
            createdAt:
              type: number
            description:
              type: string
            duration:
              type: number
            organizerId:
              type: string
              description: ID from table "users"
            participantCount:
              type: number
            scheduledAt:
              type: number
            state:
              oneOf:
                - type: string
                  enum:
                    - scheduled
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - concluded
                - type: string
                  enum:
                    - cancelled
            streamRoomId:
              type: string
            title:
              type: string
            updatedAt:
              type: number
            webrtcEnabled:
              type: boolean
          nullable: true
    Request_meetings.webrtc.index.getParticipantForAccess:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.index.getParticipantForAccess:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - meetingId
            - presence
            - role
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingParticipants"
            createdAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            presence:
              oneOf:
                - type: string
                  enum:
                    - invited
                - type: string
                  enum:
                    - joined
                - type: string
                  enum:
                    - left
            role:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
                - type: string
                  enum:
                    - observer
            userId:
              type: string
              description: ID from table "users"
    Request_meetings.webrtc.index.getPendingSignals:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            lastSignalId:
              type: string
              description: ID from table "webrtcSignals"
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.index.getPendingSignals:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - data
              - fromUserId
              - sessionId
              - timestamp
              - type
            properties:
              _id:
                type: string
                description: ID from table "webrtcSignals"
              data:
                oneOf:
                  - type: object
                    required:
                      - sdp
                      - type
                    properties:
                      sdp:
                        type: string
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - offer
                          - type: string
                            enum:
                              - answer
                          - type: string
                            enum:
                              - pranswer
                          - type: string
                            enum:
                              - rollback
                  - type: object
                    required:
                      - candidate
                    properties:
                      candidate:
                        type: string
                      sdpMLineIndex:
                        type: number
                      sdpMid:
                        type: string
                      usernameFragment:
                        type: string
              fromUserId:
                type: string
                description: ID from table "users"
              sessionId:
                type: string
              timestamp:
                type: number
              type:
                oneOf:
                  - type: string
                    enum:
                      - sdp
                  - type: string
                    enum:
                      - ice
    Request_meetings.webrtc.index.getVideoRoomConfigByMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.index.getVideoRoomConfigByMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - features
            - meetingId
            - provider
            - roomId
            - updatedAt
          properties:
            _id:
              type: string
              description: ID from table "videoRoomConfigs"
            createdAt:
              type: number
            features:
              type: object
              required:
                - chat
                - maxParticipants
                - recording
                - screenSharing
                - transcription
              properties:
                chat:
                  type: boolean
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                screenSharing:
                  type: boolean
                transcription:
                  type: boolean
            iceServers:
              type: array
              items:
                type: object
                required:
                  - urls
                properties:
                  credential:
                    type: string
                  urls:
                    oneOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                  username:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            updatedAt:
              type: number
          nullable: true
    Request_meetings.webrtc.index.handleConnectionFailure:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - errorType
            - meetingId
            - sessionId
          properties:
            errorDetails:
              type: string
            errorType:
              oneOf:
                - type: string
                  enum:
                    - ice_failed
                - type: string
                  enum:
                    - connection_timeout
                - type: string
                  enum:
                    - media_failed
                - type: string
                  enum:
                    - signaling_failed
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.index.handleConnectionFailure:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - retryRecommended
            - success
          properties:
            fallbackProvider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            retryRecommended:
              type: boolean
            success:
              type: boolean
    Request_meetings.webrtc.index.initializeWebRTCRoom:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            maxParticipants:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.index.initializeWebRTCRoom:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - features
            - provider
            - roomId
            - success
          properties:
            features:
              type: object
              required:
                - chat
                - maxParticipants
                - recording
                - screenSharing
                - transcription
              properties:
                chat:
                  type: boolean
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                screenSharing:
                  type: boolean
                transcription:
                  type: boolean
            iceServers:
              type: array
              items:
                type: object
                required:
                  - urls
                properties:
                  credential:
                    type: string
                  urls:
                    oneOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                  username:
                    type: string
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            success:
              type: boolean
    Request_meetings.webrtc.index.markSignalsProcessed:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - signalIds
          properties:
            signalIds:
              type: array
              items:
                type: string
                description: ID from table "webrtcSignals"
    Response_meetings.webrtc.index.markSignalsProcessed:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.monitorConnectionQuality:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - stats
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            stats:
              type: object
              required:
                - bitrate
                - jitter
                - latency
                - packetLoss
              properties:
                bitrate:
                  type: number
                jitter:
                  type: number
                latency:
                  type: number
                packetLoss:
                  type: number
    Response_meetings.webrtc.index.monitorConnectionQuality:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - quality
            - recommendations
            - shouldFallback
          properties:
            quality:
              oneOf:
                - type: string
                  enum:
                    - excellent
                - type: string
                  enum:
                    - good
                - type: string
                  enum:
                    - fair
                - type: string
                  enum:
                    - poor
            recommendations:
              type: array
              items:
                type: string
            shouldFallback:
              type: boolean
    Request_meetings.webrtc.index.storeConnectionMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - quality
            - sessionId
            - stats
            - timestamp
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            quality:
              oneOf:
                - type: string
                  enum:
                    - excellent
                - type: string
                  enum:
                    - good
                - type: string
                  enum:
                    - fair
                - type: string
                  enum:
                    - poor
            sessionId:
              type: string
            stats:
              type: object
              required:
                - bitrate
                - jitter
                - latency
                - packetLoss
              properties:
                bitrate:
                  type: number
                jitter:
                  type: number
                latency:
                  type: number
                packetLoss:
                  type: number
            timestamp:
              type: number
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.index.storeConnectionMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.storeRoomConfiguration:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - roomConfig
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            roomConfig:
              type: object
              required:
                - features
                - provider
                - roomId
                - success
              properties:
                features:
                  type: object
                  required:
                    - chat
                    - maxParticipants
                    - recording
                    - screenSharing
                    - transcription
                  properties:
                    chat:
                      type: boolean
                    maxParticipants:
                      type: number
                    recording:
                      type: boolean
                    screenSharing:
                      type: boolean
                    transcription:
                      type: boolean
                iceServers:
                  type: array
                  items:
                    type: object
                    required:
                      - urls
                    properties:
                      credential:
                        type: string
                      urls:
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      username:
                        type: string
                provider:
                  oneOf:
                    - type: string
                      enum:
                        - webrtc
                    - type: string
                      enum:
                        - getstream
                roomId:
                  type: string
                success:
                  type: boolean
    Response_meetings.webrtc.index.storeRoomConfiguration:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.updateSessionState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - state
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            sessionId:
              type: string
            state:
              oneOf:
                - type: string
                  enum:
                    - connecting
                - type: string
                  enum:
                    - connected
                - type: string
                  enum:
                    - disconnected
                - type: string
                  enum:
                    - failed
                - type: string
                  enum:
                    - closed
    Response_meetings.webrtc.index.updateSessionState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.index.updateSessionStateInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - state
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            sessionId:
              type: string
            state:
              oneOf:
                - type: string
                  enum:
                    - connecting
                - type: string
                  enum:
                    - connected
                - type: string
                  enum:
                    - disconnected
                - type: string
                  enum:
                    - failed
                - type: string
                  enum:
                    - closed
    Response_meetings.webrtc.index.updateSessionStateInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.rooms.generateParticipantAccessToken:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.rooms.generateParticipantAccessToken:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - participantId
            - permissions
            - provider
            - roomId
            - success
            - token
          properties:
            participantId:
              type: string
            permissions:
              type: object
              required:
                - canKick
                - canMute
                - canRecord
                - canShare
              properties:
                canKick:
                  type: boolean
                canMute:
                  type: boolean
                canRecord:
                  type: boolean
                canShare:
                  type: boolean
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            success:
              type: boolean
            token:
              type: string
    Request_meetings.webrtc.rooms.getMeetingDoc:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.rooms.getMeetingDoc:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - organizerId
            - state
            - title
            - updatedAt
          properties:
            _id:
              type: string
              description: ID from table "meetings"
            createdAt:
              type: number
            description:
              type: string
            duration:
              type: number
            organizerId:
              type: string
              description: ID from table "users"
            participantCount:
              type: number
            scheduledAt:
              type: number
            state:
              oneOf:
                - type: string
                  enum:
                    - scheduled
                - type: string
                  enum:
                    - active
                - type: string
                  enum:
                    - concluded
                - type: string
                  enum:
                    - cancelled
            streamRoomId:
              type: string
            title:
              type: string
            updatedAt:
              type: number
            webrtcEnabled:
              type: boolean
          nullable: true
    Request_meetings.webrtc.rooms.getParticipantForAccess:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.rooms.getParticipantForAccess:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - meetingId
            - presence
            - role
            - userId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingParticipants"
            createdAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            presence:
              oneOf:
                - type: string
                  enum:
                    - invited
                - type: string
                  enum:
                    - joined
                - type: string
                  enum:
                    - left
            role:
              oneOf:
                - type: string
                  enum:
                    - host
                - type: string
                  enum:
                    - participant
                - type: string
                  enum:
                    - observer
            userId:
              type: string
              description: ID from table "users"
    Request_meetings.webrtc.rooms.getVideoRoomConfigByMeeting:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.rooms.getVideoRoomConfigByMeeting:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - features
            - meetingId
            - provider
            - roomId
            - updatedAt
          properties:
            _id:
              type: string
              description: ID from table "videoRoomConfigs"
            createdAt:
              type: number
            features:
              type: object
              required:
                - chat
                - maxParticipants
                - recording
                - screenSharing
                - transcription
              properties:
                chat:
                  type: boolean
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                screenSharing:
                  type: boolean
                transcription:
                  type: boolean
            iceServers:
              type: array
              items:
                type: object
                required:
                  - urls
                properties:
                  credential:
                    type: string
                  urls:
                    oneOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                  username:
                    type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            updatedAt:
              type: number
          nullable: true
    Request_meetings.webrtc.rooms.handleConnectionFailure:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - errorType
            - meetingId
            - sessionId
          properties:
            errorDetails:
              type: string
            errorType:
              oneOf:
                - type: string
                  enum:
                    - ice_failed
                - type: string
                  enum:
                    - connection_timeout
                - type: string
                  enum:
                    - media_failed
                - type: string
                  enum:
                    - signaling_failed
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.rooms.handleConnectionFailure:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - retryRecommended
            - success
          properties:
            fallbackProvider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            retryRecommended:
              type: boolean
            success:
              type: boolean
    Request_meetings.webrtc.rooms.initializeWebRTCRoom:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            maxParticipants:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.rooms.initializeWebRTCRoom:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - features
            - provider
            - roomId
            - success
          properties:
            features:
              type: object
              required:
                - chat
                - maxParticipants
                - recording
                - screenSharing
                - transcription
              properties:
                chat:
                  type: boolean
                maxParticipants:
                  type: number
                recording:
                  type: boolean
                screenSharing:
                  type: boolean
                transcription:
                  type: boolean
            iceServers:
              type: array
              items:
                type: object
                required:
                  - urls
                properties:
                  credential:
                    type: string
                  urls:
                    oneOf:
                      - type: string
                      - type: array
                        items:
                          type: string
                  username:
                    type: string
            provider:
              oneOf:
                - type: string
                  enum:
                    - webrtc
                - type: string
                  enum:
                    - getstream
            roomId:
              type: string
            success:
              type: boolean
    Request_meetings.webrtc.rooms.monitorConnectionQuality:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - stats
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            stats:
              type: object
              required:
                - bitrate
                - jitter
                - latency
                - packetLoss
              properties:
                bitrate:
                  type: number
                jitter:
                  type: number
                latency:
                  type: number
                packetLoss:
                  type: number
    Response_meetings.webrtc.rooms.monitorConnectionQuality:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - quality
            - recommendations
            - shouldFallback
          properties:
            quality:
              oneOf:
                - type: string
                  enum:
                    - excellent
                - type: string
                  enum:
                    - good
                - type: string
                  enum:
                    - fair
                - type: string
                  enum:
                    - poor
            recommendations:
              type: array
              items:
                type: string
            shouldFallback:
              type: boolean
    Request_meetings.webrtc.rooms.storeRoomConfiguration:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - roomConfig
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            roomConfig:
              type: object
              required:
                - features
                - provider
                - roomId
                - success
              properties:
                features:
                  type: object
                  required:
                    - chat
                    - maxParticipants
                    - recording
                    - screenSharing
                    - transcription
                  properties:
                    chat:
                      type: boolean
                    maxParticipants:
                      type: number
                    recording:
                      type: boolean
                    screenSharing:
                      type: boolean
                    transcription:
                      type: boolean
                iceServers:
                  type: array
                  items:
                    type: object
                    required:
                      - urls
                    properties:
                      credential:
                        type: string
                      urls:
                        oneOf:
                          - type: string
                          - type: array
                            items:
                              type: string
                      username:
                        type: string
                provider:
                  oneOf:
                    - type: string
                      enum:
                        - webrtc
                    - type: string
                      enum:
                        - getstream
                roomId:
                  type: string
                success:
                  type: boolean
    Response_meetings.webrtc.rooms.storeRoomConfiguration:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.cleanupOldWebRTCData:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_meetings.webrtc.signaling.cleanupOldWebRTCData:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - sessionsDeleted
            - signalsDeleted
          properties:
            sessionsDeleted:
              type: number
            signalsDeleted:
              type: number
    Request_meetings.webrtc.signaling.closeSession:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.signaling.closeSession:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.createWebRTCSession:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.signaling.createWebRTCSession:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - sessionId
            - success
          properties:
            sessionId:
              type: string
            success:
              type: boolean
    Request_meetings.webrtc.signaling.exchangeICECandidate:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - candidate
            - meetingId
            - sessionId
          properties:
            candidate:
              type: object
              required:
                - candidate
              properties:
                candidate:
                  type: string
                sdpMLineIndex:
                  type: number
                sdpMid:
                  type: string
                usernameFragment:
                  type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            targetUserId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.signaling.exchangeICECandidate:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.exchangeSessionDescription:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - description
            - meetingId
            - sessionId
          properties:
            description:
              type: object
              required:
                - sdp
                - type
              properties:
                sdp:
                  type: string
                type:
                  oneOf:
                    - type: string
                      enum:
                        - offer
                    - type: string
                      enum:
                        - answer
                    - type: string
                      enum:
                        - pranswer
                    - type: string
                      enum:
                        - rollback
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
            targetUserId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.signaling.exchangeSessionDescription:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.getActiveSessions:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_meetings.webrtc.signaling.getActiveSessions:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - createdAt
              - meetingId
              - sessionId
              - state
              - updatedAt
              - user
              - userId
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "webrtcSessions"
              connectionQuality:
                oneOf:
                  - type: string
                    enum:
                      - excellent
                  - type: string
                    enum:
                      - good
                  - type: string
                    enum:
                      - fair
                  - type: string
                    enum:
                      - poor
              createdAt:
                type: number
              lastMetricsAt:
                type: number
              meetingId:
                type: string
                description: ID from table "meetings"
              metadata:
                type: object
              sessionId:
                type: string
              state:
                oneOf:
                  - type: string
                    enum:
                      - connecting
                  - type: string
                    enum:
                      - connected
                  - type: string
                    enum:
                      - disconnected
                  - type: string
                    enum:
                      - failed
                  - type: string
                    enum:
                      - closed
              updatedAt:
                type: number
              user:
                type: object
                required:
                  - _id
                properties:
                  _id:
                    type: string
                    description: ID from table "users"
                  avatarUrl:
                    type: string
                  displayName:
                    type: string
              userId:
                type: string
                description: ID from table "users"
    Request_meetings.webrtc.signaling.getPendingSignals:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            lastSignalId:
              type: string
              description: ID from table "webrtcSignals"
            meetingId:
              type: string
              description: ID from table "meetings"
            sessionId:
              type: string
    Response_meetings.webrtc.signaling.getPendingSignals:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - data
              - fromUserId
              - sessionId
              - timestamp
              - type
            properties:
              _id:
                type: string
                description: ID from table "webrtcSignals"
              data:
                oneOf:
                  - type: object
                    required:
                      - sdp
                      - type
                    properties:
                      sdp:
                        type: string
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - offer
                          - type: string
                            enum:
                              - answer
                          - type: string
                            enum:
                              - pranswer
                          - type: string
                            enum:
                              - rollback
                  - type: object
                    required:
                      - candidate
                    properties:
                      candidate:
                        type: string
                      sdpMLineIndex:
                        type: number
                      sdpMid:
                        type: string
                      usernameFragment:
                        type: string
              fromUserId:
                type: string
                description: ID from table "users"
              sessionId:
                type: string
              timestamp:
                type: number
              type:
                oneOf:
                  - type: string
                    enum:
                      - sdp
                  - type: string
                    enum:
                      - ice
    Request_meetings.webrtc.signaling.markSignalsProcessed:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - signalIds
          properties:
            signalIds:
              type: array
              items:
                type: string
                description: ID from table "webrtcSignals"
    Response_meetings.webrtc.signaling.markSignalsProcessed:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.storeConnectionMetrics:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - quality
            - sessionId
            - stats
            - timestamp
            - userId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            quality:
              oneOf:
                - type: string
                  enum:
                    - excellent
                - type: string
                  enum:
                    - good
                - type: string
                  enum:
                    - fair
                - type: string
                  enum:
                    - poor
            sessionId:
              type: string
            stats:
              type: object
              required:
                - bitrate
                - jitter
                - latency
                - packetLoss
              properties:
                bitrate:
                  type: number
                jitter:
                  type: number
                latency:
                  type: number
                packetLoss:
                  type: number
            timestamp:
              type: number
            userId:
              type: string
              description: ID from table "users"
    Response_meetings.webrtc.signaling.storeConnectionMetrics:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.updateSessionState:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - state
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            sessionId:
              type: string
            state:
              oneOf:
                - type: string
                  enum:
                    - connecting
                - type: string
                  enum:
                    - connected
                - type: string
                  enum:
                    - disconnected
                - type: string
                  enum:
                    - failed
                - type: string
                  enum:
                    - closed
    Response_meetings.webrtc.signaling.updateSessionState:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_meetings.webrtc.signaling.updateSessionStateInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - sessionId
            - state
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            metadata:
              type: object
            sessionId:
              type: string
            state:
              oneOf:
                - type: string
                  enum:
                    - connecting
                - type: string
                  enum:
                    - connected
                - type: string
                  enum:
                    - disconnected
                - type: string
                  enum:
                    - failed
                - type: string
                  enum:
                    - closed
    Response_meetings.webrtc.signaling.updateSessionStateInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_notes.index.applyNoteOperation:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientSequence
            - meetingId
            - operation
          properties:
            clientSequence:
              type: number
            expectedVersion:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            operation:
              type: object
              required:
                - position
                - type
              properties:
                content:
                  type: string
                length:
                  type: number
                position:
                  type: number
                type:
                  oneOf:
                    - type: string
                      enum:
                        - insert
                    - type: string
                      enum:
                        - delete
                    - type: string
                      enum:
                        - retain
    Response_notes.index.applyNoteOperation:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - conflicts
            - newVersion
            - serverSequence
            - success
            - transformedOperation
          properties:
            conflicts:
              type: array
              items:
                type: string
            newVersion:
              type: number
            serverSequence:
              type: number
            success:
              type: boolean
            transformedOperation:
              type: object
              required:
                - position
                - type
              properties:
                content:
                  type: string
                length:
                  type: number
                position:
                  type: number
                type:
                  oneOf:
                    - type: string
                      enum:
                        - insert
                    - type: string
                      enum:
                        - delete
                    - type: string
                      enum:
                        - retain
    Request_notes.index.batchApplyNoteOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - operations
          properties:
            expectedVersion:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            operations:
              type: array
              items:
                type: object
                required:
                  - clientSequence
                  - operation
                properties:
                  clientSequence:
                    type: number
                  operation:
                    type: object
                    required:
                      - position
                      - type
                    properties:
                      content:
                        type: string
                      length:
                        type: number
                      position:
                        type: number
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - insert
                          - type: string
                            enum:
                              - delete
                          - type: string
                            enum:
                              - retain
    Response_notes.index.batchApplyNoteOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - failed
            - newVersion
            - processed
            - results
            - success
          properties:
            failed:
              type: number
            newVersion:
              type: number
            processed:
              type: number
            results:
              type: array
              items:
                type: object
                required:
                  - conflicts
                  - serverSequence
                  - transformedOperation
                properties:
                  conflicts:
                    type: array
                    items:
                      type: string
                  serverSequence:
                    type: number
                  transformedOperation:
                    type: object
                    required:
                      - position
                      - type
                    properties:
                      content:
                        type: string
                      length:
                        type: number
                      position:
                        type: number
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - insert
                          - type: string
                            enum:
                              - delete
                          - type: string
                            enum:
                              - retain
            success:
              type: boolean
    Request_notes.index.cleanupOfflineData:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_notes.index.cleanupOfflineData:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - checkpointsDeleted
            - queueItemsDeleted
          properties:
            checkpointsDeleted:
              type: number
            queueItemsDeleted:
              type: number
    Request_notes.index.cleanupOldNoteOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            keepMinimumOps:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            olderThanMs:
              type: number
    Response_notes.index.cleanupOldNoteOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: number
    Request_notes.index.clearSyncedOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            olderThanMs:
              type: number
    Response_notes.index.clearSyncedOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - cleared
          properties:
            cleared:
              type: number
    Request_notes.index.composeConsecutiveOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - authorId
            - meetingId
          properties:
            authorId:
              type: string
              description: ID from table "users"
            maxOperations:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.composeConsecutiveOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - composed
            - newCount
            - originalCount
          properties:
            composed:
              type: number
            newCount:
              type: number
            originalCount:
              type: number
    Request_notes.index.createOfflineCheckpoint:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - checkpointData
            - clientId
            - meetingId
          properties:
            checkpointData:
              type: object
              required:
                - contentHash
                - sequence
                - timestamp
                - version
              properties:
                contentHash:
                  type: string
                sequence:
                  type: number
                timestamp:
                  type: number
                version:
                  type: number
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.createOfflineCheckpoint:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - checkpointId
            - success
          properties:
            checkpointId:
              type: string
            success:
              type: boolean
    Request_notes.index.getMeetingNotes:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.getMeetingNotes:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - content
            - lastRebasedAt
            - meetingId
            - updatedAt
            - version
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingNotes"
            content:
              type: string
            lastRebasedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            updatedAt:
              type: number
            version:
              type: number
          nullable: true
    Request_notes.index.getOfflineQueueStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.getOfflineQueueStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - failed
            - pending
            - queueHealth
            - synced
            - syncing
            - totalQueued
          properties:
            failed:
              type: number
            newestPending:
              type: number
            oldestPending:
              type: number
            pending:
              type: number
            queueHealth:
              oneOf:
                - type: string
                  enum:
                    - healthy
                - type: string
                  enum:
                    - warning
                - type: string
                  enum:
                    - critical
            synced:
              type: number
            syncing:
              type: number
            totalQueued:
              type: number
    Request_notes.index.queueOfflineOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
            - operations
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            operations:
              type: array
              items:
                type: object
                required:
                  - attempts
                  - authorId
                  - clientId
                  - id
                  - position
                  - queuedAt
                  - sequence
                  - status
                  - timestamp
                  - type
                properties:
                  attempts:
                    type: number
                  authorId:
                    type: string
                  clientId:
                    type: string
                  content:
                    type: string
                  error:
                    type: string
                  id:
                    type: string
                  lastAttempt:
                    type: number
                  length:
                    type: number
                  position:
                    type: number
                  queuedAt:
                    type: number
                  sequence:
                    type: number
                  status:
                    oneOf:
                      - type: string
                        enum:
                          - pending
                      - type: string
                        enum:
                          - syncing
                      - type: string
                        enum:
                          - synced
                      - type: string
                        enum:
                          - failed
                  timestamp:
                    type: number
                  transformedFrom:
                    type: array
                    items:
                      type: string
                  type:
                    oneOf:
                      - type: string
                        enum:
                          - insert
                      - type: string
                        enum:
                          - delete
                      - type: string
                        enum:
                          - retain
    Response_notes.index.queueOfflineOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - queueId
            - queued
            - success
          properties:
            queueId:
              type: string
            queued:
              type: number
            success:
              type: boolean
    Request_notes.index.rebaseNotesDocument:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            fromSequence:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.rebaseNotesDocument:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - contentLength
            - newVersion
            - operationsProcessed
            - success
          properties:
            contentLength:
              type: number
            newVersion:
              type: number
            operationsProcessed:
              type: number
            success:
              type: boolean
    Request_notes.index.restoreFromCheckpoint:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - checkpointId
            - clientId
            - meetingId
          properties:
            checkpointId:
              type: string
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.restoreFromCheckpoint:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            checkpoint:
              type: object
              required:
                - contentHash
                - sequence
                - timestamp
                - version
              properties:
                contentHash:
                  type: string
                sequence:
                  type: number
                timestamp:
                  type: number
                version:
                  type: number
            success:
              type: boolean
    Request_notes.index.retryFailedOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            maxRetries:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.index.retryFailedOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - retriedCount
            - successCount
          properties:
            retriedCount:
              type: number
            successCount:
              type: number
    Request_notes.index.rollbackToSequence:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - targetSequence
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            reason:
              type: string
            targetSequence:
              type: number
    Response_notes.index.rollbackToSequence:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - newVersion
            - operationsRemoved
            - success
          properties:
            newVersion:
              type: number
            operationsRemoved:
              type: number
            success:
              type: boolean
    Request_notes.index.syncOfflineOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            maxOperations:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            queueId:
              type: string
    Response_notes.index.syncOfflineOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - conflicts
            - errors
            - failed
            - newVersion
            - remainingInQueue
            - success
            - synced
          properties:
            conflicts:
              type: number
            errors:
              type: array
              items:
                type: string
            failed:
              type: number
            newVersion:
              type: number
            remainingInQueue:
              type: number
            success:
              type: boolean
            synced:
              type: number
    Request_notes.mutations.applyNoteOperation:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientSequence
            - meetingId
            - operation
          properties:
            clientSequence:
              type: number
            expectedVersion:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            operation:
              type: object
              required:
                - position
                - type
              properties:
                content:
                  type: string
                length:
                  type: number
                position:
                  type: number
                type:
                  oneOf:
                    - type: string
                      enum:
                        - insert
                    - type: string
                      enum:
                        - delete
                    - type: string
                      enum:
                        - retain
    Response_notes.mutations.applyNoteOperation:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - conflicts
            - newVersion
            - serverSequence
            - success
            - transformedOperation
          properties:
            conflicts:
              type: array
              items:
                type: string
            newVersion:
              type: number
            serverSequence:
              type: number
            success:
              type: boolean
            transformedOperation:
              type: object
              required:
                - position
                - type
              properties:
                content:
                  type: string
                length:
                  type: number
                position:
                  type: number
                type:
                  oneOf:
                    - type: string
                      enum:
                        - insert
                    - type: string
                      enum:
                        - delete
                    - type: string
                      enum:
                        - retain
    Request_notes.mutations.batchApplyNoteOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - operations
          properties:
            expectedVersion:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            operations:
              type: array
              items:
                type: object
                required:
                  - clientSequence
                  - operation
                properties:
                  clientSequence:
                    type: number
                  operation:
                    type: object
                    required:
                      - position
                      - type
                    properties:
                      content:
                        type: string
                      length:
                        type: number
                      position:
                        type: number
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - insert
                          - type: string
                            enum:
                              - delete
                          - type: string
                            enum:
                              - retain
    Response_notes.mutations.batchApplyNoteOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - failed
            - newVersion
            - processed
            - results
            - success
          properties:
            failed:
              type: number
            newVersion:
              type: number
            processed:
              type: number
            results:
              type: array
              items:
                type: object
                required:
                  - conflicts
                  - serverSequence
                  - transformedOperation
                properties:
                  conflicts:
                    type: array
                    items:
                      type: string
                  serverSequence:
                    type: number
                  transformedOperation:
                    type: object
                    required:
                      - position
                      - type
                    properties:
                      content:
                        type: string
                      length:
                        type: number
                      position:
                        type: number
                      type:
                        oneOf:
                          - type: string
                            enum:
                              - insert
                          - type: string
                            enum:
                              - delete
                          - type: string
                            enum:
                              - retain
            success:
              type: boolean
    Request_notes.mutations.cleanupOldNoteOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            keepMinimumOps:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            olderThanMs:
              type: number
    Response_notes.mutations.cleanupOldNoteOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - deleted
          properties:
            deleted:
              type: number
    Request_notes.mutations.composeConsecutiveOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - authorId
            - meetingId
          properties:
            authorId:
              type: string
              description: ID from table "users"
            maxOperations:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.mutations.composeConsecutiveOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - composed
            - newCount
            - originalCount
          properties:
            composed:
              type: number
            newCount:
              type: number
            originalCount:
              type: number
    Request_notes.mutations.rebaseNotesDocument:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            fromSequence:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.mutations.rebaseNotesDocument:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - contentLength
            - newVersion
            - operationsProcessed
            - success
          properties:
            contentLength:
              type: number
            newVersion:
              type: number
            operationsProcessed:
              type: number
            success:
              type: boolean
    Request_notes.mutations.rollbackToSequence:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - targetSequence
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            reason:
              type: string
            targetSequence:
              type: number
    Response_notes.mutations.rollbackToSequence:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - newVersion
            - operationsRemoved
            - success
          properties:
            newVersion:
              type: number
            operationsRemoved:
              type: number
            success:
              type: boolean
    Request_notes.offline.cleanupOfflineData:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_notes.offline.cleanupOfflineData:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - checkpointsDeleted
            - queueItemsDeleted
          properties:
            checkpointsDeleted:
              type: number
            queueItemsDeleted:
              type: number
    Request_notes.offline.clearSyncedOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            olderThanMs:
              type: number
    Response_notes.offline.clearSyncedOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - cleared
          properties:
            cleared:
              type: number
    Request_notes.offline.createOfflineCheckpoint:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - checkpointData
            - clientId
            - meetingId
          properties:
            checkpointData:
              type: object
              required:
                - contentHash
                - sequence
                - timestamp
                - version
              properties:
                contentHash:
                  type: string
                sequence:
                  type: number
                timestamp:
                  type: number
                version:
                  type: number
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.offline.createOfflineCheckpoint:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - checkpointId
            - success
          properties:
            checkpointId:
              type: string
            success:
              type: boolean
    Request_notes.offline.getOfflineQueueStatus:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.offline.getOfflineQueueStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - failed
            - pending
            - queueHealth
            - synced
            - syncing
            - totalQueued
          properties:
            failed:
              type: number
            newestPending:
              type: number
            oldestPending:
              type: number
            pending:
              type: number
            queueHealth:
              oneOf:
                - type: string
                  enum:
                    - healthy
                - type: string
                  enum:
                    - warning
                - type: string
                  enum:
                    - critical
            synced:
              type: number
            syncing:
              type: number
            totalQueued:
              type: number
    Request_notes.offline.queueOfflineOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
            - operations
          properties:
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            operations:
              type: array
              items:
                type: object
                required:
                  - attempts
                  - authorId
                  - clientId
                  - id
                  - position
                  - queuedAt
                  - sequence
                  - status
                  - timestamp
                  - type
                properties:
                  attempts:
                    type: number
                  authorId:
                    type: string
                  clientId:
                    type: string
                  content:
                    type: string
                  error:
                    type: string
                  id:
                    type: string
                  lastAttempt:
                    type: number
                  length:
                    type: number
                  position:
                    type: number
                  queuedAt:
                    type: number
                  sequence:
                    type: number
                  status:
                    oneOf:
                      - type: string
                        enum:
                          - pending
                      - type: string
                        enum:
                          - syncing
                      - type: string
                        enum:
                          - synced
                      - type: string
                        enum:
                          - failed
                  timestamp:
                    type: number
                  transformedFrom:
                    type: array
                    items:
                      type: string
                  type:
                    oneOf:
                      - type: string
                        enum:
                          - insert
                      - type: string
                        enum:
                          - delete
                      - type: string
                        enum:
                          - retain
    Response_notes.offline.queueOfflineOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - queueId
            - queued
            - success
          properties:
            queueId:
              type: string
            queued:
              type: number
            success:
              type: boolean
    Request_notes.offline.restoreFromCheckpoint:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - checkpointId
            - clientId
            - meetingId
          properties:
            checkpointId:
              type: string
            clientId:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.offline.restoreFromCheckpoint:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - success
          properties:
            checkpoint:
              type: object
              required:
                - contentHash
                - sequence
                - timestamp
                - version
              properties:
                contentHash:
                  type: string
                sequence:
                  type: number
                timestamp:
                  type: number
                version:
                  type: number
            success:
              type: boolean
    Request_notes.offline.retryFailedOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            maxRetries:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.offline.retryFailedOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - retriedCount
            - successCount
          properties:
            retriedCount:
              type: number
            successCount:
              type: number
    Request_notes.offline.syncOfflineOperations:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - clientId
            - meetingId
          properties:
            clientId:
              type: string
            maxOperations:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            queueId:
              type: string
    Response_notes.offline.syncOfflineOperations:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - conflicts
            - errors
            - failed
            - newVersion
            - remainingInQueue
            - success
            - synced
          properties:
            conflicts:
              type: number
            errors:
              type: array
              items:
                type: string
            failed:
              type: number
            newVersion:
              type: number
            remainingInQueue:
              type: number
            success:
              type: boolean
            synced:
              type: number
    Request_notes.queries.getMeetingNotes:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_notes.queries.getMeetingNotes:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - content
            - lastRebasedAt
            - meetingId
            - updatedAt
            - version
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "meetingNotes"
            content:
              type: string
            lastRebasedAt:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            updatedAt:
              type: number
            version:
              type: number
          nullable: true
    Request_profiles.queries.getProfileByUserId:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_profiles.queries.getProfileByUserId:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - displayName
            - languages
            - updatedAt
            - userId
          properties:
            _id:
              type: string
              description: ID from table "profiles"
            age:
              type: number
            bio:
              type: string
            company:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            experience:
              type: string
            field:
              type: string
            gender:
              oneOf:
                - type: string
                  enum:
                    - male
                - type: string
                  enum:
                    - female
                - type: string
                  enum:
                    - non-binary
                - type: string
                  enum:
                    - prefer-not-to-say
            goals:
              type: string
            jobTitle:
              type: string
            languages:
              type: array
              items:
                type: string
            linkedinUrl:
              type: string
            updatedAt:
              type: number
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_profiles.queries.getCurrentUserProfile:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_profiles.queries.getCurrentUserProfile:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - createdAt
            - displayName
            - languages
            - updatedAt
            - userId
          properties:
            _id:
              type: string
              description: ID from table "profiles"
            age:
              type: number
            bio:
              type: string
            company:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            experience:
              type: string
            field:
              type: string
            gender:
              oneOf:
                - type: string
                  enum:
                    - male
                - type: string
                  enum:
                    - female
                - type: string
                  enum:
                    - non-binary
                - type: string
                  enum:
                    - prefer-not-to-say
            goals:
              type: string
            jobTitle:
              type: string
            languages:
              type: array
              items:
                type: string
            linkedinUrl:
              type: string
            updatedAt:
              type: number
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_profiles.queries.getProfileByUserIdPublic:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_profiles.queries.getProfileByUserIdPublic:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - displayName
            - languages
            - userId
          properties:
            _id:
              type: string
              description: ID from table "profiles"
            bio:
              type: string
            company:
              type: string
            displayName:
              type: string
            experience:
              type: string
            field:
              type: string
            goals:
              type: string
            jobTitle:
              type: string
            languages:
              type: array
              items:
                type: string
            userId:
              type: string
              description: ID from table "users"
          nullable: true
    Request_prompts.actions.detectLullAndGeneratePrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.actions.detectLullAndGeneratePrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - lullDetected
            - promptIds
            - promptsGenerated
          properties:
            lullDetected:
              type: boolean
            promptIds:
              type: array
              items:
                type: string
                description: ID from table "prompts"
            promptsGenerated:
              type: number
    Request_prompts.actions.generatePreCallIdeas:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            forceRegenerate:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.actions.generatePreCallIdeas:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - fromCache
            - generated
            - promptIds
          properties:
            fromCache:
              type: boolean
            generated:
              type: boolean
            promptIds:
              type: array
              items:
                type: string
                description: ID from table "prompts"
    Request_prompts.actions.generateContextualPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - context
            - meetingId
          properties:
            context:
              type: object
              required:
                - currentTopics
                - lastActivity
                - lullDetected
                - speakingTimeRatios
                - topicShift
              properties:
                currentTopics:
                  type: array
                  items:
                    type: string
                lastActivity:
                  type: number
                lullDetected:
                  type: boolean
                lullDuration:
                  type: number
                speakingTimeRatios:
                  type: object
                topicShift:
                  type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.actions.generateContextualPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: string
            description: ID from table "prompts"
    Request_prompts.index.getInCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.index.getInCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - content
              - createdAt
              - relevance
              - tags
            properties:
              _id:
                type: string
                description: ID from table "prompts"
              content:
                type: string
              createdAt:
                type: number
              feedback:
                oneOf:
                  - type: string
                    enum:
                      - used
                  - type: string
                    enum:
                      - dismissed
                  - type: string
                    enum:
                      - upvoted
              relevance:
                type: number
              tags:
                type: array
                items:
                  type: string
              usedAt:
                type: number
    Request_prompts.index.getPreCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.index.getPreCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - content
              - createdAt
              - relevance
              - tags
            properties:
              _id:
                type: string
                description: ID from table "prompts"
              content:
                type: string
              createdAt:
                type: number
              feedback:
                oneOf:
                  - type: string
                    enum:
                      - used
                  - type: string
                    enum:
                      - dismissed
                  - type: string
                    enum:
                      - upvoted
              relevance:
                type: number
              tags:
                type: array
                items:
                  type: string
              usedAt:
                type: number
    Request_prompts.index.subscribeToInCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.index.subscribeToInCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - lastUpdated
            - prompts
          properties:
            lastUpdated:
              type: number
            prompts:
              type: array
              items:
                type: object
                required:
                  - _id
                  - content
                  - createdAt
                  - relevance
                  - tags
                properties:
                  _id:
                    type: string
                    description: ID from table "prompts"
                  content:
                    type: string
                  createdAt:
                    type: number
                  feedback:
                    oneOf:
                      - type: string
                        enum:
                          - used
                      - type: string
                        enum:
                          - dismissed
                      - type: string
                        enum:
                          - upvoted
                  relevance:
                    type: number
                  tags:
                    type: array
                    items:
                      type: string
                  usedAt:
                    type: number
    Request_prompts.index.updatePromptFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - feedback
            - promptId
          properties:
            feedback:
              oneOf:
                - type: string
                  enum:
                    - used
                - type: string
                  enum:
                    - dismissed
                - type: string
                  enum:
                    - upvoted
            promptId:
              type: string
              description: ID from table "prompts"
    Response_prompts.index.updatePromptFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_prompts.index.generatePreCallIdeas:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            forceRegenerate:
              type: boolean
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.index.generatePreCallIdeas:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - fromCache
            - generated
            - promptIds
          properties:
            fromCache:
              type: boolean
            generated:
              type: boolean
            promptIds:
              type: array
              items:
                type: string
                description: ID from table "prompts"
    Request_prompts.index.detectLullAndGeneratePrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.index.detectLullAndGeneratePrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - lullDetected
            - promptIds
            - promptsGenerated
          properties:
            lullDetected:
              type: boolean
            promptIds:
              type: array
              items:
                type: string
                description: ID from table "prompts"
            promptsGenerated:
              type: number
    Request_prompts.mutations.batchCreatePrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - prompts
          properties:
            prompts:
              type: array
              items:
                type: object
                required:
                  - content
                  - meetingId
                  - relevance
                  - tags
                  - type
                properties:
                  content:
                    type: string
                  meetingId:
                    type: string
                    description: ID from table "meetings"
                  relevance:
                    type: number
                  tags:
                    type: array
                    items:
                      type: string
                  type:
                    oneOf:
                      - type: string
                        enum:
                          - precall
                      - type: string
                        enum:
                          - incall
    Response_prompts.mutations.batchCreatePrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: string
            description: ID from table "prompts"
    Request_prompts.mutations.cleanupOldPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - keepCount
            - meetingId
            - type
          properties:
            keepCount:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            type:
              oneOf:
                - type: string
                  enum:
                    - precall
                - type: string
                  enum:
                    - incall
    Response_prompts.mutations.cleanupOldPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: number
    Request_prompts.mutations.createPrompt:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - content
            - meetingId
            - relevance
            - tags
            - type
          properties:
            content:
              type: string
            meetingId:
              type: string
              description: ID from table "meetings"
            relevance:
              type: number
            tags:
              type: array
              items:
                type: string
            type:
              oneOf:
                - type: string
                  enum:
                    - precall
                - type: string
                  enum:
                    - incall
    Response_prompts.mutations.createPrompt:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          description: ID from table "prompts"
    Request_prompts.mutations.markPromptAsUsed:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - promptId
            - usedAt
          properties:
            promptId:
              type: string
              description: ID from table "prompts"
            usedAt:
              type: number
    Response_prompts.mutations.markPromptAsUsed:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_prompts.mutations.updatePromptFeedback:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - feedback
            - promptId
          properties:
            feedback:
              oneOf:
                - type: string
                  enum:
                    - used
                - type: string
                  enum:
                    - dismissed
                - type: string
                  enum:
                    - upvoted
            promptId:
              type: string
              description: ID from table "prompts"
    Response_prompts.mutations.updatePromptFeedback:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_prompts.queries.getInCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.queries.getInCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - content
              - createdAt
              - relevance
              - tags
            properties:
              _id:
                type: string
                description: ID from table "prompts"
              content:
                type: string
              createdAt:
                type: number
              feedback:
                oneOf:
                  - type: string
                    enum:
                      - used
                  - type: string
                    enum:
                      - dismissed
                  - type: string
                    enum:
                      - upvoted
              relevance:
                type: number
              tags:
                type: array
                items:
                  type: string
              usedAt:
                type: number
    Request_prompts.queries.getPreCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.queries.getPreCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _id
              - content
              - createdAt
              - relevance
              - tags
            properties:
              _id:
                type: string
                description: ID from table "prompts"
              content:
                type: string
              createdAt:
                type: number
              feedback:
                oneOf:
                  - type: string
                    enum:
                      - used
                  - type: string
                    enum:
                      - dismissed
                  - type: string
                    enum:
                      - upvoted
              relevance:
                type: number
              tags:
                type: array
                items:
                  type: string
              usedAt:
                type: number
    Request_prompts.queries.getPromptById:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - promptId
          properties:
            promptId:
              type: string
              description: ID from table "prompts"
    Response_prompts.queries.getPromptById:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - content
            - createdAt
            - meetingId
            - relevance
            - tags
            - type
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "prompts"
            content:
              type: string
            createdAt:
              type: number
            feedback:
              oneOf:
                - type: string
                  enum:
                    - used
                - type: string
                  enum:
                    - dismissed
                - type: string
                  enum:
                    - upvoted
            meetingId:
              type: string
              description: ID from table "meetings"
            relevance:
              type: number
            tags:
              type: array
              items:
                type: string
            type:
              oneOf:
                - type: string
                  enum:
                    - precall
                - type: string
                  enum:
                    - incall
            usedAt:
              type: number
          nullable: true
    Request_prompts.queries.getPromptsByMeetingAndType:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - type
          properties:
            limit:
              type: number
            meetingId:
              type: string
              description: ID from table "meetings"
            type:
              oneOf:
                - type: string
                  enum:
                    - precall
                - type: string
                  enum:
                    - incall
    Response_prompts.queries.getPromptsByMeetingAndType:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: object
            required:
              - _creationTime
              - _id
              - content
              - createdAt
              - meetingId
              - relevance
              - tags
              - type
            properties:
              _creationTime:
                type: number
              _id:
                type: string
                description: ID from table "prompts"
              content:
                type: string
              createdAt:
                type: number
              feedback:
                oneOf:
                  - type: string
                    enum:
                      - used
                  - type: string
                    enum:
                      - dismissed
                  - type: string
                    enum:
                      - upvoted
              meetingId:
                type: string
                description: ID from table "meetings"
              relevance:
                type: number
              tags:
                type: array
                items:
                  type: string
              type:
                oneOf:
                  - type: string
                    enum:
                      - precall
                  - type: string
                    enum:
                      - incall
              usedAt:
                type: number
    Request_prompts.queries.subscribeToInCallPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
    Response_prompts.queries.subscribeToInCallPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - lastUpdated
            - prompts
          properties:
            lastUpdated:
              type: number
            prompts:
              type: array
              items:
                type: object
                required:
                  - _id
                  - content
                  - createdAt
                  - relevance
                  - tags
                properties:
                  _id:
                    type: string
                    description: ID from table "prompts"
                  content:
                    type: string
                  createdAt:
                    type: number
                  feedback:
                    oneOf:
                      - type: string
                        enum:
                          - used
                      - type: string
                        enum:
                          - dismissed
                      - type: string
                        enum:
                          - upvoted
                  relevance:
                    type: number
                  tags:
                    type: array
                    items:
                      type: string
                  usedAt:
                    type: number
    Request_prompts.scheduler.checkActiveMeetingsForLulls:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_prompts.scheduler.checkActiveMeetingsForLulls:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - lullsDetected
            - meetingsChecked
            - promptsGenerated
          properties:
            lullsDetected:
              type: number
            meetingsChecked:
              type: number
            promptsGenerated:
              type: number
    Request_prompts.scheduler.generatePromptsForTopicShifts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - meetingId
            - newTopics
            - previousTopics
          properties:
            meetingId:
              type: string
              description: ID from table "meetings"
            newTopics:
              type: array
              items:
                type: string
            previousTopics:
              type: array
              items:
                type: string
    Response_prompts.scheduler.generatePromptsForTopicShifts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: array
          items:
            type: string
            description: ID from table "prompts"
    Request_prompts.scheduler.cleanupOldPrompts:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          properties:
            olderThanMs:
              type: number
    Response_prompts.scheduler.cleanupOldPrompts:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - meetingsProcessed
            - promptsDeleted
          properties:
            meetingsProcessed:
              type: number
            promptsDeleted:
              type: number
    Request_types._template.listActiveUsers:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - onboardingComplete
            - paginationOpts
          properties:
            onboardingComplete:
              type: boolean
            paginationOpts:
              type: object
              required:
                - cursor
                - numItems
              properties:
                cursor:
                  type: string
                  nullable: true
                endCursor:
                  type: string
                  nullable: true
                id:
                  type: number
                maximumBytesRead:
                  type: number
                maximumRowsRead:
                  type: number
                numItems:
                  type: number
    Response_types._template.listActiveUsers:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - continueCursor
            - isDone
            - page
          properties:
            continueCursor:
              type: string
              nullable: true
            isDone:
              type: boolean
            page:
              type: array
              items:
                type: object
                required:
                  - _id
                  - isActive
                properties:
                  _id:
                    type: string
                    description: ID from table "users"
                  avatarUrl:
                    type: string
                  displayName:
                    type: string
                  isActive:
                    type: boolean
    Request_types._template.updateUserProfile:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            avatarUrl:
              type: string
            displayName:
              type: string
            userId:
              type: string
              description: ID from table "users"
    Response_types._template.updateUserProfile:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _id
            - isActive
          properties:
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            displayName:
              type: string
            isActive:
              type: boolean
          nullable: true
    Request_types._template.getUserByIdInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_types._template.getUserByIdInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
          nullable: true
    Request_types._template.createUserInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - email
            - workosUserId
          properties:
            displayName:
              type: string
            email:
              type: string
            workosUserId:
              type: string
    Response_types._template.createUserInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - _creationTime
            - _id
            - createdAt
            - email
            - isActive
            - updatedAt
            - workosUserId
          properties:
            _creationTime:
              type: number
            _id:
              type: string
              description: ID from table "users"
            avatarUrl:
              type: string
            createdAt:
              type: number
            displayName:
              type: string
            email:
              type: string
            isActive:
              type: boolean
            lastSeenAt:
              type: number
            onboardingComplete:
              type: boolean
            onboardingCompletedAt:
              type: number
            onboardingStartedAt:
              type: number
            orgId:
              type: string
            orgRole:
              type: string
            updatedAt:
              type: number
            workosUserId:
              type: string
    Request_types._template.processUserOnboarding:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - onboardingData
            - userId
          properties:
            onboardingData:
              type: object
            userId:
              type: string
              description: ID from table "users"
    Response_types._template.processUserOnboarding:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - message
            - success
          properties:
            message:
              type: string
            success:
              type: boolean
    Request_types._template.syncUserDataInternal:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_types._template.syncUserDataInternal:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    Request_types._template.getUserWithStats:
      type: object
      required:
        - args
      properties:
        args:
          type: object
          required:
            - userId
          properties:
            userId:
              type: string
              description: ID from table "users"
    Response_types._template.getUserWithStats:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: object
          required:
            - stats
            - user
          properties:
            stats:
              type: object
              required:
                - connectionCount
                - meetingCount
              properties:
                connectionCount:
                  type: number
                meetingCount:
                  type: number
            user:
              type: object
              required:
                - _id
                - isActive
              properties:
                _id:
                  type: string
                  description: ID from table "users"
                avatarUrl:
                  type: string
                displayName:
                  type: string
                isActive:
                  type: boolean
          nullable: true
    Request_system.maintenance.cleanupQueryOptimizers:
      type: object
      required:
        - args
      properties:
        args:
          type: object
    Response_system.maintenance.cleanupQueryOptimizers:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum:
            - success
            - error
        errorMessage:
          type: string
        errorData:
          type: object
        value:
          type: string
          nullable: true
    FailedResponse:
      type: object
      properties: {}
